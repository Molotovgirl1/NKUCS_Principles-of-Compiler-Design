INT	int	1	0
ID	a	1	3	0x55e1aa2851a8
ASSIGN	=	1	4
SUB	-	1	5
DECIMAL	1	1	6	1
COMMA	,	1	7
ID	b	1	8	0x55e1aa2851d0
ASSIGN	=	1	9
DECIMAL	1	1	10	1
SEMICOLON	;	1	11
INT	int	3	0
ID	inc_a	3	3	0x55e1aa2851f8
LPAREN	(	3	8
RPAREN	)	3	9
LBRACE	{	4	0
INT	int	5	0
ID	b	5	3	0x55e1aa2851d0
ASSIGN	=	5	4
ID	a	5	5	0x55e1aa2851a8
SEMICOLON	;	5	6
ID	b	6	0	0x55e1aa2851d0
ASSIGN	=	6	1
ID	b	6	2	0x55e1aa2851d0
ADD	+	6	3
DECIMAL	1	6	4	1
SEMICOLON	;	6	5
ID	a	7	0	0x55e1aa2851a8
ASSIGN	=	7	1
ID	b	7	2	0x55e1aa2851d0
SEMICOLON	;	7	3
RETURN	return	8	0
ID	a	8	6	0x55e1aa2851a8
SEMICOLON	;	8	7
RBRACE	}	9	0
INT	int	11	0
ID	main	11	3	0x55e1aa285220
LPAREN	(	11	7
RPAREN	)	11	8
LBRACE	{	12	0
INT	int	13	0
ID	k	13	3	0x55e1aa285248
ASSIGN	=	13	4
DECIMAL	5	13	5	5
SEMICOLON	;	13	6
WHILE	while	14	0
LPAREN	(	14	5
ID	k	14	6	0x55e1aa285248
GEQUAL	>=	14	7
DECIMAL	0	14	9	0
RPAREN	)	14	10
LBRACE	{	14	11
IF	if	15	0
LPAREN	(	15	2
ID	inc_a	15	3	0x55e1aa2851f8
LPAREN	(	15	8
RPAREN	)	15	9
AND	&&	15	10
ID	inc_a	15	12	0x55e1aa2851f8
LPAREN	(	15	17
RPAREN	)	15	18
AND	&&	15	19
ID	inc_a	15	21	0x55e1aa2851f8
LPAREN	(	15	26
RPAREN	)	15	27
RPAREN	)	15	28
LBRACE	{	15	29
ID	putint	16	0	0x55e1aa285270
LPAREN	(	16	6
ID	a	16	7	0x55e1aa2851a8
RPAREN	)	16	8
SEMICOLON	;	16	9
ID	putch	16	10	0x55e1aa285298
LPAREN	(	16	15
DECIMAL	32	16	16	32
RPAREN	)	16	18
SEMICOLON	;	16	19
ID	putint	16	20	0x55e1aa285270
LPAREN	(	16	26
ID	b	16	27	0x55e1aa2851d0
RPAREN	)	16	28
SEMICOLON	;	16	29
ID	putch	16	30	0x55e1aa285298
LPAREN	(	16	35
DECIMAL	10	16	36	10
RPAREN	)	16	38
SEMICOLON	;	16	39
RBRACE	}	17	0
IF	if	18	0
LPAREN	(	18	2
ID	inc_a	18	3	0x55e1aa2851f8
LPAREN	(	18	8
RPAREN	)	18	9
LESS	<	18	10
DECIMAL	14	18	11	14
OR	||	18	13
ID	inc_a	18	15	0x55e1aa2851f8
LPAREN	(	18	20
RPAREN	)	18	21
AND	&&	18	22
ID	inc_a	18	24	0x55e1aa2851f8
LPAREN	(	18	29
RPAREN	)	18	30
SUB	-	18	31
ID	inc_a	18	32	0x55e1aa2851f8
LPAREN	(	18	37
RPAREN	)	18	38
ADD	+	18	39
DECIMAL	1	18	40	1
RPAREN	)	18	41
LBRACE	{	18	42
ID	putint	19	0	0x55e1aa285270
LPAREN	(	19	6
ID	a	19	7	0x55e1aa2851a8
RPAREN	)	19	8
SEMICOLON	;	19	9
ID	putch	19	10	0x55e1aa285298
LPAREN	(	19	15
DECIMAL	10	19	16	10
RPAREN	)	19	18
SEMICOLON	;	19	19
ID	b	20	0	0x55e1aa2851d0
ASSIGN	=	20	1
ID	b	20	2	0x55e1aa2851d0
MUL	*	20	3
DECIMAL	2	20	4	2
SEMICOLON	;	20	5
RBRACE	}	21	0
ELSE	else	21	1
LBRACE	{	21	5
ID	inc_a	22	0	0x55e1aa2851f8
LPAREN	(	22	5
RPAREN	)	22	6
SEMICOLON	;	22	7
RBRACE	}	23	0
ID	k	24	0	0x55e1aa285248
ASSIGN	=	24	1
ID	k	24	2	0x55e1aa285248
SUB	-	24	3
DECIMAL	1	24	4	1
SEMICOLON	;	24	5
RBRACE	}	25	0
ID	putint	26	0	0x55e1aa285270
LPAREN	(	26	6
ID	a	26	7	0x55e1aa2851a8
RPAREN	)	26	8
SEMICOLON	;	26	9
ID	putch	26	10	0x55e1aa285298
LPAREN	(	26	15
DECIMAL	32	26	16	32
RPAREN	)	26	18
SEMICOLON	;	26	19
ID	putint	26	20	0x55e1aa285270
LPAREN	(	26	26
ID	b	26	27	0x55e1aa2851d0
RPAREN	)	26	28
SEMICOLON	;	26	29
ID	putch	26	30	0x55e1aa285298
LPAREN	(	26	35
DECIMAL	10	26	36	10
RPAREN	)	26	38
SEMICOLON	;	26	39
RETURN	return	27	0
ID	a	27	6	0x55e1aa2851a8
SEMICOLON	;	27	7
RBRACE	}	28	0
