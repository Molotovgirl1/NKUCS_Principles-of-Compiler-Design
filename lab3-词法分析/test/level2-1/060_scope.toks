INT	int	0	0
ID	a	0	3	0x555ee60861a8
ASSIGN	=	0	4
DECIMAL	7	0	5	7
SEMICOLON	;	0	6
INT	int	2	0
ID	func	2	3	0x555ee60861d0
LPAREN	(	2	7
RPAREN	)	2	8
LBRACE	{	2	9
INT	int	3	0
ID	b	3	3	0x555ee60861f8
ASSIGN	=	3	4
ID	a	3	5	0x555ee60861a8
SEMICOLON	;	3	6
INT	int	4	0
ID	a	4	3	0x555ee60861a8
ASSIGN	=	4	4
DECIMAL	1	4	5	1
SEMICOLON	;	4	6
IF	if	5	0
LPAREN	(	5	2
ID	a	5	3	0x555ee60861a8
EQUAL	==	5	4
ID	b	5	6	0x555ee60861f8
RPAREN	)	5	7
LBRACE	{	5	8
ID	a	6	0	0x555ee60861a8
ASSIGN	=	6	1
ID	a	6	2	0x555ee60861a8
ADD	+	6	3
DECIMAL	1	6	4	1
SEMICOLON	;	6	5
RETURN	return	7	0
DECIMAL	1	7	6	1
SEMICOLON	;	7	7
RBRACE	}	8	0
ELSE	else	9	0
RETURN	return	10	0
DECIMAL	0	10	6	0
SEMICOLON	;	10	7
RBRACE	}	11	0
INT	int	13	0
ID	main	13	3	0x555ee6086220
LPAREN	(	13	7
RPAREN	)	13	8
LBRACE	{	13	9
INT	int	14	0
ID	result	14	3	0x555ee6086248
ASSIGN	=	14	9
DECIMAL	0	14	10	0
SEMICOLON	;	14	11
INT	int	15	0
ID	i	15	3	0x555ee6086270
ASSIGN	=	15	4
DECIMAL	0	15	5	0
SEMICOLON	;	15	6
WHILE	while	16	0
LPAREN	(	16	5
ID	i	16	6	0x555ee6086270
LESS	<	16	7
DECIMAL	100	16	8	100
RPAREN	)	16	11
LBRACE	{	16	12
IF	if	17	0
LPAREN	(	17	2
ID	func	17	3	0x555ee60861d0
LPAREN	(	17	7
RPAREN	)	17	8
EQUAL	==	17	9
DECIMAL	1	17	11	1
RPAREN	)	17	12
ID	result	18	0	0x555ee6086248
ASSIGN	=	18	6
ID	result	18	7	0x555ee6086248
ADD	+	18	13
DECIMAL	1	18	14	1
SEMICOLON	;	18	15
ID	i	19	0	0x555ee6086270
ASSIGN	=	19	1
ID	i	19	2	0x555ee6086270
ADD	+	19	3
DECIMAL	1	19	4	1
SEMICOLON	;	19	5
RBRACE	}	20	0
IF	if	21	0
LPAREN	(	21	2
ID	result	21	3	0x555ee6086248
LESS	<	21	9
DECIMAL	100	21	10	100
RPAREN	)	21	13
ID	putint	22	0	0x555ee6086298
LPAREN	(	22	6
DECIMAL	1	22	7	1
RPAREN	)	22	8
SEMICOLON	;	22	9
ELSE	else	23	0
ID	putint	24	0	0x555ee6086298
LPAREN	(	24	6
DECIMAL	0	24	7	0
RPAREN	)	24	8
SEMICOLON	;	24	9
RETURN	return	25	0
DECIMAL	0	25	6	0
SEMICOLON	;	25	7
RBRACE	}	26	0
