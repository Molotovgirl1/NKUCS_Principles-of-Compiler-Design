INT	int	0	0
ID	k	0	3	0x559161c661a8
SEMICOLON	;	0	4
INT	int	2	0
ID	main	2	3	0x559161c661d0
LPAREN	(	2	7
RPAREN	)	2	8
LBRACE	{	2	9
ID	k	3	0	0x559161c661a8
ASSIGN	=	3	1
DECIMAL	3389	3	2	3389
SEMICOLON	;	3	6
IF	if	4	0
LPAREN	(	4	2
ID	k	4	3	0x559161c661a8
LESS	<	4	4
DECIMAL	10000	4	5	10000
RPAREN	)	4	10
LBRACE	{	4	11
ID	k	5	0	0x559161c661a8
ASSIGN	=	5	1
ID	k	5	2	0x559161c661a8
ADD	+	5	3
DECIMAL	1	5	4	1
SEMICOLON	;	5	5
INT	int	6	0
ID	k	6	3	0x559161c661a8
ASSIGN	=	6	4
DECIMAL	112	6	5	112
SEMICOLON	;	6	8
WHILE	while	7	0
LPAREN	(	7	5
ID	k	7	6	0x559161c661a8
GREATER	>	7	7
DECIMAL	10	7	8	10
RPAREN	)	7	10
LBRACE	{	7	11
ID	k	8	0	0x559161c661a8
ASSIGN	=	8	1
ID	k	8	2	0x559161c661a8
SUB	-	8	3
DECIMAL	88	8	4	88
SEMICOLON	;	8	6
IF	if	9	0
LPAREN	(	9	2
ID	k	9	3	0x559161c661a8
LESS	<	9	4
DECIMAL	1000	9	5	1000
RPAREN	)	9	9
LBRACE	{	9	10
INT	int	10	0
ID	g	10	3	0x559161c661f8
ASSIGN	=	10	4
DECIMAL	9	10	5	9
SEMICOLON	;	10	6
LBRACE	{	11	0
INT	int	12	0
ID	l	12	3	0x559161c66220
ASSIGN	=	12	4
DECIMAL	11	12	5	11
SEMICOLON	;	12	7
LBRACE	{	13	0
ID	g	14	0	0x559161c661f8
ASSIGN	=	14	1
DECIMAL	10	14	2	10
SEMICOLON	;	14	4
ID	k	15	0	0x559161c661a8
ASSIGN	=	15	1
ID	k	15	2	0x559161c661a8
SUB	-	15	3
ID	g	15	4	0x559161c661f8
SEMICOLON	;	15	5
INT	int	16	0
ID	g	16	3	0x559161c661f8
ASSIGN	=	16	4
DECIMAL	11	16	5	11
SEMICOLON	;	16	7
ID	k	17	0	0x559161c661a8
ASSIGN	=	17	1
ID	k	17	2	0x559161c661a8
ADD	+	17	3
ID	g	17	4	0x559161c661f8
ADD	+	17	5
ID	l	17	6	0x559161c66220
SEMICOLON	;	17	7
RBRACE	}	18	0
RBRACE	}	19	0
RBRACE	}	20	0
RBRACE	}	21	0
ID	putint	22	0	0x559161c66248
LPAREN	(	22	6
ID	k	22	7	0x559161c661a8
RPAREN	)	22	8
SEMICOLON	;	22	9
RBRACE	}	23	0
RETURN	return	24	0
ID	k	24	6	0x559161c661a8
SEMICOLON	;	24	7
RBRACE	}	25	0
