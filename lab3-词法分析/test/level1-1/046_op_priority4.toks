INT	int	0	0
ID	a	0	3	0x55efe79781a8
SEMICOLON	;	0	4
INT	int	1	0
ID	b	1	3	0x55efe79781d0
SEMICOLON	;	1	4
INT	int	2	0
ID	c	2	3	0x55efe79781f8
SEMICOLON	;	2	4
INT	int	3	0
ID	d	3	3	0x55efe7978220
SEMICOLON	;	3	4
INT	int	4	0
ID	e	4	3	0x55efe7978248
SEMICOLON	;	4	4
INT	int	5	0
ID	main	5	3	0x55efe7978270
LPAREN	(	5	7
RPAREN	)	5	8
LBRACE	{	6	0
ID	a	7	0	0x55efe79781a8
ASSIGN	=	7	1
ID	getint	7	2	0x55efe7978298
LPAREN	(	7	8
RPAREN	)	7	9
SEMICOLON	;	7	10
ID	b	8	0	0x55efe79781d0
ASSIGN	=	8	1
ID	getint	8	2	0x55efe7978298
LPAREN	(	8	8
RPAREN	)	8	9
SEMICOLON	;	8	10
ID	c	9	0	0x55efe79781f8
ASSIGN	=	9	1
ID	getint	9	2	0x55efe7978298
LPAREN	(	9	8
RPAREN	)	9	9
SEMICOLON	;	9	10
ID	d	10	0	0x55efe7978220
ASSIGN	=	10	1
ID	getint	10	2	0x55efe7978298
LPAREN	(	10	8
RPAREN	)	10	9
SEMICOLON	;	10	10
ID	e	11	0	0x55efe7978248
ASSIGN	=	11	1
ID	getint	11	2	0x55efe7978298
LPAREN	(	11	8
RPAREN	)	11	9
SEMICOLON	;	11	10
INT	int	12	0
ID	flag	12	3	0x55efe79782c0
ASSIGN	=	12	7
DECIMAL	0	12	8	0
SEMICOLON	;	12	9
IF	if	13	0
LPAREN	(	13	2
ID	a	13	3	0x55efe79781a8
SUB	-	13	4
ID	b	13	5	0x55efe79781d0
MUL	*	13	6
ID	c	13	7	0x55efe79781f8
NEQUAL	!=	13	8
ID	d	13	10	0x55efe7978220
SUB	-	13	11
ID	a	13	12	0x55efe79781a8
DIV	/	13	13
ID	c	13	14	0x55efe79781f8
OR	||	13	15
ID	a	13	17	0x55efe79781a8
MUL	*	13	18
ID	b	13	19	0x55efe79781d0
DIV	/	13	20
ID	c	13	21	0x55efe79781f8
EQUAL	==	13	22
ID	e	13	24	0x55efe7978248
ADD	+	13	25
ID	d	13	26	0x55efe7978220
OR	||	13	27
ID	a	13	29	0x55efe79781a8
ADD	+	13	30
ID	b	13	31	0x55efe79781d0
ADD	+	13	32
ID	c	13	33	0x55efe79781f8
EQUAL	==	13	34
ID	d	13	36	0x55efe7978220
ADD	+	13	37
ID	e	13	38	0x55efe7978248
RPAREN	)	13	39
LBRACE	{	14	0
ID	flag	15	0	0x55efe79782c0
ASSIGN	=	15	4
DECIMAL	1	15	5	1
SEMICOLON	;	15	6
RBRACE	}	16	0
RETURN	return	17	0
ID	flag	17	6	0x55efe79782c0
SEMICOLON	;	17	10
RBRACE	}	18	0
