INT	int	0	0
ID	main	0	3	0x556238ebc1a8
LPAREN	(	0	7
RPAREN	)	0	8
LBRACE	{	0	9
INT	int	1	0
ID	a	1	3	0x556238ebc1d0
COMMA	,	1	4
ID	b	1	5	0x556238ebc1f8
SEMICOLON	;	1	6
ID	a	2	0	0x556238ebc1d0
ASSIGN	=	2	1
OCTAL	070	2	2	56
SEMICOLON	;	2	5
ID	b	3	0	0x556238ebc1f8
ASSIGN	=	3	1
HEXADECIMAL	0x4	3	2	4
SEMICOLON	;	3	5
ID	a	4	0	0x556238ebc1d0
ASSIGN	=	4	1
ID	a	4	2	0x556238ebc1d0
SUB	-	4	3
SUB	-	4	4
DECIMAL	4	4	5	4
ADD	+	4	6
ADD	+	4	7
ID	b	4	8	0x556238ebc1f8
SEMICOLON	;	4	9
IF	if	5	0
LPAREN	(	5	2
ADD	+	5	3
SUB	-	5	4
NOT	!	5	5
NOT	!	5	6
NOT	!	5	7
ID	a	5	8	0x556238ebc1d0
RPAREN	)	5	9
LBRACE	{	5	10
ID	a	6	0	0x556238ebc1d0
ASSIGN	=	6	1
SUB	-	6	2
SUB	-	6	3
SUB	-	6	4
DECIMAL	1	6	5	1
SEMICOLON	;	6	6
RBRACE	}	7	0
ELSE	else	8	0
LBRACE	{	8	4
ID	a	9	0	0x556238ebc1d0
ASSIGN	=	9	1
DECIMAL	0	9	2	0
ADD	+	9	3
ADD	+	9	4
ID	b	9	5	0x556238ebc1f8
SEMICOLON	;	9	6
RBRACE	}	10	0
ID	putint	11	0	0x556238ebc220
LPAREN	(	11	6
ID	a	11	7	0x556238ebc1d0
RPAREN	)	11	8
SEMICOLON	;	11	9
RETURN	return	12	0
DECIMAL	0	12	6	0
SEMICOLON	;	12	7
RBRACE	}	13	0
