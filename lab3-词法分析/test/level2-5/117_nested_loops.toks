INT	int	0	0
ID	arr1	0	3	0x55ef7eea51a8
LBRACKET	[	0	7
DECIMAL	10	0	8	10
RBRACKET	]	0	10
LBRACKET	[	0	11
DECIMAL	2	0	12	2
RBRACKET	]	0	13
LBRACKET	[	0	14
DECIMAL	3	0	15	3
RBRACKET	]	0	16
LBRACKET	[	0	17
DECIMAL	4	0	18	4
RBRACKET	]	0	19
LBRACKET	[	0	20
DECIMAL	5	0	21	5
RBRACKET	]	0	22
LBRACKET	[	0	23
DECIMAL	6	0	24	6
RBRACKET	]	0	25
LBRACKET	[	0	26
DECIMAL	2	0	27	2
RBRACKET	]	0	28
SEMICOLON	;	0	29
INT	int	1	0
ID	arr2	1	3	0x55ef7eea51d0
LBRACKET	[	1	7
DECIMAL	10	1	8	10
RBRACKET	]	1	10
LBRACKET	[	1	11
DECIMAL	2	1	12	2
RBRACKET	]	1	13
LBRACKET	[	1	14
DECIMAL	3	1	15	3
RBRACKET	]	1	16
LBRACKET	[	1	17
DECIMAL	2	1	18	2
RBRACKET	]	1	19
LBRACKET	[	1	20
DECIMAL	4	1	21	4
RBRACKET	]	1	22
LBRACKET	[	1	23
DECIMAL	8	1	24	8
RBRACKET	]	1	25
LBRACKET	[	1	26
DECIMAL	7	1	27	7
RBRACKET	]	1	28
SEMICOLON	;	1	29
VOID	void	3	0
ID	loop1	3	4	0x55ef7eea51f8
LPAREN	(	3	9
INT	int	3	10
ID	x	3	13	0x55ef7eea5220
COMMA	,	3	14
INT	int	3	15
ID	y	3	18	0x55ef7eea5248
RPAREN	)	3	19
LBRACE	{	3	20
INT	int	4	0
ID	a	4	3	0x55ef7eea5270
COMMA	,	4	4
ID	b	4	5	0x55ef7eea5298
COMMA	,	4	6
ID	c	4	7	0x55ef7eea52c0
COMMA	,	4	8
ID	d	4	9	0x55ef7eea52e8
COMMA	,	4	10
ID	e	4	11	0x55ef7eea5310
COMMA	,	4	12
ID	f	4	13	0x55ef7eea5338
COMMA	,	4	14
ID	g	4	15	0x55ef7eea5360
SEMICOLON	;	4	16
ID	a	5	0	0x55ef7eea5270
ASSIGN	=	5	1
DECIMAL	0	5	2	0
SEMICOLON	;	5	3
WHILE	while	6	0
LPAREN	(	6	5
ID	a	6	6	0x55ef7eea5270
LESS	<	6	7
ID	x	6	8	0x55ef7eea5220
AND	&&	6	9
ID	a	6	11	0x55ef7eea5270
LESS	<	6	12
ID	y	6	13	0x55ef7eea5248
RPAREN	)	6	14
LBRACE	{	6	15
ID	b	7	0	0x55ef7eea5298
ASSIGN	=	7	1
DECIMAL	0	7	2	0
SEMICOLON	;	7	3
WHILE	while	8	0
LPAREN	(	8	5
ID	b	8	6	0x55ef7eea5298
LESS	<	8	7
DECIMAL	2	8	8	2
RPAREN	)	8	9
LBRACE	{	8	10
ID	c	9	0	0x55ef7eea52c0
ASSIGN	=	9	1
DECIMAL	0	9	2	0
SEMICOLON	;	9	3
WHILE	while	10	0
LPAREN	(	10	5
ID	c	10	6	0x55ef7eea52c0
LESS	<	10	7
DECIMAL	3	10	8	3
RPAREN	)	10	9
LBRACE	{	10	10
ID	d	11	0	0x55ef7eea52e8
ASSIGN	=	11	1
DECIMAL	0	11	2	0
SEMICOLON	;	11	3
WHILE	while	12	0
LPAREN	(	12	5
ID	d	12	6	0x55ef7eea52e8
LESS	<	12	7
DECIMAL	4	12	8	4
RPAREN	)	12	9
LBRACE	{	12	10
ID	e	13	0	0x55ef7eea5310
ASSIGN	=	13	1
DECIMAL	0	13	2	0
SEMICOLON	;	13	3
WHILE	while	14	0
LPAREN	(	14	5
ID	e	14	6	0x55ef7eea5310
LESS	<	14	7
DECIMAL	5	14	8	5
RPAREN	)	14	9
LBRACE	{	14	10
ID	f	15	0	0x55ef7eea5338
ASSIGN	=	15	1
DECIMAL	0	15	2	0
SEMICOLON	;	15	3
WHILE	while	16	0
LPAREN	(	16	5
ID	f	16	6	0x55ef7eea5338
LESS	<	16	7
DECIMAL	6	16	8	6
RPAREN	)	16	9
LBRACE	{	16	10
ID	g	17	0	0x55ef7eea5360
ASSIGN	=	17	1
DECIMAL	0	17	2	0
SEMICOLON	;	17	3
WHILE	while	18	0
LPAREN	(	18	5
ID	g	18	6	0x55ef7eea5360
LESS	<	18	7
DECIMAL	2	18	8	2
RPAREN	)	18	9
LBRACE	{	18	10
ID	arr1	19	0	0x55ef7eea51a8
LBRACKET	[	19	4
ID	a	19	5	0x55ef7eea5270
RBRACKET	]	19	6
LBRACKET	[	19	7
ID	b	19	8	0x55ef7eea5298
RBRACKET	]	19	9
LBRACKET	[	19	10
ID	c	19	11	0x55ef7eea52c0
RBRACKET	]	19	12
LBRACKET	[	19	13
ID	d	19	14	0x55ef7eea52e8
RBRACKET	]	19	15
LBRACKET	[	19	16
ID	e	19	17	0x55ef7eea5310
RBRACKET	]	19	18
LBRACKET	[	19	19
ID	f	19	20	0x55ef7eea5338
RBRACKET	]	19	21
LBRACKET	[	19	22
ID	g	19	23	0x55ef7eea5360
RBRACKET	]	19	24
ASSIGN	=	19	25
ID	a	19	26	0x55ef7eea5270
ADD	+	19	27
ID	b	19	28	0x55ef7eea5298
ADD	+	19	29
ID	c	19	30	0x55ef7eea52c0
ADD	+	19	31
ID	d	19	32	0x55ef7eea52e8
ADD	+	19	33
ID	e	19	34	0x55ef7eea5310
ADD	+	19	35
ID	f	19	36	0x55ef7eea5338
ADD	+	19	37
ID	g	19	38	0x55ef7eea5360
ADD	+	19	39
ID	x	19	40	0x55ef7eea5220
ADD	+	19	41
ID	y	19	42	0x55ef7eea5248
SEMICOLON	;	19	43
ID	g	20	0	0x55ef7eea5360
ASSIGN	=	20	1
ID	g	20	2	0x55ef7eea5360
ADD	+	20	3
DECIMAL	1	20	4	1
SEMICOLON	;	20	5
RBRACE	}	21	0
ID	f	22	0	0x55ef7eea5338
ASSIGN	=	22	1
ID	f	22	2	0x55ef7eea5338
ADD	+	22	3
DECIMAL	1	22	4	1
SEMICOLON	;	22	5
RBRACE	}	23	0
ID	e	24	0	0x55ef7eea5310
ASSIGN	=	24	1
ID	e	24	2	0x55ef7eea5310
ADD	+	24	3
DECIMAL	1	24	4	1
SEMICOLON	;	24	5
RBRACE	}	25	0
ID	d	26	0	0x55ef7eea52e8
ASSIGN	=	26	1
ID	d	26	2	0x55ef7eea52e8
ADD	+	26	3
DECIMAL	1	26	4	1
SEMICOLON	;	26	5
RBRACE	}	27	0
ID	c	28	0	0x55ef7eea52c0
ASSIGN	=	28	1
ID	c	28	2	0x55ef7eea52c0
ADD	+	28	3
DECIMAL	1	28	4	1
SEMICOLON	;	28	5
RBRACE	}	29	0
ID	b	30	0	0x55ef7eea5298
ASSIGN	=	30	1
ID	b	30	2	0x55ef7eea5298
ADD	+	30	3
DECIMAL	1	30	4	1
SEMICOLON	;	30	5
RBRACE	}	31	0
ID	a	32	0	0x55ef7eea5270
ASSIGN	=	32	1
ID	a	32	2	0x55ef7eea5270
ADD	+	32	3
DECIMAL	1	32	4	1
SEMICOLON	;	32	5
RBRACE	}	33	0
RBRACE	}	34	0
VOID	void	36	0
ID	loop2	36	4	0x55ef7eea5388
LPAREN	(	36	9
RPAREN	)	36	10
LBRACE	{	36	11
INT	int	37	0
ID	a	37	3	0x55ef7eea5270
COMMA	,	37	4
ID	b	37	5	0x55ef7eea5298
COMMA	,	37	6
ID	c	37	7	0x55ef7eea52c0
COMMA	,	37	8
ID	d	37	9	0x55ef7eea52e8
COMMA	,	37	10
ID	e	37	11	0x55ef7eea5310
COMMA	,	37	12
ID	f	37	13	0x55ef7eea5338
COMMA	,	37	14
ID	g	37	15	0x55ef7eea5360
SEMICOLON	;	37	16
ID	a	38	0	0x55ef7eea5270
ASSIGN	=	38	1
DECIMAL	0	38	2	0
SEMICOLON	;	38	3
WHILE	while	39	0
LPAREN	(	39	5
ID	a	39	6	0x55ef7eea5270
LESS	<	39	7
DECIMAL	10	39	8	10
RPAREN	)	39	10
LBRACE	{	39	11
ID	b	40	0	0x55ef7eea5298
ASSIGN	=	40	1
DECIMAL	0	40	2	0
SEMICOLON	;	40	3
WHILE	while	41	0
LPAREN	(	41	5
ID	b	41	6	0x55ef7eea5298
LESS	<	41	7
DECIMAL	2	41	8	2
RPAREN	)	41	9
LBRACE	{	41	10
ID	c	42	0	0x55ef7eea52c0
ASSIGN	=	42	1
DECIMAL	0	42	2	0
SEMICOLON	;	42	3
WHILE	while	43	0
LPAREN	(	43	5
ID	c	43	6	0x55ef7eea52c0
LESS	<	43	7
DECIMAL	3	43	8	3
RPAREN	)	43	9
LBRACE	{	43	10
ID	d	44	0	0x55ef7eea52e8
ASSIGN	=	44	1
DECIMAL	0	44	2	0
SEMICOLON	;	44	3
WHILE	while	45	0
LPAREN	(	45	5
ID	d	45	6	0x55ef7eea52e8
LESS	<	45	7
DECIMAL	2	45	8	2
RPAREN	)	45	9
LBRACE	{	45	10
ID	e	46	0	0x55ef7eea5310
ASSIGN	=	46	1
DECIMAL	0	46	2	0
SEMICOLON	;	46	3
WHILE	while	47	0
LPAREN	(	47	5
ID	e	47	6	0x55ef7eea5310
LESS	<	47	7
DECIMAL	4	47	8	4
RPAREN	)	47	9
LBRACE	{	47	10
ID	f	48	0	0x55ef7eea5338
ASSIGN	=	48	1
DECIMAL	0	48	2	0
SEMICOLON	;	48	3
WHILE	while	49	0
LPAREN	(	49	5
ID	f	49	6	0x55ef7eea5338
LESS	<	49	7
DECIMAL	8	49	8	8
RPAREN	)	49	9
LBRACE	{	49	10
ID	g	50	0	0x55ef7eea5360
ASSIGN	=	50	1
DECIMAL	0	50	2	0
SEMICOLON	;	50	3
WHILE	while	51	0
LPAREN	(	51	5
ID	g	51	6	0x55ef7eea5360
LESS	<	51	7
DECIMAL	7	51	8	7
RPAREN	)	51	9
LBRACE	{	51	10
ID	arr2	52	0	0x55ef7eea51d0
LBRACKET	[	52	4
ID	a	52	5	0x55ef7eea5270
RBRACKET	]	52	6
LBRACKET	[	52	7
ID	b	52	8	0x55ef7eea5298
RBRACKET	]	52	9
LBRACKET	[	52	10
ID	c	52	11	0x55ef7eea52c0
RBRACKET	]	52	12
LBRACKET	[	52	13
ID	d	52	14	0x55ef7eea52e8
RBRACKET	]	52	15
LBRACKET	[	52	16
ID	e	52	17	0x55ef7eea5310
RBRACKET	]	52	18
LBRACKET	[	52	19
ID	f	52	20	0x55ef7eea5338
RBRACKET	]	52	21
LBRACKET	[	52	22
ID	g	52	23	0x55ef7eea5360
RBRACKET	]	52	24
ASSIGN	=	52	25
ID	a	52	26	0x55ef7eea5270
ADD	+	52	27
ID	b	52	28	0x55ef7eea5298
ADD	+	52	29
ID	d	52	30	0x55ef7eea52e8
ADD	+	52	31
ID	g	52	32	0x55ef7eea5360
SEMICOLON	;	52	33
ID	g	53	0	0x55ef7eea5360
ASSIGN	=	53	1
ID	g	53	2	0x55ef7eea5360
ADD	+	53	3
DECIMAL	1	53	4	1
SEMICOLON	;	53	5
RBRACE	}	54	0
ID	f	55	0	0x55ef7eea5338
ASSIGN	=	55	1
ID	f	55	2	0x55ef7eea5338
ADD	+	55	3
DECIMAL	1	55	4	1
SEMICOLON	;	55	5
RBRACE	}	56	0
ID	e	57	0	0x55ef7eea5310
ASSIGN	=	57	1
ID	e	57	2	0x55ef7eea5310
ADD	+	57	3
DECIMAL	1	57	4	1
SEMICOLON	;	57	5
RBRACE	}	58	0
ID	d	59	0	0x55ef7eea52e8
ASSIGN	=	59	1
ID	d	59	2	0x55ef7eea52e8
ADD	+	59	3
DECIMAL	1	59	4	1
SEMICOLON	;	59	5
RBRACE	}	60	0
ID	c	61	0	0x55ef7eea52c0
ASSIGN	=	61	1
ID	c	61	2	0x55ef7eea52c0
ADD	+	61	3
DECIMAL	1	61	4	1
SEMICOLON	;	61	5
RBRACE	}	62	0
ID	b	63	0	0x55ef7eea5298
ASSIGN	=	63	1
ID	b	63	2	0x55ef7eea5298
ADD	+	63	3
DECIMAL	1	63	4	1
SEMICOLON	;	63	5
RBRACE	}	64	0
ID	a	65	0	0x55ef7eea5270
ASSIGN	=	65	1
ID	a	65	2	0x55ef7eea5270
ADD	+	65	3
DECIMAL	1	65	4	1
SEMICOLON	;	65	5
RBRACE	}	66	0
RBRACE	}	67	0
INT	int	69	0
ID	loop3	69	3	0x55ef7eea53b0
LPAREN	(	69	8
INT	int	69	9
ID	h	69	12	0x55ef7eea53d8
COMMA	,	69	13
INT	int	69	14
ID	i	69	17	0x55ef7eea5400
COMMA	,	69	18
INT	int	69	19
ID	j	69	22	0x55ef7eea5428
COMMA	,	69	23
INT	int	69	24
ID	k	69	27	0x55ef7eea5450
COMMA	,	69	28
INT	int	69	29
ID	l	69	32	0x55ef7eea5478
COMMA	,	69	33
INT	int	69	34
ID	m	69	37	0x55ef7eea54a0
COMMA	,	69	38
INT	int	69	39
ID	n	69	42	0x55ef7eea54c8
RPAREN	)	69	43
LBRACE	{	69	44
INT	int	70	0
ID	a	70	3	0x55ef7eea5270
COMMA	,	70	4
ID	b	70	5	0x55ef7eea5298
COMMA	,	70	6
ID	c	70	7	0x55ef7eea52c0
COMMA	,	70	8
ID	d	70	9	0x55ef7eea52e8
COMMA	,	70	10
ID	e	70	11	0x55ef7eea5310
COMMA	,	70	12
ID	f	70	13	0x55ef7eea5338
COMMA	,	70	14
ID	g	70	15	0x55ef7eea5360
SEMICOLON	;	70	16
INT	int	71	0
ID	ans	71	3	0x55ef7eea54f0
ASSIGN	=	71	6
DECIMAL	0	71	7	0
SEMICOLON	;	71	8
ID	a	72	0	0x55ef7eea5270
ASSIGN	=	72	1
DECIMAL	0	72	2	0
SEMICOLON	;	72	3
WHILE	while	73	0
LPAREN	(	73	5
ID	a	73	6	0x55ef7eea5270
LESS	<	73	7
DECIMAL	10	73	8	10
RPAREN	)	73	10
LBRACE	{	73	11
ID	b	74	0	0x55ef7eea5298
ASSIGN	=	74	1
DECIMAL	0	74	2	0
SEMICOLON	;	74	3
WHILE	while	75	0
LPAREN	(	75	5
ID	b	75	6	0x55ef7eea5298
LESS	<	75	7
DECIMAL	100	75	8	100
RPAREN	)	75	11
LBRACE	{	75	12
ID	c	76	0	0x55ef7eea52c0
ASSIGN	=	76	1
DECIMAL	0	76	2	0
SEMICOLON	;	76	3
WHILE	while	77	0
LPAREN	(	77	5
ID	c	77	6	0x55ef7eea52c0
LESS	<	77	7
DECIMAL	1000	77	8	1000
RPAREN	)	77	12
LBRACE	{	77	13
ID	d	78	0	0x55ef7eea52e8
ASSIGN	=	78	1
DECIMAL	0	78	2	0
SEMICOLON	;	78	3
WHILE	while	79	0
LPAREN	(	79	5
ID	d	79	6	0x55ef7eea52e8
LESS	<	79	7
DECIMAL	10000	79	8	10000
RPAREN	)	79	13
LBRACE	{	79	14
ID	e	80	0	0x55ef7eea5310
ASSIGN	=	80	1
DECIMAL	0	80	2	0
SEMICOLON	;	80	3
WHILE	while	81	0
LPAREN	(	81	5
ID	e	81	6	0x55ef7eea5310
LESS	<	81	7
DECIMAL	100000	81	8	100000
RPAREN	)	81	14
LBRACE	{	81	15
ID	f	82	0	0x55ef7eea5338
ASSIGN	=	82	1
DECIMAL	0	82	2	0
SEMICOLON	;	82	3
WHILE	while	83	0
LPAREN	(	83	5
ID	f	83	6	0x55ef7eea5338
LESS	<	83	7
DECIMAL	1000000	83	8	1000000
RPAREN	)	83	15
LBRACE	{	83	16
ID	g	84	0	0x55ef7eea5360
ASSIGN	=	84	1
DECIMAL	0	84	2	0
SEMICOLON	;	84	3
WHILE	while	85	0
LPAREN	(	85	5
ID	g	85	6	0x55ef7eea5360
LESS	<	85	7
DECIMAL	10000000	85	8	10000000
RPAREN	)	85	16
LBRACE	{	85	17
ID	ans	86	0	0x55ef7eea54f0
ASSIGN	=	86	3
ID	ans	86	4	0x55ef7eea54f0
MOD	%	86	7
DECIMAL	817	86	8	817
ADD	+	86	11
ID	arr1	86	12	0x55ef7eea51a8
LBRACKET	[	86	16
ID	a	86	17	0x55ef7eea5270
RBRACKET	]	86	18
LBRACKET	[	86	19
ID	b	86	20	0x55ef7eea5298
RBRACKET	]	86	21
LBRACKET	[	86	22
ID	c	86	23	0x55ef7eea52c0
RBRACKET	]	86	24
LBRACKET	[	86	25
ID	d	86	26	0x55ef7eea52e8
RBRACKET	]	86	27
LBRACKET	[	86	28
ID	e	86	29	0x55ef7eea5310
RBRACKET	]	86	30
LBRACKET	[	86	31
ID	f	86	32	0x55ef7eea5338
RBRACKET	]	86	33
LBRACKET	[	86	34
ID	g	86	35	0x55ef7eea5360
RBRACKET	]	86	36
ADD	+	86	37
ID	arr2	86	38	0x55ef7eea51d0
LBRACKET	[	86	42
ID	a	86	43	0x55ef7eea5270
RBRACKET	]	86	44
LBRACKET	[	86	45
ID	b	86	46	0x55ef7eea5298
RBRACKET	]	86	47
LBRACKET	[	86	48
ID	c	86	49	0x55ef7eea52c0
RBRACKET	]	86	50
LBRACKET	[	86	51
ID	d	86	52	0x55ef7eea52e8
RBRACKET	]	86	53
LBRACKET	[	86	54
ID	e	86	55	0x55ef7eea5310
RBRACKET	]	86	56
LBRACKET	[	86	57
ID	f	86	58	0x55ef7eea5338
RBRACKET	]	86	59
LBRACKET	[	86	60
ID	g	86	61	0x55ef7eea5360
RBRACKET	]	86	62
SEMICOLON	;	86	63
ID	g	87	0	0x55ef7eea5360
ASSIGN	=	87	1
ID	g	87	2	0x55ef7eea5360
ADD	+	87	3
DECIMAL	1	87	4	1
SEMICOLON	;	87	5
IF	if	88	0
LPAREN	(	88	2
ID	g	88	3	0x55ef7eea5360
GEQUAL	>=	88	4
ID	n	88	6	0x55ef7eea54c8
RPAREN	)	88	7
BREAK	break	88	8
SEMICOLON	;	88	13
RBRACE	}	89	0
ID	f	90	0	0x55ef7eea5338
ASSIGN	=	90	1
ID	f	90	2	0x55ef7eea5338
ADD	+	90	3
DECIMAL	1	90	4	1
SEMICOLON	;	90	5
IF	if	91	0
LPAREN	(	91	2
ID	f	91	3	0x55ef7eea5338
GEQUAL	>=	91	4
ID	m	91	6	0x55ef7eea54a0
RPAREN	)	91	7
BREAK	break	91	8
SEMICOLON	;	91	13
RBRACE	}	92	0
ID	e	93	0	0x55ef7eea5310
ASSIGN	=	93	1
ID	e	93	2	0x55ef7eea5310
ADD	+	93	3
DECIMAL	1	93	4	1
SEMICOLON	;	93	5
IF	if	94	0
LPAREN	(	94	2
ID	e	94	3	0x55ef7eea5310
GEQUAL	>=	94	4
ID	l	94	6	0x55ef7eea5478
RPAREN	)	94	7
BREAK	break	94	8
SEMICOLON	;	94	13
RBRACE	}	95	0
ID	d	96	0	0x55ef7eea52e8
ASSIGN	=	96	1
ID	d	96	2	0x55ef7eea52e8
ADD	+	96	3
DECIMAL	1	96	4	1
SEMICOLON	;	96	5
IF	if	97	0
LPAREN	(	97	2
ID	d	97	3	0x55ef7eea52e8
GEQUAL	>=	97	4
ID	k	97	6	0x55ef7eea5450
RPAREN	)	97	7
BREAK	break	97	8
SEMICOLON	;	97	13
RBRACE	}	98	0
ID	c	99	0	0x55ef7eea52c0
ASSIGN	=	99	1
ID	c	99	2	0x55ef7eea52c0
ADD	+	99	3
DECIMAL	1	99	4	1
SEMICOLON	;	99	5
IF	if	100	0
LPAREN	(	100	2
ID	c	100	3	0x55ef7eea52c0
GEQUAL	>=	100	4
ID	j	100	6	0x55ef7eea5428
RPAREN	)	100	7
BREAK	break	100	8
SEMICOLON	;	100	13
RBRACE	}	101	0
ID	b	102	0	0x55ef7eea5298
ASSIGN	=	102	1
ID	b	102	2	0x55ef7eea5298
ADD	+	102	3
DECIMAL	1	102	4	1
SEMICOLON	;	102	5
IF	if	103	0
LPAREN	(	103	2
ID	b	103	3	0x55ef7eea5298
GEQUAL	>=	103	4
ID	i	103	6	0x55ef7eea5400
RPAREN	)	103	7
BREAK	break	103	8
SEMICOLON	;	103	13
RBRACE	}	104	0
ID	a	105	0	0x55ef7eea5270
ASSIGN	=	105	1
ID	a	105	2	0x55ef7eea5270
ADD	+	105	3
DECIMAL	1	105	4	1
SEMICOLON	;	105	5
IF	if	106	0
LPAREN	(	106	2
ID	a	106	3	0x55ef7eea5270
GEQUAL	>=	106	4
ID	h	106	6	0x55ef7eea53d8
RPAREN	)	106	7
BREAK	break	106	8
SEMICOLON	;	106	13
RBRACE	}	107	0
RETURN	return	108	0
ID	ans	108	6	0x55ef7eea54f0
SEMICOLON	;	108	9
RBRACE	}	109	0
INT	int	111	0
ID	main	111	3	0x55ef7eea5518
LPAREN	(	111	7
RPAREN	)	111	8
LBRACE	{	111	9
INT	int	112	0
ID	x	112	3	0x55ef7eea5220
ASSIGN	=	112	4
ID	getint	112	5	0x55ef7eea5540
LPAREN	(	112	11
RPAREN	)	112	12
SEMICOLON	;	112	13
INT	int	113	0
ID	y	113	3	0x55ef7eea5248
ASSIGN	=	113	4
ID	getint	113	5	0x55ef7eea5540
LPAREN	(	113	11
RPAREN	)	113	12
SEMICOLON	;	113	13
INT	int	114	0
ID	h	114	3	0x55ef7eea53d8
ASSIGN	=	114	4
ID	getint	114	5	0x55ef7eea5540
LPAREN	(	114	11
RPAREN	)	114	12
SEMICOLON	;	114	13
INT	int	115	0
ID	i	115	3	0x55ef7eea5400
ASSIGN	=	115	4
ID	getint	115	5	0x55ef7eea5540
LPAREN	(	115	11
RPAREN	)	115	12
COMMA	,	115	13
ID	j	115	14	0x55ef7eea5428
ASSIGN	=	115	15
ID	getint	115	16	0x55ef7eea5540
LPAREN	(	115	22
RPAREN	)	115	23
SEMICOLON	;	115	24
INT	int	116	0
ID	k	116	3	0x55ef7eea5450
ASSIGN	=	116	4
ID	getint	116	5	0x55ef7eea5540
LPAREN	(	116	11
RPAREN	)	116	12
SEMICOLON	;	116	13
INT	int	117	0
ID	l	117	3	0x55ef7eea5478
ASSIGN	=	117	4
ID	getint	117	5	0x55ef7eea5540
LPAREN	(	117	11
RPAREN	)	117	12
SEMICOLON	;	117	13
INT	int	118	0
ID	m	118	3	0x55ef7eea54a0
ASSIGN	=	118	4
ID	getint	118	5	0x55ef7eea5540
LPAREN	(	118	11
RPAREN	)	118	12
SEMICOLON	;	118	13
INT	int	119	0
ID	n	119	3	0x55ef7eea54c8
ASSIGN	=	119	4
ID	getint	119	5	0x55ef7eea5540
LPAREN	(	119	11
RPAREN	)	119	12
SEMICOLON	;	119	13
ID	loop1	120	0	0x55ef7eea51f8
LPAREN	(	120	5
ID	x	120	6	0x55ef7eea5220
COMMA	,	120	7
ID	y	120	8	0x55ef7eea5248
RPAREN	)	120	9
SEMICOLON	;	120	10
ID	loop2	121	0	0x55ef7eea5388
LPAREN	(	121	5
RPAREN	)	121	6
SEMICOLON	;	121	7
RETURN	return	122	0
ID	loop3	122	6	0x55ef7eea53b0
LPAREN	(	122	11
ID	h	122	12	0x55ef7eea53d8
COMMA	,	122	13
ID	i	122	14	0x55ef7eea5400
COMMA	,	122	15
ID	j	122	16	0x55ef7eea5428
COMMA	,	122	17
ID	k	122	18	0x55ef7eea5450
COMMA	,	122	19
ID	l	122	20	0x55ef7eea5478
COMMA	,	122	21
ID	m	122	22	0x55ef7eea54a0
COMMA	,	122	23
ID	n	122	24	0x55ef7eea54c8
RPAREN	)	122	25
SEMICOLON	;	122	26
RBRACE	}	123	0
