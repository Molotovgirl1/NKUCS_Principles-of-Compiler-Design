INT	int	0	0
ID	func	0	3	0x56053247e1a8
LPAREN	(	0	7
INT	int	0	8
ID	n	0	11	0x56053247e1d0
RPAREN	)	0	12
LBRACE	{	0	13
IF	if	1	0
LPAREN	(	1	2
ID	n	1	3	0x56053247e1d0
LEQUAL	<=	1	4
DECIMAL	50	1	6	50
RPAREN	)	1	8
LBRACE	{	1	9
ID	putint	2	0	0x56053247e1f8
LPAREN	(	2	6
ID	n	2	7	0x56053247e1d0
RPAREN	)	2	8
SEMICOLON	;	2	9
RETURN	return	3	0
DECIMAL	1	3	6	1
SEMICOLON	;	3	7
RBRACE	}	4	0
ELSE	else	5	0
LBRACE	{	5	4
ID	putint	6	0	0x56053247e1f8
LPAREN	(	6	6
ID	n	6	7	0x56053247e1d0
RPAREN	)	6	8
SEMICOLON	;	6	9
RETURN	return	7	0
DECIMAL	0	7	6	0
SEMICOLON	;	7	7
RBRACE	}	8	0
RBRACE	}	9	0
INT	int	11	0
ID	main	11	3	0x56053247e220
LPAREN	(	11	7
RPAREN	)	11	8
LBRACE	{	11	9
INT	int	12	0
ID	i	12	3	0x56053247e248
SEMICOLON	;	12	4
IF	if	14	0
LPAREN	(	14	2
ID	func	14	3	0x56053247e1a8
LPAREN	(	14	7
DECIMAL	0	14	8	0
RPAREN	)	14	9
EQUAL	==	14	10
DECIMAL	1	14	12	1
OR	||	14	13
ID	func	14	15	0x56053247e1a8
LPAREN	(	14	19
DECIMAL	50	14	20	50
RPAREN	)	14	22
EQUAL	==	14	23
DECIMAL	1	14	25	1
AND	&&	14	26
ID	func	14	28	0x56053247e1a8
LPAREN	(	14	32
DECIMAL	100	14	33	100
RPAREN	)	14	36
EQUAL	==	14	37
DECIMAL	0	14	39	0
RPAREN	)	14	40
ID	i	15	0	0x56053247e248
ASSIGN	=	15	1
DECIMAL	0	15	2	0
SEMICOLON	;	15	3
ELSE	else	16	0
ID	i	17	0	0x56053247e248
ASSIGN	=	17	1
DECIMAL	1	17	2	1
SEMICOLON	;	17	3
IF	if	19	0
LPAREN	(	19	2
ID	func	19	3	0x56053247e1a8
LPAREN	(	19	7
DECIMAL	50	19	8	50
RPAREN	)	19	10
EQUAL	==	19	11
DECIMAL	1	19	13	1
AND	&&	19	14
ID	func	19	16	0x56053247e1a8
LPAREN	(	19	20
DECIMAL	40	19	21	40
RPAREN	)	19	23
EQUAL	==	19	24
DECIMAL	1	19	26	1
OR	||	19	27
ID	func	19	29	0x56053247e1a8
LPAREN	(	19	33
DECIMAL	1	19	34	1
RPAREN	)	19	35
EQUAL	==	19	36
DECIMAL	1	19	38	1
RPAREN	)	19	39
ID	i	20	0	0x56053247e248
ASSIGN	=	20	1
DECIMAL	0	20	2	0
SEMICOLON	;	20	3
ELSE	else	21	0
ID	i	22	0	0x56053247e248
ASSIGN	=	22	1
DECIMAL	1	22	2	1
SEMICOLON	;	22	3
RETURN	return	24	0
DECIMAL	0	24	6	0
SEMICOLON	;	24	7
RBRACE	}	25	0
