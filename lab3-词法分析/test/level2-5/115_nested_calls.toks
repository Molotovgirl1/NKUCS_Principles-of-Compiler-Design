INT	int	0	0
ID	func1	0	3	0x56292481f1a8
LPAREN	(	0	8
INT	int	0	9
ID	x	0	12	0x56292481f1d0
COMMA	,	0	13
INT	int	0	14
ID	y	0	17	0x56292481f1f8
COMMA	,	0	18
INT	int	0	19
ID	z	0	22	0x56292481f220
RPAREN	)	0	23
LBRACE	{	0	24
IF	if	1	0
LPAREN	(	1	2
ID	z	1	3	0x56292481f220
EQUAL	==	1	4
DECIMAL	0	1	6	0
RPAREN	)	1	7
LBRACE	{	1	8
RETURN	return	2	0
ID	x	2	6	0x56292481f1d0
MUL	*	2	7
ID	y	2	8	0x56292481f1f8
SEMICOLON	;	2	9
RBRACE	}	3	0
ELSE	else	4	0
LBRACE	{	4	4
RETURN	return	5	0
ID	func1	5	6	0x56292481f1a8
LPAREN	(	5	11
ID	x	5	12	0x56292481f1d0
COMMA	,	5	13
ID	y	5	14	0x56292481f1f8
SUB	-	5	15
ID	z	5	16	0x56292481f220
COMMA	,	5	17
DECIMAL	0	5	18	0
RPAREN	)	5	19
SEMICOLON	;	5	20
RBRACE	}	6	0
RBRACE	}	7	0
INT	int	9	0
ID	func2	9	3	0x56292481f248
LPAREN	(	9	8
INT	int	9	9
ID	x	9	12	0x56292481f1d0
COMMA	,	9	13
INT	int	9	14
ID	y	9	17	0x56292481f1f8
RPAREN	)	9	18
LBRACE	{	9	19
IF	if	10	0
LPAREN	(	10	2
ID	y	10	3	0x56292481f1f8
RPAREN	)	10	4
LBRACE	{	10	5
RETURN	return	11	0
ID	func2	11	6	0x56292481f248
LPAREN	(	11	11
ID	x	11	12	0x56292481f1d0
MOD	%	11	13
ID	y	11	14	0x56292481f1f8
COMMA	,	11	15
DECIMAL	0	11	16	0
RPAREN	)	11	17
SEMICOLON	;	11	18
RBRACE	}	12	0
ELSE	else	13	0
LBRACE	{	13	4
RETURN	return	14	0
ID	x	14	6	0x56292481f1d0
SEMICOLON	;	14	7
RBRACE	}	15	0
RBRACE	}	16	0
INT	int	18	0
ID	func3	18	3	0x56292481f270
LPAREN	(	18	8
INT	int	18	9
ID	x	18	12	0x56292481f1d0
COMMA	,	18	13
INT	int	18	14
ID	y	18	17	0x56292481f1f8
RPAREN	)	18	18
LBRACE	{	18	19
IF	if	19	0
LPAREN	(	19	2
ID	y	19	3	0x56292481f1f8
EQUAL	==	19	4
DECIMAL	0	19	6	0
RPAREN	)	19	7
LBRACE	{	19	8
RETURN	return	20	0
ID	x	20	6	0x56292481f1d0
ADD	+	20	7
DECIMAL	1	20	8	1
SEMICOLON	;	20	9
RBRACE	}	21	0
ELSE	else	22	0
LBRACE	{	22	4
RETURN	return	23	0
ID	func3	23	6	0x56292481f270
LPAREN	(	23	11
ID	x	23	12	0x56292481f1d0
ADD	+	23	13
ID	y	23	14	0x56292481f1f8
COMMA	,	23	15
DECIMAL	0	23	16	0
RPAREN	)	23	17
SEMICOLON	;	23	18
RBRACE	}	24	0
RBRACE	}	25	0
INT	int	27	0
ID	func4	27	3	0x56292481f298
LPAREN	(	27	8
INT	int	27	9
ID	x	27	12	0x56292481f1d0
COMMA	,	27	13
INT	int	27	14
ID	y	27	17	0x56292481f1f8
COMMA	,	27	18
INT	int	27	19
ID	z	27	22	0x56292481f220
RPAREN	)	27	23
LBRACE	{	27	24
IF	if	28	0
LPAREN	(	28	2
ID	x	28	3	0x56292481f1d0
RPAREN	)	28	4
LBRACE	{	28	5
RETURN	return	29	0
ID	y	29	6	0x56292481f1f8
SEMICOLON	;	29	7
RBRACE	}	30	0
ELSE	else	31	0
LBRACE	{	31	4
RETURN	return	32	0
ID	z	32	6	0x56292481f220
SEMICOLON	;	32	7
RBRACE	}	33	0
RBRACE	}	34	0
INT	int	36	0
ID	func5	36	3	0x56292481f2c0
LPAREN	(	36	8
INT	int	36	9
ID	x	36	12	0x56292481f1d0
RPAREN	)	36	13
LBRACE	{	36	14
RETURN	return	37	0
SUB	-	37	6
ID	x	37	7	0x56292481f1d0
SEMICOLON	;	37	8
RBRACE	}	38	0
INT	int	40	0
ID	func6	40	3	0x56292481f2e8
LPAREN	(	40	8
INT	int	40	9
ID	x	40	12	0x56292481f1d0
COMMA	,	40	13
INT	int	40	14
ID	y	40	17	0x56292481f1f8
RPAREN	)	40	18
LBRACE	{	40	19
IF	if	41	0
LPAREN	(	41	2
ID	x	41	3	0x56292481f1d0
AND	&&	41	4
ID	y	41	6	0x56292481f1f8
RPAREN	)	41	7
LBRACE	{	41	8
RETURN	return	42	0
DECIMAL	1	42	6	1
SEMICOLON	;	42	7
RBRACE	}	43	0
ELSE	else	44	0
LBRACE	{	44	4
RETURN	return	45	0
DECIMAL	0	45	6	0
SEMICOLON	;	45	7
RBRACE	}	46	0
RBRACE	}	47	0
INT	int	49	0
ID	func7	49	3	0x56292481f310
LPAREN	(	49	8
INT	int	49	9
ID	x	49	12	0x56292481f1d0
RPAREN	)	49	13
LBRACE	{	49	14
IF	if	50	0
LPAREN	(	50	2
NOT	!	50	3
ID	x	50	4	0x56292481f1d0
RPAREN	)	50	5
LBRACE	{	50	6
RETURN	return	51	0
DECIMAL	1	51	6	1
SEMICOLON	;	51	7
RBRACE	}	52	0
ELSE	else	53	0
LBRACE	{	53	4
RETURN	return	54	0
DECIMAL	0	54	6	0
SEMICOLON	;	54	7
RBRACE	}	55	0
RBRACE	}	56	0
INT	int	58	0
ID	main	58	3	0x56292481f338
LPAREN	(	58	7
RPAREN	)	58	8
LBRACE	{	58	9
INT	int	59	0
ID	i1	59	3	0x56292481f360
ASSIGN	=	59	5
ID	getint	59	6	0x56292481f388
LPAREN	(	59	12
RPAREN	)	59	13
COMMA	,	59	14
ID	i2	59	15	0x56292481f3b0
ASSIGN	=	59	17
ID	getint	59	18	0x56292481f388
LPAREN	(	59	24
RPAREN	)	59	25
COMMA	,	59	26
ID	i3	59	27	0x56292481f3d8
ASSIGN	=	59	29
ID	getint	59	30	0x56292481f388
LPAREN	(	59	36
RPAREN	)	59	37
COMMA	,	59	38
ID	i4	59	39	0x56292481f400
ASSIGN	=	59	41
ID	getint	59	42	0x56292481f388
LPAREN	(	59	48
RPAREN	)	59	49
SEMICOLON	;	59	50
INT	int	60	0
ID	arr	60	3	0x56292481f428
LBRACKET	[	60	6
DECIMAL	10	60	7	10
RBRACKET	]	60	9
SEMICOLON	;	60	10
INT	int	61	0
ID	i	61	3	0x56292481f450
ASSIGN	=	61	4
DECIMAL	0	61	5	0
SEMICOLON	;	61	6
WHILE	while	62	0
LPAREN	(	62	5
ID	i	62	6	0x56292481f450
LESS	<	62	7
DECIMAL	10	62	8	10
RPAREN	)	62	10
LBRACE	{	62	11
ID	arr	63	0	0x56292481f428
LBRACKET	[	63	3
ID	i	63	4	0x56292481f450
RBRACKET	]	63	5
ASSIGN	=	63	6
ID	getint	63	7	0x56292481f388
LPAREN	(	63	13
RPAREN	)	63	14
SEMICOLON	;	63	15
ID	i	64	0	0x56292481f450
ASSIGN	=	64	1
ID	i	64	2	0x56292481f450
ADD	+	64	3
DECIMAL	1	64	4	1
SEMICOLON	;	64	5
RBRACE	}	65	0
INT	int	66	0
ID	a	66	3	0x56292481f478
ASSIGN	=	66	4
ID	func1	66	5	0x56292481f1a8
LPAREN	(	66	10
ID	func2	68	0	0x56292481f248
LPAREN	(	68	5
ID	func1	70	0	0x56292481f1a8
LPAREN	(	70	5
ID	func3	72	0	0x56292481f270
LPAREN	(	72	5
ID	func4	72	6	0x56292481f298
LPAREN	(	72	11
ID	func5	72	12	0x56292481f2c0
LPAREN	(	72	17
ID	func3	72	18	0x56292481f270
LPAREN	(	72	23
ID	func2	72	24	0x56292481f248
LPAREN	(	72	29
ID	func6	72	30	0x56292481f2e8
LPAREN	(	72	35
ID	func7	72	36	0x56292481f310
LPAREN	(	72	41
ID	i1	72	42	0x56292481f360
RPAREN	)	72	44
COMMA	,	72	45
ID	func5	72	46	0x56292481f2c0
LPAREN	(	72	51
ID	i2	72	52	0x56292481f3b0
RPAREN	)	72	54
RPAREN	)	72	55
COMMA	,	72	56
ID	i3	72	57	0x56292481f3d8
RPAREN	)	72	59
COMMA	,	72	60
ID	i4	74	0	0x56292481f400
RPAREN	)	74	2
RPAREN	)	74	3
COMMA	,	74	4
ID	arr	76	0	0x56292481f428
LBRACKET	[	76	3
DECIMAL	0	76	4	0
RBRACKET	]	76	5
COMMA	,	76	6
ID	func1	78	0	0x56292481f1a8
LPAREN	(	78	5
ID	func2	78	6	0x56292481f248
LPAREN	(	78	11
ID	func3	78	12	0x56292481f270
LPAREN	(	78	17
ID	func4	78	18	0x56292481f298
LPAREN	(	78	23
ID	func5	78	24	0x56292481f2c0
LPAREN	(	78	29
ID	arr	78	30	0x56292481f428
LBRACKET	[	78	33
DECIMAL	1	78	34	1
RBRACKET	]	78	35
RPAREN	)	78	36
COMMA	,	78	37
ID	func6	80	0	0x56292481f2e8
LPAREN	(	80	5
ID	arr	80	6	0x56292481f428
LBRACKET	[	80	9
DECIMAL	2	80	10	2
RBRACKET	]	80	11
COMMA	,	80	12
ID	func7	80	13	0x56292481f310
LPAREN	(	80	18
ID	arr	80	19	0x56292481f428
LBRACKET	[	80	22
DECIMAL	3	80	23	3
RBRACKET	]	80	24
RPAREN	)	80	25
RPAREN	)	80	26
COMMA	,	80	27
ID	func2	81	0	0x56292481f248
LPAREN	(	81	5
ID	arr	81	6	0x56292481f428
LBRACKET	[	81	9
DECIMAL	4	81	10	4
RBRACKET	]	81	11
COMMA	,	81	12
ID	func7	81	13	0x56292481f310
LPAREN	(	81	18
ID	arr	81	19	0x56292481f428
LBRACKET	[	81	22
DECIMAL	5	81	23	5
RBRACKET	]	81	24
RPAREN	)	81	25
RPAREN	)	81	26
RPAREN	)	81	27
COMMA	,	81	28
ID	arr	82	0	0x56292481f428
LBRACKET	[	82	3
DECIMAL	6	82	4	6
RBRACKET	]	82	5
RPAREN	)	82	6
COMMA	,	82	7
ID	arr	83	0	0x56292481f428
LBRACKET	[	83	3
DECIMAL	7	83	4	7
RBRACKET	]	83	5
RPAREN	)	83	6
COMMA	,	83	7
ID	func3	84	0	0x56292481f270
LPAREN	(	84	5
ID	arr	84	6	0x56292481f428
LBRACKET	[	84	9
DECIMAL	8	84	10	8
RBRACKET	]	84	11
COMMA	,	84	12
ID	func7	84	13	0x56292481f310
LPAREN	(	84	18
ID	arr	84	19	0x56292481f428
LBRACKET	[	84	22
DECIMAL	9	84	23	9
RBRACKET	]	84	24
RPAREN	)	84	25
RPAREN	)	84	26
COMMA	,	84	27
ID	i1	84	28	0x56292481f360
RPAREN	)	84	30
RPAREN	)	84	31
COMMA	,	84	32
ID	func2	85	0	0x56292481f248
LPAREN	(	85	5
ID	i2	85	6	0x56292481f3b0
COMMA	,	85	8
ID	func3	85	9	0x56292481f270
LPAREN	(	85	14
ID	func7	85	15	0x56292481f310
LPAREN	(	85	20
ID	i3	85	21	0x56292481f3d8
RPAREN	)	85	23
COMMA	,	85	24
ID	i4	85	25	0x56292481f400
RPAREN	)	85	27
RPAREN	)	85	28
RPAREN	)	85	29
COMMA	,	85	30
ID	arr	86	0	0x56292481f428
LBRACKET	[	86	3
DECIMAL	0	86	4	0
RBRACKET	]	86	5
COMMA	,	86	6
ID	arr	86	7	0x56292481f428
LBRACKET	[	86	10
DECIMAL	1	86	11	1
RBRACKET	]	86	12
RPAREN	)	86	13
COMMA	,	86	14
ID	arr	87	0	0x56292481f428
LBRACKET	[	87	3
DECIMAL	2	87	4	2
RBRACKET	]	87	5
RPAREN	)	87	6
COMMA	,	87	7
ID	arr	88	0	0x56292481f428
LBRACKET	[	88	3
DECIMAL	3	88	4	3
RBRACKET	]	88	5
COMMA	,	88	6
ID	func3	89	0	0x56292481f270
LPAREN	(	89	5
ID	func2	89	6	0x56292481f248
LPAREN	(	89	11
ID	func1	89	12	0x56292481f1a8
LPAREN	(	89	17
ID	func2	89	18	0x56292481f248
LPAREN	(	89	23
ID	func3	89	24	0x56292481f270
LPAREN	(	89	29
ID	arr	89	30	0x56292481f428
LBRACKET	[	89	33
DECIMAL	4	89	34	4
RBRACKET	]	89	35
COMMA	,	89	36
ID	func5	89	37	0x56292481f2c0
LPAREN	(	89	42
ID	arr	89	43	0x56292481f428
LBRACKET	[	89	46
DECIMAL	5	89	47	5
RBRACKET	]	89	48
RPAREN	)	89	49
RPAREN	)	89	50
COMMA	,	89	51
ID	func5	89	52	0x56292481f2c0
LPAREN	(	89	57
ID	arr	89	58	0x56292481f428
LBRACKET	[	89	61
DECIMAL	6	89	62	6
RBRACKET	]	89	63
RPAREN	)	89	64
RPAREN	)	89	65
COMMA	,	89	66
ID	arr	90	0	0x56292481f428
LBRACKET	[	90	3
DECIMAL	7	90	4	7
RBRACKET	]	90	5
COMMA	,	90	6
ID	func7	90	7	0x56292481f310
LPAREN	(	90	12
ID	arr	90	13	0x56292481f428
LBRACKET	[	90	16
DECIMAL	8	90	17	8
RBRACKET	]	90	18
RPAREN	)	90	19
RPAREN	)	90	20
COMMA	,	90	21
ID	func5	91	0	0x56292481f2c0
LPAREN	(	91	5
ID	arr	91	6	0x56292481f428
LBRACKET	[	91	9
DECIMAL	9	91	10	9
RBRACKET	]	91	11
RPAREN	)	91	12
RPAREN	)	91	13
COMMA	,	91	14
ID	i1	92	0	0x56292481f360
RPAREN	)	92	2
RPAREN	)	92	3
SEMICOLON	;	92	4
RETURN	return	93	0
ID	a	93	6	0x56292481f478
SEMICOLON	;	93	7
RBRACE	}	94	0
