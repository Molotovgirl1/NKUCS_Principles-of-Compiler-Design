CONST	const	0	0
INT	int	0	5
ID	maxn	0	8	0x55cfe82881a8
ASSIGN	=	0	12
DECIMAL	18	0	13	18
SEMICOLON	;	0	15
CONST	const	1	0
INT	int	1	5
ID	mod	1	8	0x55cfe82881d0
ASSIGN	=	1	11
DECIMAL	1000000007	1	12	1000000007
SEMICOLON	;	1	22
INT	int	2	0
ID	dp	2	3	0x55cfe82881f8
LBRACKET	[	2	5
ID	maxn	2	6	0x55cfe82881a8
RBRACKET	]	2	10
LBRACKET	[	2	11
ID	maxn	2	12	0x55cfe82881a8
RBRACKET	]	2	16
LBRACKET	[	2	17
ID	maxn	2	18	0x55cfe82881a8
RBRACKET	]	2	22
LBRACKET	[	2	23
ID	maxn	2	24	0x55cfe82881a8
RBRACKET	]	2	28
LBRACKET	[	2	29
ID	maxn	2	30	0x55cfe82881a8
RBRACKET	]	2	34
LBRACKET	[	2	35
DECIMAL	7	2	36	7
RBRACKET	]	2	37
SEMICOLON	;	2	38
INT	int	3	0
ID	list	3	3	0x55cfe8288220
LBRACKET	[	3	7
DECIMAL	200	3	8	200
RBRACKET	]	3	11
SEMICOLON	;	3	12
INT	int	5	0
ID	equal	5	3	0x55cfe8288248
LPAREN	(	5	8
INT	int	5	9
ID	a	5	12	0x55cfe8288270
COMMA	,	5	13
INT	int	5	14
ID	b	5	17	0x55cfe8288298
RPAREN	)	5	18
LBRACE	{	5	19
IF	if	6	0
LPAREN	(	6	2
ID	a	6	3	0x55cfe8288270
EQUAL	==	6	4
ID	b	6	6	0x55cfe8288298
RPAREN	)	6	7
RETURN	return	7	0
DECIMAL	1	7	6	1
SEMICOLON	;	7	7
RETURN	return	8	0
DECIMAL	0	8	6	0
SEMICOLON	;	8	7
RBRACE	}	9	0
INT	int	11	0
ID	dfs	11	3	0x55cfe82882c0
LPAREN	(	11	6
INT	int	11	7
ID	a	11	10	0x55cfe8288270
COMMA	,	11	11
INT	int	11	12
ID	b	11	15	0x55cfe8288298
COMMA	,	11	16
INT	int	11	17
ID	c	11	20	0x55cfe82882e8
COMMA	,	11	21
INT	int	11	22
ID	d	11	25	0x55cfe8288310
COMMA	,	11	26
INT	int	11	27
ID	e	11	30	0x55cfe8288338
COMMA	,	11	31
INT	int	11	32
ID	last	11	35	0x55cfe8288360
RPAREN	)	11	39
LBRACE	{	11	40
IF	if	12	0
LPAREN	(	12	2
ID	dp	12	3	0x55cfe82881f8
LBRACKET	[	12	5
ID	a	12	6	0x55cfe8288270
RBRACKET	]	12	7
LBRACKET	[	12	8
ID	b	12	9	0x55cfe8288298
RBRACKET	]	12	10
LBRACKET	[	12	11
ID	c	12	12	0x55cfe82882e8
RBRACKET	]	12	13
LBRACKET	[	12	14
ID	d	12	15	0x55cfe8288310
RBRACKET	]	12	16
LBRACKET	[	12	17
ID	e	12	18	0x55cfe8288338
RBRACKET	]	12	19
LBRACKET	[	12	20
ID	last	12	21	0x55cfe8288360
RBRACKET	]	12	25
NEQUAL	!=	12	26
SUB	-	12	28
DECIMAL	1	12	29	1
RPAREN	)	12	30
RETURN	return	13	0
ID	dp	13	6	0x55cfe82881f8
LBRACKET	[	13	8
ID	a	13	9	0x55cfe8288270
RBRACKET	]	13	10
LBRACKET	[	13	11
ID	b	13	12	0x55cfe8288298
RBRACKET	]	13	13
LBRACKET	[	13	14
ID	c	13	15	0x55cfe82882e8
RBRACKET	]	13	16
LBRACKET	[	13	17
ID	d	13	18	0x55cfe8288310
RBRACKET	]	13	19
LBRACKET	[	13	20
ID	e	13	21	0x55cfe8288338
RBRACKET	]	13	22
LBRACKET	[	13	23
ID	last	13	24	0x55cfe8288360
RBRACKET	]	13	28
SEMICOLON	;	13	29
IF	if	14	0
LPAREN	(	14	2
ID	a	14	3	0x55cfe8288270
ADD	+	14	4
ID	b	14	5	0x55cfe8288298
ADD	+	14	6
ID	c	14	7	0x55cfe82882e8
ADD	+	14	8
ID	d	14	9	0x55cfe8288310
ADD	+	14	10
ID	e	14	11	0x55cfe8288338
EQUAL	==	14	12
DECIMAL	0	14	14	0
RPAREN	)	14	15
RETURN	return	15	0
DECIMAL	1	15	6	1
SEMICOLON	;	15	7
INT	int	16	0
ID	ans	16	3	0x55cfe8288388
ASSIGN	=	16	6
DECIMAL	0	16	7	0
SEMICOLON	;	16	8
IF	if	17	0
LPAREN	(	17	2
ID	a	17	3	0x55cfe8288270
RPAREN	)	17	4
ID	ans	17	5	0x55cfe8288388
ASSIGN	=	17	8
LPAREN	(	17	9
ID	ans	17	10	0x55cfe8288388
ADD	+	17	13
LPAREN	(	17	14
ID	a	17	15	0x55cfe8288270
SUB	-	17	16
ID	equal	17	17	0x55cfe8288248
LPAREN	(	17	22
ID	last	17	23	0x55cfe8288360
COMMA	,	17	27
DECIMAL	2	17	28	2
RPAREN	)	17	29
RPAREN	)	17	30
MUL	*	17	31
ID	dfs	17	32	0x55cfe82882c0
LPAREN	(	17	35
ID	a	17	36	0x55cfe8288270
SUB	-	17	37
DECIMAL	1	17	38	1
COMMA	,	17	39
ID	b	17	40	0x55cfe8288298
COMMA	,	17	41
ID	c	17	42	0x55cfe82882e8
COMMA	,	17	43
ID	d	17	44	0x55cfe8288310
COMMA	,	17	45
ID	e	17	46	0x55cfe8288338
COMMA	,	17	47
DECIMAL	1	17	48	1
RPAREN	)	17	49
RPAREN	)	17	50
MOD	%	17	51
ID	mod	17	52	0x55cfe82881d0
SEMICOLON	;	17	55
IF	if	18	0
LPAREN	(	18	2
ID	b	18	3	0x55cfe8288298
RPAREN	)	18	4
ID	ans	18	5	0x55cfe8288388
ASSIGN	=	18	8
LPAREN	(	18	9
ID	ans	18	10	0x55cfe8288388
ADD	+	18	13
LPAREN	(	18	14
ID	b	18	15	0x55cfe8288298
SUB	-	18	16
ID	equal	18	17	0x55cfe8288248
LPAREN	(	18	22
ID	last	18	23	0x55cfe8288360
COMMA	,	18	27
DECIMAL	3	18	28	3
RPAREN	)	18	29
RPAREN	)	18	30
MUL	*	18	31
ID	dfs	18	32	0x55cfe82882c0
LPAREN	(	18	35
ID	a	18	36	0x55cfe8288270
ADD	+	18	37
DECIMAL	1	18	38	1
COMMA	,	18	39
ID	b	18	40	0x55cfe8288298
SUB	-	18	41
DECIMAL	1	18	42	1
COMMA	,	18	43
ID	c	18	44	0x55cfe82882e8
COMMA	,	18	45
ID	d	18	46	0x55cfe8288310
COMMA	,	18	47
ID	e	18	48	0x55cfe8288338
COMMA	,	18	49
DECIMAL	2	18	50	2
RPAREN	)	18	51
RPAREN	)	18	52
MOD	%	18	53
ID	mod	18	54	0x55cfe82881d0
SEMICOLON	;	18	57
IF	if	19	0
LPAREN	(	19	2
ID	c	19	3	0x55cfe82882e8
RPAREN	)	19	4
ID	ans	19	5	0x55cfe8288388
ASSIGN	=	19	8
LPAREN	(	19	9
ID	ans	19	10	0x55cfe8288388
ADD	+	19	13
LPAREN	(	19	14
ID	c	19	15	0x55cfe82882e8
SUB	-	19	16
ID	equal	19	17	0x55cfe8288248
LPAREN	(	19	22
ID	last	19	23	0x55cfe8288360
COMMA	,	19	27
DECIMAL	4	19	28	4
RPAREN	)	19	29
RPAREN	)	19	30
MUL	*	19	31
ID	dfs	19	32	0x55cfe82882c0
LPAREN	(	19	35
ID	a	19	36	0x55cfe8288270
COMMA	,	19	37
ID	b	19	38	0x55cfe8288298
ADD	+	19	39
DECIMAL	1	19	40	1
COMMA	,	19	41
ID	c	19	42	0x55cfe82882e8
SUB	-	19	43
DECIMAL	1	19	44	1
COMMA	,	19	45
ID	d	19	46	0x55cfe8288310
COMMA	,	19	47
ID	e	19	48	0x55cfe8288338
COMMA	,	19	49
DECIMAL	3	19	50	3
RPAREN	)	19	51
RPAREN	)	19	52
MOD	%	19	53
ID	mod	19	54	0x55cfe82881d0
SEMICOLON	;	19	57
IF	if	20	0
LPAREN	(	20	2
ID	d	20	3	0x55cfe8288310
RPAREN	)	20	4
ID	ans	20	5	0x55cfe8288388
ASSIGN	=	20	8
LPAREN	(	20	9
ID	ans	20	10	0x55cfe8288388
ADD	+	20	13
LPAREN	(	20	14
ID	d	20	15	0x55cfe8288310
SUB	-	20	16
ID	equal	20	17	0x55cfe8288248
LPAREN	(	20	22
ID	last	20	23	0x55cfe8288360
COMMA	,	20	27
DECIMAL	5	20	28	5
RPAREN	)	20	29
RPAREN	)	20	30
MUL	*	20	31
ID	dfs	20	32	0x55cfe82882c0
LPAREN	(	20	35
ID	a	20	36	0x55cfe8288270
COMMA	,	20	37
ID	b	20	38	0x55cfe8288298
COMMA	,	20	39
ID	c	20	40	0x55cfe82882e8
ADD	+	20	41
DECIMAL	1	20	42	1
COMMA	,	20	43
ID	d	20	44	0x55cfe8288310
SUB	-	20	45
DECIMAL	1	20	46	1
COMMA	,	20	47
ID	e	20	48	0x55cfe8288338
COMMA	,	20	49
DECIMAL	4	20	50	4
RPAREN	)	20	51
RPAREN	)	20	52
MOD	%	20	53
ID	mod	20	54	0x55cfe82881d0
SEMICOLON	;	20	57
IF	if	21	0
LPAREN	(	21	2
ID	e	21	3	0x55cfe8288338
RPAREN	)	21	4
ID	ans	21	5	0x55cfe8288388
ASSIGN	=	21	8
LPAREN	(	21	9
ID	ans	21	10	0x55cfe8288388
ADD	+	21	13
ID	e	21	14	0x55cfe8288338
MUL	*	21	15
ID	dfs	21	16	0x55cfe82882c0
LPAREN	(	21	19
ID	a	21	20	0x55cfe8288270
COMMA	,	21	21
ID	b	21	22	0x55cfe8288298
COMMA	,	21	23
ID	c	21	24	0x55cfe82882e8
COMMA	,	21	25
ID	d	21	26	0x55cfe8288310
ADD	+	21	27
DECIMAL	1	21	28	1
COMMA	,	21	29
ID	e	21	30	0x55cfe8288338
SUB	-	21	31
DECIMAL	1	21	32	1
COMMA	,	21	33
DECIMAL	5	21	34	5
RPAREN	)	21	35
RPAREN	)	21	36
MOD	%	21	37
ID	mod	21	38	0x55cfe82881d0
SEMICOLON	;	21	41
ID	dp	22	0	0x55cfe82881f8
LBRACKET	[	22	2
ID	a	22	3	0x55cfe8288270
RBRACKET	]	22	4
LBRACKET	[	22	5
ID	b	22	6	0x55cfe8288298
RBRACKET	]	22	7
LBRACKET	[	22	8
ID	c	22	9	0x55cfe82882e8
RBRACKET	]	22	10
LBRACKET	[	22	11
ID	d	22	12	0x55cfe8288310
RBRACKET	]	22	13
LBRACKET	[	22	14
ID	e	22	15	0x55cfe8288338
RBRACKET	]	22	16
LBRACKET	[	22	17
ID	last	22	18	0x55cfe8288360
RBRACKET	]	22	22
ASSIGN	=	22	23
ID	ans	22	24	0x55cfe8288388
MOD	%	22	27
ID	mod	22	28	0x55cfe82881d0
SEMICOLON	;	22	31
RETURN	return	23	0
ID	dp	23	6	0x55cfe82881f8
LBRACKET	[	23	8
ID	a	23	9	0x55cfe8288270
RBRACKET	]	23	10
LBRACKET	[	23	11
ID	b	23	12	0x55cfe8288298
RBRACKET	]	23	13
LBRACKET	[	23	14
ID	c	23	15	0x55cfe82882e8
RBRACKET	]	23	16
LBRACKET	[	23	17
ID	d	23	18	0x55cfe8288310
RBRACKET	]	23	19
LBRACKET	[	23	20
ID	e	23	21	0x55cfe8288338
RBRACKET	]	23	22
LBRACKET	[	23	23
ID	last	23	24	0x55cfe8288360
RBRACKET	]	23	28
SEMICOLON	;	23	29
RBRACE	}	24	0
INT	int	26	0
ID	cns	26	3	0x55cfe82883b0
LBRACKET	[	26	6
DECIMAL	20	26	7	20
RBRACKET	]	26	9
SEMICOLON	;	26	10
INT	int	28	0
ID	main	28	3	0x55cfe82883d8
LPAREN	(	28	7
RPAREN	)	28	8
LBRACE	{	28	9
INT	int	29	0
ID	n	29	3	0x55cfe8288400
ASSIGN	=	29	4
ID	getint	29	5	0x55cfe8288428
LPAREN	(	29	11
RPAREN	)	29	12
SEMICOLON	;	29	13
INT	int	30	0
ID	i	30	3	0x55cfe8288450
ASSIGN	=	30	4
DECIMAL	0	30	5	0
SEMICOLON	;	30	6
WHILE	while	31	0
LPAREN	(	31	5
ID	i	31	6	0x55cfe8288450
LESS	<	31	7
ID	maxn	31	8	0x55cfe82881a8
RPAREN	)	31	12
LBRACE	{	31	13
INT	int	32	0
ID	j	32	3	0x55cfe8288478
ASSIGN	=	32	4
DECIMAL	0	32	5	0
SEMICOLON	;	32	6
WHILE	while	33	0
LPAREN	(	33	5
ID	j	33	6	0x55cfe8288478
LESS	<	33	7
ID	maxn	33	8	0x55cfe82881a8
RPAREN	)	33	12
LBRACE	{	33	13
INT	int	34	0
ID	k	34	3	0x55cfe82884a0
ASSIGN	=	34	4
DECIMAL	0	34	5	0
SEMICOLON	;	34	6
WHILE	while	35	0
LPAREN	(	35	5
ID	k	35	6	0x55cfe82884a0
LESS	<	35	7
ID	maxn	35	8	0x55cfe82881a8
RPAREN	)	35	12
LBRACE	{	35	13
INT	int	36	0
ID	l	36	3	0x55cfe82884c8
ASSIGN	=	36	4
DECIMAL	0	36	5	0
SEMICOLON	;	36	6
WHILE	while	37	0
LPAREN	(	37	5
ID	l	37	6	0x55cfe82884c8
LESS	<	37	7
ID	maxn	37	8	0x55cfe82881a8
RPAREN	)	37	12
LBRACE	{	37	13
INT	int	38	0
ID	m	38	3	0x55cfe82884f0
ASSIGN	=	38	4
DECIMAL	0	38	5	0
SEMICOLON	;	38	6
WHILE	while	39	0
LPAREN	(	39	5
ID	m	39	6	0x55cfe82884f0
LESS	<	39	7
ID	maxn	39	8	0x55cfe82881a8
RPAREN	)	39	12
LBRACE	{	39	13
INT	int	40	0
ID	h	40	3	0x55cfe8288518
ASSIGN	=	40	4
DECIMAL	0	40	5	0
SEMICOLON	;	40	6
WHILE	while	41	0
LPAREN	(	41	5
ID	h	41	6	0x55cfe8288518
LESS	<	41	7
DECIMAL	7	41	8	7
RPAREN	)	41	9
LBRACE	{	41	10
ID	dp	42	0	0x55cfe82881f8
LBRACKET	[	42	2
ID	i	42	3	0x55cfe8288450
RBRACKET	]	42	4
LBRACKET	[	42	5
ID	j	42	6	0x55cfe8288478
RBRACKET	]	42	7
LBRACKET	[	42	8
ID	k	42	9	0x55cfe82884a0
RBRACKET	]	42	10
LBRACKET	[	42	11
ID	l	42	12	0x55cfe82884c8
RBRACKET	]	42	13
LBRACKET	[	42	14
ID	m	42	15	0x55cfe82884f0
RBRACKET	]	42	16
LBRACKET	[	42	17
ID	h	42	18	0x55cfe8288518
RBRACKET	]	42	19
ASSIGN	=	42	20
SUB	-	42	21
DECIMAL	1	42	22	1
SEMICOLON	;	42	23
ID	h	43	0	0x55cfe8288518
ASSIGN	=	43	1
ID	h	43	2	0x55cfe8288518
ADD	+	43	3
DECIMAL	1	43	4	1
SEMICOLON	;	43	5
RBRACE	}	44	0
ID	m	45	0	0x55cfe82884f0
ASSIGN	=	45	1
ID	m	45	2	0x55cfe82884f0
ADD	+	45	3
DECIMAL	1	45	4	1
SEMICOLON	;	45	5
RBRACE	}	46	0
ID	l	47	0	0x55cfe82884c8
ASSIGN	=	47	1
ID	l	47	2	0x55cfe82884c8
ADD	+	47	3
DECIMAL	1	47	4	1
SEMICOLON	;	47	5
RBRACE	}	48	0
ID	k	49	0	0x55cfe82884a0
ASSIGN	=	49	1
ID	k	49	2	0x55cfe82884a0
ADD	+	49	3
DECIMAL	1	49	4	1
SEMICOLON	;	49	5
RBRACE	}	50	0
ID	j	51	0	0x55cfe8288478
ASSIGN	=	51	1
ID	j	51	2	0x55cfe8288478
ADD	+	51	3
DECIMAL	1	51	4	1
SEMICOLON	;	51	5
RBRACE	}	52	0
ID	i	53	0	0x55cfe8288450
ASSIGN	=	53	1
ID	i	53	2	0x55cfe8288450
ADD	+	53	3
DECIMAL	1	53	4	1
SEMICOLON	;	53	5
RBRACE	}	54	0
ID	i	56	0	0x55cfe8288450
ASSIGN	=	56	1
DECIMAL	0	56	2	0
SEMICOLON	;	56	3
WHILE	while	57	0
LPAREN	(	57	5
ID	i	57	6	0x55cfe8288450
LESS	<	57	7
ID	n	57	8	0x55cfe8288400
RPAREN	)	57	9
LBRACE	{	57	10
ID	list	58	0	0x55cfe8288220
LBRACKET	[	58	4
ID	i	58	5	0x55cfe8288450
RBRACKET	]	58	6
ASSIGN	=	58	7
ID	getint	58	8	0x55cfe8288428
LPAREN	(	58	14
RPAREN	)	58	15
SEMICOLON	;	58	16
ID	cns	59	0	0x55cfe82883b0
LBRACKET	[	59	3
ID	list	59	4	0x55cfe8288220
LBRACKET	[	59	8
ID	i	59	9	0x55cfe8288450
RBRACKET	]	59	10
RBRACKET	]	59	11
ASSIGN	=	59	12
ID	cns	59	13	0x55cfe82883b0
LBRACKET	[	59	16
ID	list	59	17	0x55cfe8288220
LBRACKET	[	59	21
ID	i	59	22	0x55cfe8288450
RBRACKET	]	59	23
RBRACKET	]	59	24
ADD	+	59	25
DECIMAL	1	59	26	1
SEMICOLON	;	59	27
ID	i	60	0	0x55cfe8288450
ASSIGN	=	60	1
ID	i	60	2	0x55cfe8288450
ADD	+	60	3
DECIMAL	1	60	4	1
SEMICOLON	;	60	5
RBRACE	}	61	0
INT	int	63	0
ID	ans	63	3	0x55cfe8288388
ASSIGN	=	63	6
ID	dfs	63	7	0x55cfe82882c0
LPAREN	(	63	10
ID	cns	63	11	0x55cfe82883b0
LBRACKET	[	63	14
DECIMAL	1	63	15	1
RBRACKET	]	63	16
COMMA	,	63	17
ID	cns	63	18	0x55cfe82883b0
LBRACKET	[	63	21
DECIMAL	2	63	22	2
RBRACKET	]	63	23
COMMA	,	63	24
ID	cns	63	25	0x55cfe82883b0
LBRACKET	[	63	28
DECIMAL	3	63	29	3
RBRACKET	]	63	30
COMMA	,	63	31
ID	cns	63	32	0x55cfe82883b0
LBRACKET	[	63	35
DECIMAL	4	63	36	4
RBRACKET	]	63	37
COMMA	,	63	38
ID	cns	63	39	0x55cfe82883b0
LBRACKET	[	63	42
DECIMAL	5	63	43	5
RBRACKET	]	63	44
COMMA	,	63	45
DECIMAL	0	63	46	0
RPAREN	)	63	47
SEMICOLON	;	63	48
ID	putint	65	0	0x55cfe8288540
LPAREN	(	65	6
ID	ans	65	7	0x55cfe8288388
RPAREN	)	65	10
SEMICOLON	;	65	11
RETURN	return	67	0
ID	ans	67	6	0x55cfe8288388
SEMICOLON	;	67	9
RBRACE	}	68	0
