CONST	const	0	0
INT	int	0	5
ID	N	0	8	0x55958429f1a8
ASSIGN	=	0	9
DECIMAL	10000	0	10	10000
SEMICOLON	;	0	15
INT	int	2	0
ID	long_array	2	3	0x55958429f1d0
LPAREN	(	2	13
INT	int	2	14
ID	k	2	17	0x55958429f1f8
RPAREN	)	2	18
LBRACE	{	2	19
INT	int	3	0
ID	a1	3	3	0x55958429f220
LBRACKET	[	3	5
ID	N	3	6	0x55958429f1a8
RBRACKET	]	3	7
SEMICOLON	;	3	8
INT	int	4	0
ID	a2	4	3	0x55958429f248
LBRACKET	[	4	5
ID	N	4	6	0x55958429f1a8
RBRACKET	]	4	7
SEMICOLON	;	4	8
INT	int	5	0
ID	a3	5	3	0x55958429f270
LBRACKET	[	5	5
ID	N	5	6	0x55958429f1a8
RBRACKET	]	5	7
SEMICOLON	;	5	8
INT	int	6	0
ID	i	6	3	0x55958429f298
ASSIGN	=	6	4
DECIMAL	0	6	5	0
SEMICOLON	;	6	6
WHILE	while	7	0
LPAREN	(	7	5
ID	i	7	6	0x55958429f298
LESS	<	7	7
ID	N	7	8	0x55958429f1a8
RPAREN	)	7	9
LBRACE	{	7	10
ID	a1	8	0	0x55958429f220
LBRACKET	[	8	2
ID	i	8	3	0x55958429f298
RBRACKET	]	8	4
ASSIGN	=	8	5
LPAREN	(	8	6
ID	i	8	7	0x55958429f298
MUL	*	8	8
ID	i	8	9	0x55958429f298
RPAREN	)	8	10
MOD	%	8	11
DECIMAL	10	8	12	10
SEMICOLON	;	8	14
ID	i	9	0	0x55958429f298
ASSIGN	=	9	1
ID	i	9	2	0x55958429f298
ADD	+	9	3
DECIMAL	1	9	4	1
SEMICOLON	;	9	5
RBRACE	}	10	0
ID	i	11	0	0x55958429f298
ASSIGN	=	11	1
DECIMAL	0	11	2	0
SEMICOLON	;	11	3
WHILE	while	12	0
LPAREN	(	12	5
ID	i	12	6	0x55958429f298
LESS	<	12	7
ID	N	12	8	0x55958429f1a8
RPAREN	)	12	9
LBRACE	{	12	10
ID	a2	13	0	0x55958429f248
LBRACKET	[	13	2
ID	i	13	3	0x55958429f298
RBRACKET	]	13	4
ASSIGN	=	13	5
LPAREN	(	13	6
ID	a1	13	7	0x55958429f220
LBRACKET	[	13	9
ID	i	13	10	0x55958429f298
RBRACKET	]	13	11
MUL	*	13	12
ID	a1	13	13	0x55958429f220
LBRACKET	[	13	15
ID	i	13	16	0x55958429f298
RBRACKET	]	13	17
RPAREN	)	13	18
MOD	%	13	19
DECIMAL	10	13	20	10
SEMICOLON	;	13	22
ID	i	14	0	0x55958429f298
ASSIGN	=	14	1
ID	i	14	2	0x55958429f298
ADD	+	14	3
DECIMAL	1	14	4	1
SEMICOLON	;	14	5
RBRACE	}	15	0
ID	i	16	0	0x55958429f298
ASSIGN	=	16	1
DECIMAL	0	16	2	0
SEMICOLON	;	16	3
WHILE	while	17	0
LPAREN	(	17	5
ID	i	17	6	0x55958429f298
LESS	<	17	7
ID	N	17	8	0x55958429f1a8
RPAREN	)	17	9
LBRACE	{	17	10
ID	a3	18	0	0x55958429f270
LBRACKET	[	18	2
ID	i	18	3	0x55958429f298
RBRACKET	]	18	4
ASSIGN	=	18	5
LPAREN	(	18	6
ID	a2	18	7	0x55958429f248
LBRACKET	[	18	9
ID	i	18	10	0x55958429f298
RBRACKET	]	18	11
MUL	*	18	12
ID	a2	18	13	0x55958429f248
LBRACKET	[	18	15
ID	i	18	16	0x55958429f298
RBRACKET	]	18	17
RPAREN	)	18	18
MOD	%	18	19
DECIMAL	100	18	20	100
ADD	+	18	23
ID	a1	18	24	0x55958429f220
LBRACKET	[	18	26
ID	i	18	27	0x55958429f298
RBRACKET	]	18	28
SEMICOLON	;	18	29
ID	i	19	0	0x55958429f298
ASSIGN	=	19	1
ID	i	19	2	0x55958429f298
ADD	+	19	3
DECIMAL	1	19	4	1
SEMICOLON	;	19	5
RBRACE	}	20	0
INT	int	21	0
ID	ans	21	3	0x55958429f2c0
ASSIGN	=	21	6
DECIMAL	0	21	7	0
SEMICOLON	;	21	8
ID	i	22	0	0x55958429f298
ASSIGN	=	22	1
DECIMAL	0	22	2	0
SEMICOLON	;	22	3
WHILE	while	23	0
LPAREN	(	23	5
ID	i	23	6	0x55958429f298
LESS	<	23	7
ID	N	23	8	0x55958429f1a8
RPAREN	)	23	9
LBRACE	{	23	10
IF	if	24	0
LPAREN	(	24	2
ID	i	24	3	0x55958429f298
LESS	<	24	4
DECIMAL	10	24	5	10
RPAREN	)	24	7
LBRACE	{	24	8
ID	ans	25	0	0x55958429f2c0
ASSIGN	=	25	3
LPAREN	(	25	4
ID	ans	25	5	0x55958429f2c0
ADD	+	25	8
ID	a3	25	9	0x55958429f270
LBRACKET	[	25	11
ID	i	25	12	0x55958429f298
RBRACKET	]	25	13
RPAREN	)	25	14
MOD	%	25	15
DECIMAL	1333	25	16	1333
SEMICOLON	;	25	20
ID	putint	26	0	0x55958429f2e8
LPAREN	(	26	6
ID	ans	26	7	0x55958429f2c0
RPAREN	)	26	10
SEMICOLON	;	26	11
RBRACE	}	27	0
ELSE	else	28	0
IF	if	28	4
LPAREN	(	28	6
ID	i	28	7	0x55958429f298
LESS	<	28	8
DECIMAL	20	28	9	20
RPAREN	)	28	11
LBRACE	{	28	12
INT	int	29	0
ID	j	29	3	0x55958429f310
ASSIGN	=	29	4
ID	N	29	5	0x55958429f1a8
DIV	/	29	6
DECIMAL	2	29	7	2
SEMICOLON	;	29	8
WHILE	while	30	0
LPAREN	(	30	5
ID	j	30	6	0x55958429f310
LESS	<	30	7
ID	N	30	8	0x55958429f1a8
RPAREN	)	30	9
LBRACE	{	30	10
ID	ans	31	0	0x55958429f2c0
ASSIGN	=	31	3
ID	ans	31	4	0x55958429f2c0
ADD	+	31	7
ID	a3	31	8	0x55958429f270
LBRACKET	[	31	10
ID	i	31	11	0x55958429f298
RBRACKET	]	31	12
SUB	-	31	13
ID	a1	31	14	0x55958429f220
LBRACKET	[	31	16
ID	j	31	17	0x55958429f310
RBRACKET	]	31	18
SEMICOLON	;	31	19
ID	j	32	0	0x55958429f310
ASSIGN	=	32	1
ID	j	32	2	0x55958429f310
ADD	+	32	3
DECIMAL	1	32	4	1
SEMICOLON	;	32	5
RBRACE	}	33	0
ID	putint	34	0	0x55958429f2e8
LPAREN	(	34	6
ID	ans	34	7	0x55958429f2c0
RPAREN	)	34	10
SEMICOLON	;	34	11
RBRACE	}	35	0
ELSE	else	36	0
IF	if	36	4
LPAREN	(	36	6
ID	i	36	7	0x55958429f298
LESS	<	36	8
DECIMAL	30	36	9	30
RPAREN	)	36	11
LBRACE	{	36	12
INT	int	37	0
ID	j	37	3	0x55958429f310
ASSIGN	=	37	4
ID	N	37	5	0x55958429f1a8
DIV	/	37	6
DECIMAL	2	37	7	2
SEMICOLON	;	37	8
WHILE	while	38	0
LPAREN	(	38	5
ID	j	38	6	0x55958429f310
LESS	<	38	7
ID	N	38	8	0x55958429f1a8
RPAREN	)	38	9
LBRACE	{	38	10
IF	if	39	0
LPAREN	(	39	2
ID	j	39	3	0x55958429f310
GREATER	>	39	4
DECIMAL	2233	39	5	2233
RPAREN	)	39	9
LBRACE	{	39	10
ID	ans	40	0	0x55958429f2c0
ASSIGN	=	40	3
ID	ans	40	4	0x55958429f2c0
ADD	+	40	7
ID	a2	40	8	0x55958429f248
LBRACKET	[	40	10
ID	i	40	11	0x55958429f298
RBRACKET	]	40	12
SUB	-	40	13
ID	a1	40	14	0x55958429f220
LBRACKET	[	40	16
ID	j	40	17	0x55958429f310
RBRACKET	]	40	18
SEMICOLON	;	40	19
ID	j	41	0	0x55958429f310
ASSIGN	=	41	1
ID	j	41	2	0x55958429f310
ADD	+	41	3
DECIMAL	1	41	4	1
SEMICOLON	;	41	5
RBRACE	}	42	0
ELSE	else	43	0
LBRACE	{	43	4
ID	ans	44	0	0x55958429f2c0
ASSIGN	=	44	3
LPAREN	(	44	4
ID	ans	44	5	0x55958429f2c0
ADD	+	44	8
ID	a1	44	9	0x55958429f220
LBRACKET	[	44	11
ID	i	44	12	0x55958429f298
RBRACKET	]	44	13
ADD	+	44	14
ID	a3	44	15	0x55958429f270
LBRACKET	[	44	17
ID	j	44	18	0x55958429f310
RBRACKET	]	44	19
RPAREN	)	44	20
MOD	%	44	21
DECIMAL	13333	44	22	13333
SEMICOLON	;	44	27
ID	j	45	0	0x55958429f310
ASSIGN	=	45	1
ID	j	45	2	0x55958429f310
ADD	+	45	3
DECIMAL	2	45	4	2
SEMICOLON	;	45	5
RBRACE	}	46	0
RBRACE	}	47	0
ID	putint	48	0	0x55958429f2e8
LPAREN	(	48	6
ID	ans	48	7	0x55958429f2c0
RPAREN	)	48	10
SEMICOLON	;	48	11
RBRACE	}	49	0
ELSE	else	50	0
LBRACE	{	50	4
ID	ans	51	0	0x55958429f2c0
ASSIGN	=	51	3
LPAREN	(	51	4
ID	ans	51	5	0x55958429f2c0
ADD	+	51	8
ID	a3	51	9	0x55958429f270
LBRACKET	[	51	11
ID	i	51	12	0x55958429f298
RBRACKET	]	51	13
MUL	*	51	14
ID	k	51	15	0x55958429f1f8
RPAREN	)	51	16
MOD	%	51	17
DECIMAL	99988	51	18	99988
SEMICOLON	;	51	23
RBRACE	}	52	0
ID	i	53	0	0x55958429f298
ASSIGN	=	53	1
ID	i	53	2	0x55958429f298
ADD	+	53	3
DECIMAL	1	53	4	1
SEMICOLON	;	53	5
RBRACE	}	54	0
RETURN	return	55	0
ID	ans	55	6	0x55958429f2c0
SEMICOLON	;	55	9
RBRACE	}	56	0
INT	int	58	0
ID	main	58	3	0x55958429f338
LPAREN	(	58	7
RPAREN	)	58	8
LBRACE	{	58	9
RETURN	return	59	0
ID	long_array	59	6	0x55958429f1d0
LPAREN	(	59	16
DECIMAL	9	59	17	9
RPAREN	)	59	18
SEMICOLON	;	59	19
RBRACE	}	60	0
