INT	int	1	0
ID	whileIf	1	3	0x5581e3fe81a8
LPAREN	(	1	10
RPAREN	)	1	11
LBRACE	{	1	12
INT	int	2	0
ID	a	2	3	0x5581e3fe81d0
SEMICOLON	;	2	4
ID	a	3	0	0x5581e3fe81d0
ASSIGN	=	3	1
DECIMAL	0	3	2	0
SEMICOLON	;	3	3
INT	int	4	0
ID	b	4	3	0x5581e3fe81f8
SEMICOLON	;	4	4
ID	b	5	0	0x5581e3fe81f8
ASSIGN	=	5	1
DECIMAL	0	5	2	0
SEMICOLON	;	5	3
WHILE	while	6	0
LPAREN	(	6	5
ID	a	6	6	0x5581e3fe81d0
LESS	<	6	7
DECIMAL	100	6	8	100
RPAREN	)	6	11
LBRACE	{	6	12
IF	if	7	0
LPAREN	(	7	2
ID	a	7	3	0x5581e3fe81d0
EQUAL	==	7	4
DECIMAL	5	7	6	5
RPAREN	)	7	7
LBRACE	{	7	8
ID	b	8	0	0x5581e3fe81f8
ASSIGN	=	8	1
DECIMAL	25	8	2	25
SEMICOLON	;	8	4
RBRACE	}	9	0
ELSE	else	10	0
IF	if	10	4
LPAREN	(	10	6
ID	a	10	7	0x5581e3fe81d0
EQUAL	==	10	8
DECIMAL	10	10	10	10
RPAREN	)	10	12
LBRACE	{	10	13
ID	b	11	0	0x5581e3fe81f8
ASSIGN	=	11	1
DECIMAL	42	11	2	42
SEMICOLON	;	11	4
RBRACE	}	12	0
ELSE	else	13	0
LBRACE	{	13	4
ID	b	14	0	0x5581e3fe81f8
ASSIGN	=	14	1
ID	a	14	2	0x5581e3fe81d0
MUL	*	14	3
DECIMAL	2	14	4	2
SEMICOLON	;	14	5
RBRACE	}	15	0
ID	a	16	0	0x5581e3fe81d0
ASSIGN	=	16	1
ID	a	16	2	0x5581e3fe81d0
ADD	+	16	3
DECIMAL	1	16	4	1
SEMICOLON	;	16	5
RBRACE	}	17	0
RETURN	return	18	0
LPAREN	(	18	6
ID	b	18	7	0x5581e3fe81f8
RPAREN	)	18	8
SEMICOLON	;	18	9
RBRACE	}	19	0
INT	int	22	0
ID	main	22	3	0x5581e3fe8220
LPAREN	(	22	7
RPAREN	)	22	8
LBRACE	{	22	9
RETURN	return	23	0
LPAREN	(	23	6
ID	whileIf	23	7	0x5581e3fe81a8
LPAREN	(	23	14
RPAREN	)	23	15
RPAREN	)	23	16
SEMICOLON	;	23	17
RBRACE	}	24	0
