INT	int	0	0
ID	enc	0	3	0x55c27d9ff1a8
LPAREN	(	0	6
INT	int	0	7
ID	a	0	10	0x55c27d9ff1d0
RPAREN	)	0	11
LBRACE	{	1	0
IF	if	2	0
LPAREN	(	2	2
ID	a	2	3	0x55c27d9ff1d0
GREATER	>	2	4
DECIMAL	25	2	5	25
RPAREN	)	2	7
ID	a	3	0	0x55c27d9ff1d0
ASSIGN	=	3	1
ID	a	3	2	0x55c27d9ff1d0
ADD	+	3	3
DECIMAL	60	3	4	60
SEMICOLON	;	3	6
ELSE	else	4	0
LBRACE	{	5	0
ID	a	6	0	0x55c27d9ff1d0
ASSIGN	=	6	1
ID	a	6	2	0x55c27d9ff1d0
SUB	-	6	3
DECIMAL	15	6	4	15
SEMICOLON	;	6	6
RBRACE	}	7	0
RETURN	return	9	0
ID	a	9	6	0x55c27d9ff1d0
SEMICOLON	;	9	7
RBRACE	}	11	0
INT	int	13	0
ID	dec	13	3	0x55c27d9ff1f8
LPAREN	(	13	6
INT	int	13	7
ID	a	13	10	0x55c27d9ff1d0
RPAREN	)	13	11
LBRACE	{	14	0
IF	if	15	0
LPAREN	(	15	2
ID	a	15	3	0x55c27d9ff1d0
GREATER	>	15	4
DECIMAL	85	15	5	85
RPAREN	)	15	7
ID	a	16	0	0x55c27d9ff1d0
ASSIGN	=	16	1
ID	a	16	2	0x55c27d9ff1d0
SUB	-	16	3
DECIMAL	59	16	4	59
SEMICOLON	;	16	6
ELSE	else	17	0
LBRACE	{	18	0
ID	a	19	0	0x55c27d9ff1d0
ASSIGN	=	19	1
ID	a	19	2	0x55c27d9ff1d0
ADD	+	19	3
DECIMAL	14	19	4	14
SEMICOLON	;	19	6
RBRACE	}	20	0
RETURN	return	22	0
ID	a	22	6	0x55c27d9ff1d0
SEMICOLON	;	22	7
RBRACE	}	24	0
INT	int	26	0
ID	main	26	3	0x55c27d9ff220
LPAREN	(	26	7
RPAREN	)	26	8
LBRACE	{	27	0
INT	int	28	0
ID	a	28	3	0x55c27d9ff1d0
SEMICOLON	;	28	4
ID	a	29	0	0x55c27d9ff1d0
ASSIGN	=	29	1
DECIMAL	400	29	2	400
SEMICOLON	;	29	5
INT	int	30	0
ID	res	30	3	0x55c27d9ff248
SEMICOLON	;	30	6
ID	res	31	0	0x55c27d9ff248
ASSIGN	=	31	3
ID	enc	31	4	0x55c27d9ff1a8
LPAREN	(	31	7
ID	a	31	8	0x55c27d9ff1d0
RPAREN	)	31	9
SEMICOLON	;	31	10
ID	res	32	0	0x55c27d9ff248
ASSIGN	=	32	3
ID	dec	32	4	0x55c27d9ff1f8
LPAREN	(	32	7
ID	res	32	8	0x55c27d9ff248
RPAREN	)	32	11
SEMICOLON	;	32	12
ID	putint	33	0	0x55c27d9ff270
LPAREN	(	33	6
ID	res	33	7	0x55c27d9ff248
RPAREN	)	33	10
SEMICOLON	;	33	11
ID	res	34	0	0x55c27d9ff248
ASSIGN	=	34	3
DECIMAL	10	34	4	10
SEMICOLON	;	34	6
ID	putch	35	0	0x55c27d9ff298
LPAREN	(	35	5
ID	res	35	6	0x55c27d9ff248
RPAREN	)	35	9
SEMICOLON	;	35	10
RETURN	return	36	0
DECIMAL	0	36	6	0
SEMICOLON	;	36	7
RBRACE	}	37	0
