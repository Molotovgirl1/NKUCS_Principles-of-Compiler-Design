INT	int	0	0
ID	fun	0	3	0x55891b9621a8
LPAREN	(	0	6
INT	int	0	7
ID	m	0	10	0x55891b9621d0
COMMA	,	0	11
INT	int	0	12
ID	n	0	15	0x55891b9621f8
RPAREN	)	0	16
LBRACE	{	0	17
INT	int	1	0
ID	rem	1	3	0x55891b962220
SEMICOLON	;	1	6
WHILE	while	2	0
LPAREN	(	2	5
ID	n	2	6	0x55891b9621f8
GREATER	>	2	7
DECIMAL	0	2	8	0
RPAREN	)	2	9
LBRACE	{	2	10
ID	rem	3	0	0x55891b962220
ASSIGN	=	3	3
ID	m	3	4	0x55891b9621d0
MOD	%	3	5
ID	n	3	6	0x55891b9621f8
SEMICOLON	;	3	7
ID	m	4	0	0x55891b9621d0
ASSIGN	=	4	1
ID	n	4	2	0x55891b9621f8
SEMICOLON	;	4	3
ID	n	5	0	0x55891b9621f8
ASSIGN	=	5	1
ID	rem	5	2	0x55891b962220
SEMICOLON	;	5	5
RBRACE	}	6	0
RETURN	return	7	0
ID	m	7	6	0x55891b9621d0
SEMICOLON	;	7	7
RBRACE	}	8	0
INT	int	9	0
ID	main	9	3	0x55891b962248
LPAREN	(	9	7
RPAREN	)	9	8
LBRACE	{	9	9
INT	int	10	0
ID	n	10	3	0x55891b9621f8
COMMA	,	10	4
ID	m	10	5	0x55891b9621d0
SEMICOLON	;	10	6
INT	int	11	0
ID	num	11	3	0x55891b962270
SEMICOLON	;	11	6
ID	m	12	0	0x55891b9621d0
ASSIGN	=	12	1
ID	getint	12	2	0x55891b962298
LPAREN	(	12	8
RPAREN	)	12	9
SEMICOLON	;	12	10
ID	n	13	0	0x55891b9621f8
ASSIGN	=	13	1
ID	getint	13	2	0x55891b962298
LPAREN	(	13	8
RPAREN	)	13	9
SEMICOLON	;	13	10
ID	num	14	0	0x55891b962270
ASSIGN	=	14	3
ID	fun	14	4	0x55891b9621a8
LPAREN	(	14	7
ID	m	14	8	0x55891b9621d0
COMMA	,	14	9
ID	n	14	10	0x55891b9621f8
RPAREN	)	14	11
SEMICOLON	;	14	12
ID	putint	15	0	0x55891b9622c0
LPAREN	(	15	6
ID	num	15	7	0x55891b962270
RPAREN	)	15	10
SEMICOLON	;	15	11
RETURN	return	17	0
DECIMAL	0	17	6	0
SEMICOLON	;	17	7
RBRACE	}	18	0
