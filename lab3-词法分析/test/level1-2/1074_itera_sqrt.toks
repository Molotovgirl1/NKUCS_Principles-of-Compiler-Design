INT	int	0	0
ID	fsqrt	0	3	0x55b4657de1a8
LPAREN	(	0	8
INT	int	0	9
ID	a	0	12	0x55b4657de1d0
RPAREN	)	0	13
LBRACE	{	1	0
INT	int	2	0
ID	x0	2	3	0x55b4657de1f8
ASSIGN	=	2	5
DECIMAL	0	2	6	0
SEMICOLON	;	2	7
INT	int	3	0
ID	x1	3	3	0x55b4657de220
SEMICOLON	;	3	5
ID	x1	4	0	0x55b4657de220
ASSIGN	=	4	2
ID	a	4	3	0x55b4657de1d0
DIV	/	4	4
DECIMAL	2	4	5	2
SEMICOLON	;	4	6
WHILE	while	5	0
LPAREN	(	5	5
ID	x0	5	6	0x55b4657de1f8
SUB	-	5	8
ID	x1	5	9	0x55b4657de220
NEQUAL	!=	5	11
DECIMAL	0	5	13	0
RPAREN	)	5	14
LBRACE	{	6	0
ID	x0	7	0	0x55b4657de1f8
ASSIGN	=	7	2
ID	x1	7	3	0x55b4657de220
SEMICOLON	;	7	5
ID	x1	8	0	0x55b4657de220
ASSIGN	=	8	2
LPAREN	(	8	3
ID	x0	8	4	0x55b4657de1f8
ADD	+	8	6
ID	a	8	7	0x55b4657de1d0
DIV	/	8	8
ID	x0	8	9	0x55b4657de1f8
RPAREN	)	8	11
SEMICOLON	;	8	12
ID	x1	9	0	0x55b4657de220
ASSIGN	=	9	2
ID	x1	9	3	0x55b4657de220
DIV	/	9	5
DECIMAL	2	9	6	2
SEMICOLON	;	9	7
RBRACE	}	10	0
RETURN	return	12	0
ID	x1	12	6	0x55b4657de220
SEMICOLON	;	12	8
RBRACE	}	14	0
INT	int	16	0
ID	main	16	3	0x55b4657de248
LPAREN	(	16	7
RPAREN	)	16	8
LBRACE	{	17	0
INT	int	18	0
ID	a	18	3	0x55b4657de1d0
SEMICOLON	;	18	4
ID	a	19	0	0x55b4657de1d0
ASSIGN	=	19	1
DECIMAL	400	19	2	400
SEMICOLON	;	19	5
INT	int	20	0
ID	res	20	3	0x55b4657de270
SEMICOLON	;	20	6
ID	res	21	0	0x55b4657de270
ASSIGN	=	21	3
ID	fsqrt	21	4	0x55b4657de1a8
LPAREN	(	21	9
ID	a	21	10	0x55b4657de1d0
RPAREN	)	21	11
SEMICOLON	;	21	12
ID	putint	22	0	0x55b4657de298
LPAREN	(	22	6
ID	res	22	7	0x55b4657de270
RPAREN	)	22	10
SEMICOLON	;	22	11
ID	res	23	0	0x55b4657de270
ASSIGN	=	23	3
DECIMAL	10	23	4	10
SEMICOLON	;	23	6
ID	putch	24	0	0x55b4657de2c0
LPAREN	(	24	5
ID	res	24	6	0x55b4657de270
RPAREN	)	24	9
SEMICOLON	;	24	10
RETURN	return	25	0
DECIMAL	0	25	6	0
SEMICOLON	;	25	7
RBRACE	}	26	0
