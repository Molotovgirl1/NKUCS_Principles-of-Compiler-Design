INT	int	0	0
ID	N	0	3	0x5593a930f1a8
SEMICOLON	;	0	4
INT	int	2	0
ID	newline	2	3	0x5593a930f1d0
SEMICOLON	;	2	10
INT	int	4	0
ID	factor	4	3	0x5593a930f1f8
LPAREN	(	4	9
INT	int	4	10
ID	n	4	13	0x5593a930f220
RPAREN	)	4	14
LBRACE	{	5	0
INT	int	6	0
ID	i	6	3	0x5593a930f248
SEMICOLON	;	6	4
INT	int	7	0
ID	sum	7	3	0x5593a930f270
SEMICOLON	;	7	6
ID	sum	8	0	0x5593a930f270
ASSIGN	=	8	3
DECIMAL	0	8	4	0
SEMICOLON	;	8	5
ID	i	9	0	0x5593a930f248
ASSIGN	=	9	1
DECIMAL	1	9	2	1
SEMICOLON	;	9	3
WHILE	while	10	0
LPAREN	(	10	5
ID	i	10	6	0x5593a930f248
LESS	<	10	7
ID	n	10	8	0x5593a930f220
ADD	+	10	9
DECIMAL	1	10	10	1
RPAREN	)	10	11
LBRACE	{	11	0
IF	if	12	0
LPAREN	(	12	2
ID	n	12	3	0x5593a930f220
MOD	%	12	4
ID	i	12	5	0x5593a930f248
EQUAL	==	12	6
DECIMAL	0	12	8	0
RPAREN	)	12	9
LBRACE	{	13	0
ID	sum	14	0	0x5593a930f270
ASSIGN	=	14	3
ID	sum	14	4	0x5593a930f270
ADD	+	14	7
ID	i	14	8	0x5593a930f248
SEMICOLON	;	14	9
RBRACE	}	15	0
ID	i	16	0	0x5593a930f248
ASSIGN	=	16	1
ID	i	16	2	0x5593a930f248
ADD	+	16	3
DECIMAL	1	16	4	1
SEMICOLON	;	16	5
RBRACE	}	17	0
RETURN	return	19	0
ID	sum	19	6	0x5593a930f270
SEMICOLON	;	19	9
RBRACE	}	20	0
INT	int	22	0
ID	main	22	3	0x5593a930f298
LPAREN	(	22	7
RPAREN	)	22	8
LBRACE	{	23	0
ID	N	24	0	0x5593a930f1a8
ASSIGN	=	24	1
DECIMAL	4	24	2	4
SEMICOLON	;	24	3
ID	newline	25	0	0x5593a930f1d0
ASSIGN	=	25	7
DECIMAL	10	25	8	10
SEMICOLON	;	25	10
INT	int	26	0
ID	i	26	3	0x5593a930f248
SEMICOLON	;	26	4
INT	int	27	0
ID	m	27	3	0x5593a930f2c0
SEMICOLON	;	27	4
ID	m	28	0	0x5593a930f2c0
ASSIGN	=	28	1
DECIMAL	1478	28	2	1478
SEMICOLON	;	28	6
INT	int	29	0
ID	t	29	3	0x5593a930f2e8
SEMICOLON	;	29	4
RETURN	return	31	0
ID	factor	31	6	0x5593a930f1f8
LPAREN	(	31	12
ID	m	31	13	0x5593a930f2c0
RPAREN	)	31	14
SEMICOLON	;	31	15
RBRACE	}	32	0
