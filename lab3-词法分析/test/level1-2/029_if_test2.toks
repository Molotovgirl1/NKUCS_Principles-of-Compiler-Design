INT	int	1	0
ID	ifElseIf	1	3	0x558aa0b1b1a8
LPAREN	(	1	11
RPAREN	)	1	12
LBRACE	{	1	13
INT	int	2	0
ID	a	2	3	0x558aa0b1b1d0
SEMICOLON	;	2	4
ID	a	3	0	0x558aa0b1b1d0
ASSIGN	=	3	1
DECIMAL	5	3	2	5
SEMICOLON	;	3	3
INT	int	4	0
ID	b	4	3	0x558aa0b1b1f8
SEMICOLON	;	4	4
ID	b	5	0	0x558aa0b1b1f8
ASSIGN	=	5	1
DECIMAL	10	5	2	10
SEMICOLON	;	5	4
IF	if	6	0
LPAREN	(	6	2
ID	a	6	3	0x558aa0b1b1d0
EQUAL	==	6	4
DECIMAL	6	6	6	6
OR	||	6	7
ID	b	6	9	0x558aa0b1b1f8
EQUAL	==	6	10
HEXADECIMAL	0xb	6	12	11
RPAREN	)	6	15
LBRACE	{	6	16
RETURN	return	7	0
ID	a	7	6	0x558aa0b1b1d0
SEMICOLON	;	7	7
RBRACE	}	8	0
ELSE	else	9	0
LBRACE	{	9	4
IF	if	10	0
LPAREN	(	10	2
ID	b	10	3	0x558aa0b1b1f8
EQUAL	==	10	4
DECIMAL	10	10	6	10
AND	&&	10	8
ID	a	10	10	0x558aa0b1b1d0
EQUAL	==	10	11
DECIMAL	1	10	13	1
RPAREN	)	10	14
ID	a	11	0	0x558aa0b1b1d0
ASSIGN	=	11	1
DECIMAL	25	11	2	25
SEMICOLON	;	11	4
ELSE	else	12	0
IF	if	12	4
LPAREN	(	12	6
ID	b	12	7	0x558aa0b1b1f8
EQUAL	==	12	8
DECIMAL	10	12	10	10
AND	&&	12	12
ID	a	12	14	0x558aa0b1b1d0
EQUAL	==	12	15
SUB	-	12	17
DECIMAL	5	12	18	5
RPAREN	)	12	19
ID	a	13	0	0x558aa0b1b1d0
ASSIGN	=	13	1
ID	a	13	2	0x558aa0b1b1d0
ADD	+	13	3
DECIMAL	15	13	4	15
SEMICOLON	;	13	6
ELSE	else	14	0
ID	a	15	0	0x558aa0b1b1d0
ASSIGN	=	15	1
SUB	-	15	2
ADD	+	15	3
ID	a	15	4	0x558aa0b1b1d0
SEMICOLON	;	15	5
RBRACE	}	16	0
RETURN	return	18	0
ID	a	18	6	0x558aa0b1b1d0
SEMICOLON	;	18	7
RBRACE	}	19	0
INT	int	21	0
ID	main	21	3	0x558aa0b1b220
LPAREN	(	21	7
RPAREN	)	21	8
LBRACE	{	21	9
ID	putint	22	0	0x558aa0b1b248
LPAREN	(	22	6
ID	ifElseIf	22	7	0x558aa0b1b1a8
LPAREN	(	22	15
RPAREN	)	22	16
RPAREN	)	22	17
SEMICOLON	;	22	18
RETURN	return	23	0
DECIMAL	0	23	6	0
SEMICOLON	;	23	7
RBRACE	}	24	0
