INT	int	0	0
ID	g	0	3	0x55de480281a8
SEMICOLON	;	0	4
INT	int	1	0
ID	h	1	3	0x55de480281d0
SEMICOLON	;	1	4
INT	int	2	0
ID	f	2	3	0x55de480281f8
SEMICOLON	;	2	4
INT	int	3	0
ID	e	3	3	0x55de48028220
SEMICOLON	;	3	4
INT	int	4	0
ID	EightWhile	4	3	0x55de48028248
LPAREN	(	4	13
RPAREN	)	4	14
LBRACE	{	4	15
INT	int	5	0
ID	a	5	3	0x55de48028270
SEMICOLON	;	5	4
ID	a	6	0	0x55de48028270
ASSIGN	=	6	1
DECIMAL	5	6	2	5
SEMICOLON	;	6	3
INT	int	7	0
ID	b	7	3	0x55de48028298
SEMICOLON	;	7	4
INT	int	8	0
ID	c	8	3	0x55de480282c0
SEMICOLON	;	8	4
ID	b	9	0	0x55de48028298
ASSIGN	=	9	1
DECIMAL	6	9	2	6
SEMICOLON	;	9	3
ID	c	10	0	0x55de480282c0
ASSIGN	=	10	1
DECIMAL	7	10	2	7
SEMICOLON	;	10	3
INT	int	11	0
ID	d	11	3	0x55de480282e8
SEMICOLON	;	11	4
ID	d	12	0	0x55de480282e8
ASSIGN	=	12	1
DECIMAL	10	12	2	10
SEMICOLON	;	12	4
WHILE	while	13	0
LPAREN	(	13	5
ID	a	13	6	0x55de48028270
LESS	<	13	7
DECIMAL	20	13	8	20
RPAREN	)	13	10
LBRACE	{	13	11
ID	a	14	0	0x55de48028270
ASSIGN	=	14	1
ID	a	14	2	0x55de48028270
ADD	+	14	3
DECIMAL	3	14	4	3
SEMICOLON	;	14	5
WHILE	while	15	0
LPAREN	(	15	5
ID	b	15	6	0x55de48028298
LESS	<	15	7
DECIMAL	10	15	8	10
RPAREN	)	15	10
LBRACE	{	15	11
ID	b	16	0	0x55de48028298
ASSIGN	=	16	1
ID	b	16	2	0x55de48028298
ADD	+	16	3
DECIMAL	1	16	4	1
SEMICOLON	;	16	5
WHILE	while	17	0
LPAREN	(	17	5
ID	c	17	6	0x55de480282c0
EQUAL	==	17	7
DECIMAL	7	17	9	7
RPAREN	)	17	10
LBRACE	{	17	11
ID	c	18	0	0x55de480282c0
ASSIGN	=	18	1
ID	c	18	2	0x55de480282c0
SUB	-	18	3
DECIMAL	1	18	4	1
SEMICOLON	;	18	5
WHILE	while	19	0
LPAREN	(	19	5
ID	d	19	6	0x55de480282e8
LESS	<	19	7
DECIMAL	20	19	8	20
RPAREN	)	19	10
LBRACE	{	19	11
ID	d	20	0	0x55de480282e8
ASSIGN	=	20	1
ID	d	20	2	0x55de480282e8
ADD	+	20	3
DECIMAL	3	20	4	3
SEMICOLON	;	20	5
WHILE	while	21	0
LPAREN	(	21	5
ID	e	21	6	0x55de48028220
GREATER	>	21	7
DECIMAL	1	21	8	1
RPAREN	)	21	9
LBRACE	{	21	10
ID	e	22	0	0x55de48028220
ASSIGN	=	22	1
ID	e	22	2	0x55de48028220
SUB	-	22	3
DECIMAL	1	22	4	1
SEMICOLON	;	22	5
WHILE	while	23	0
LPAREN	(	23	5
ID	f	23	6	0x55de480281f8
GREATER	>	23	7
DECIMAL	2	23	8	2
RPAREN	)	23	9
LBRACE	{	23	10
ID	f	24	0	0x55de480281f8
ASSIGN	=	24	1
ID	f	24	2	0x55de480281f8
SUB	-	24	3
DECIMAL	2	24	4	2
SEMICOLON	;	24	5
WHILE	while	25	0
LPAREN	(	25	5
ID	g	25	6	0x55de480281a8
LESS	<	25	7
DECIMAL	3	25	8	3
RPAREN	)	25	9
LBRACE	{	25	10
ID	g	26	0	0x55de480281a8
ASSIGN	=	26	1
ID	g	26	2	0x55de480281a8
ADD	+	26	3
DECIMAL	10	26	4	10
SEMICOLON	;	26	6
WHILE	while	27	0
LPAREN	(	27	5
ID	h	27	6	0x55de480281d0
LESS	<	27	7
DECIMAL	10	27	8	10
RPAREN	)	27	10
LBRACE	{	27	11
ID	h	28	0	0x55de480281d0
ASSIGN	=	28	1
ID	h	28	2	0x55de480281d0
ADD	+	28	3
DECIMAL	8	28	4	8
SEMICOLON	;	28	5
RBRACE	}	29	0
ID	h	30	0	0x55de480281d0
ASSIGN	=	30	1
ID	h	30	2	0x55de480281d0
SUB	-	30	3
DECIMAL	1	30	4	1
SEMICOLON	;	30	5
RBRACE	}	31	0
ID	g	32	0	0x55de480281a8
ASSIGN	=	32	1
ID	g	32	2	0x55de480281a8
SUB	-	32	3
DECIMAL	8	32	4	8
SEMICOLON	;	32	5
RBRACE	}	33	0
ID	f	34	0	0x55de480281f8
ASSIGN	=	34	1
ID	f	34	2	0x55de480281f8
ADD	+	34	3
DECIMAL	1	34	4	1
SEMICOLON	;	34	5
RBRACE	}	35	0
ID	e	36	0	0x55de48028220
ASSIGN	=	36	1
ID	e	36	2	0x55de48028220
ADD	+	36	3
DECIMAL	1	36	4	1
SEMICOLON	;	36	5
RBRACE	}	37	0
ID	d	38	0	0x55de480282e8
ASSIGN	=	38	1
ID	d	38	2	0x55de480282e8
SUB	-	38	3
DECIMAL	1	38	4	1
SEMICOLON	;	38	5
RBRACE	}	39	0
ID	c	40	0	0x55de480282c0
ASSIGN	=	40	1
ID	c	40	2	0x55de480282c0
ADD	+	40	3
DECIMAL	1	40	4	1
SEMICOLON	;	40	5
RBRACE	}	41	0
ID	b	42	0	0x55de48028298
ASSIGN	=	42	1
ID	b	42	2	0x55de48028298
SUB	-	42	3
DECIMAL	2	42	4	2
SEMICOLON	;	42	5
RBRACE	}	43	0
RETURN	return	45	0
LPAREN	(	45	6
ID	a	45	7	0x55de48028270
ADD	+	45	8
LPAREN	(	45	9
ID	b	45	10	0x55de48028298
ADD	+	45	11
ID	d	45	12	0x55de480282e8
RPAREN	)	45	13
ADD	+	45	14
ID	c	45	15	0x55de480282c0
RPAREN	)	45	16
SUB	-	45	17
LPAREN	(	45	18
ID	e	45	19	0x55de48028220
ADD	+	45	20
ID	d	45	21	0x55de480282e8
SUB	-	45	22
ID	g	45	23	0x55de480281a8
ADD	+	45	24
ID	h	45	25	0x55de480281d0
RPAREN	)	45	26
SEMICOLON	;	45	27
RBRACE	}	46	0
INT	int	48	0
ID	main	48	3	0x55de48028310
LPAREN	(	48	7
RPAREN	)	48	8
LBRACE	{	48	9
ID	g	49	0	0x55de480281a8
ASSIGN	=	49	1
DECIMAL	1	49	2	1
SEMICOLON	;	49	3
ID	h	50	0	0x55de480281d0
ASSIGN	=	50	1
DECIMAL	2	50	2	2
SEMICOLON	;	50	3
ID	e	51	0	0x55de48028220
ASSIGN	=	51	1
DECIMAL	4	51	2	4
SEMICOLON	;	51	3
ID	f	52	0	0x55de480281f8
ASSIGN	=	52	1
DECIMAL	6	52	2	6
SEMICOLON	;	52	3
RETURN	return	53	0
ID	EightWhile	53	6	0x55de48028248
LPAREN	(	53	16
RPAREN	)	53	17
SEMICOLON	;	53	18
RBRACE	}	54	0
