VOID	void	1	0
ID	move	1	4	0x5589d01501a8
LPAREN	(	1	8
INT	int	1	9
ID	x	1	12	0x5589d01501d0
COMMA	,	1	13
INT	int	1	14
ID	y	1	17	0x5589d01501f8
RPAREN	)	1	18
LBRACE	{	2	0
ID	putint	3	0	0x5589d0150220
LPAREN	(	3	6
ID	x	3	7	0x5589d01501d0
RPAREN	)	3	8
SEMICOLON	;	3	9
ID	putch	3	10	0x5589d0150248
LPAREN	(	3	15
DECIMAL	32	3	16	32
RPAREN	)	3	18
SEMICOLON	;	3	19
ID	putint	3	20	0x5589d0150220
LPAREN	(	3	26
ID	y	3	27	0x5589d01501f8
RPAREN	)	3	28
SEMICOLON	;	3	29
ID	putch	3	30	0x5589d0150248
LPAREN	(	3	35
DECIMAL	44	3	36	44
RPAREN	)	3	38
SEMICOLON	;	3	39
ID	putch	3	40	0x5589d0150248
LPAREN	(	3	45
DECIMAL	32	3	46	32
RPAREN	)	3	48
SEMICOLON	;	3	49
RBRACE	}	4	0
VOID	void	6	0
ID	hanoi	6	4	0x5589d0150270
LPAREN	(	6	9
INT	int	6	10
ID	n	6	13	0x5589d0150298
COMMA	,	6	14
INT	int	6	15
ID	one	6	18	0x5589d01502c0
COMMA	,	6	21
INT	int	6	22
ID	two	6	25	0x5589d01502e8
COMMA	,	6	28
INT	int	6	29
ID	three	6	32	0x5589d0150310
RPAREN	)	6	37
LBRACE	{	7	0
IF	if	8	0
LPAREN	(	8	2
ID	n	8	3	0x5589d0150298
EQUAL	==	8	4
DECIMAL	1	8	6	1
RPAREN	)	8	7
ID	move	9	0	0x5589d01501a8
LPAREN	(	9	4
ID	one	9	5	0x5589d01502c0
COMMA	,	9	8
ID	three	9	9	0x5589d0150310
RPAREN	)	9	14
SEMICOLON	;	9	15
ELSE	else	10	0
LBRACE	{	10	4
ID	hanoi	11	0	0x5589d0150270
LPAREN	(	11	5
ID	n	11	6	0x5589d0150298
SUB	-	11	7
DECIMAL	1	11	8	1
COMMA	,	11	9
ID	one	11	10	0x5589d01502c0
COMMA	,	11	13
ID	three	11	14	0x5589d0150310
COMMA	,	11	19
ID	two	11	20	0x5589d01502e8
RPAREN	)	11	23
SEMICOLON	;	11	24
ID	move	12	0	0x5589d01501a8
LPAREN	(	12	4
ID	one	12	5	0x5589d01502c0
COMMA	,	12	8
ID	three	12	9	0x5589d0150310
RPAREN	)	12	14
SEMICOLON	;	12	15
ID	hanoi	13	0	0x5589d0150270
LPAREN	(	13	5
ID	n	13	6	0x5589d0150298
SUB	-	13	7
DECIMAL	1	13	8	1
COMMA	,	13	9
ID	two	13	10	0x5589d01502e8
COMMA	,	13	13
ID	one	13	14	0x5589d01502c0
COMMA	,	13	17
ID	three	13	18	0x5589d0150310
RPAREN	)	13	23
SEMICOLON	;	13	24
RBRACE	}	14	0
RBRACE	}	15	0
INT	int	17	0
ID	main	17	3	0x5589d0150338
LPAREN	(	17	7
RPAREN	)	17	8
LBRACE	{	18	0
INT	int	19	0
ID	n	19	3	0x5589d0150298
ASSIGN	=	19	4
ID	getint	19	5	0x5589d0150360
LPAREN	(	19	11
RPAREN	)	19	12
SEMICOLON	;	19	13
WHILE	while	20	0
LPAREN	(	20	5
ID	n	20	6	0x5589d0150298
GREATER	>	20	7
DECIMAL	0	20	8	0
RPAREN	)	20	9
LBRACE	{	20	10
ID	hanoi	21	0	0x5589d0150270
LPAREN	(	21	5
ID	getint	21	6	0x5589d0150360
LPAREN	(	21	12
RPAREN	)	21	13
COMMA	,	21	14
DECIMAL	1	21	15	1
COMMA	,	21	16
DECIMAL	2	21	17	2
COMMA	,	21	18
DECIMAL	3	21	19	3
RPAREN	)	21	20
SEMICOLON	;	21	21
ID	putch	22	0	0x5589d0150248
LPAREN	(	22	5
DECIMAL	10	22	6	10
RPAREN	)	22	8
SEMICOLON	;	22	9
ID	n	23	0	0x5589d0150298
ASSIGN	=	23	1
ID	n	23	2	0x5589d0150298
SUB	-	23	3
DECIMAL	1	23	4	1
SEMICOLON	;	23	5
RBRACE	}	24	0
RETURN	return	25	0
DECIMAL	0	25	6	0
SEMICOLON	;	25	7
RBRACE	}	26	0
