INT	int	1	0
ID	gcd	1	3	0x557186ae81a8
LPAREN	(	1	6
INT	int	1	7
ID	m	1	10	0x557186ae81d0
COMMA	,	1	11
INT	int	1	12
ID	n	1	15	0x557186ae81f8
RPAREN	)	1	16
LBRACE	{	2	0
IF	if	3	0
LPAREN	(	3	2
ID	n	3	3	0x557186ae81f8
EQUAL	==	3	4
DECIMAL	0	3	6	0
RPAREN	)	3	7
LBRACE	{	3	8
RETURN	return	4	0
ID	m	4	6	0x557186ae81d0
SEMICOLON	;	4	7
RBRACE	}	5	0
RETURN	return	6	0
ID	gcd	6	6	0x557186ae81a8
LPAREN	(	6	9
ID	n	6	10	0x557186ae81f8
COMMA	,	6	11
ID	m	6	12	0x557186ae81d0
MOD	%	6	13
ID	n	6	14	0x557186ae81f8
RPAREN	)	6	15
SEMICOLON	;	6	16
RBRACE	}	7	0
INT	int	9	0
ID	main	9	3	0x557186ae8220
LPAREN	(	9	7
RPAREN	)	9	8
LBRACE	{	10	0
INT	int	11	0
ID	k	11	3	0x557186ae8248
ASSIGN	=	11	4
ID	getint	11	5	0x557186ae8270
LPAREN	(	11	11
RPAREN	)	11	12
SEMICOLON	;	11	13
WHILE	while	12	0
LPAREN	(	12	5
ID	k	12	6	0x557186ae8248
GREATER	>	12	7
DECIMAL	0	12	8	0
RPAREN	)	12	9
LBRACE	{	12	10
INT	int	13	0
ID	a	13	3	0x557186ae8298
ASSIGN	=	13	4
ID	getint	13	5	0x557186ae8270
LPAREN	(	13	11
RPAREN	)	13	12
COMMA	,	13	13
ID	b	13	14	0x557186ae82c0
ASSIGN	=	13	15
ID	getint	13	16	0x557186ae8270
LPAREN	(	13	22
RPAREN	)	13	23
SEMICOLON	;	13	24
ID	putint	14	0	0x557186ae82e8
LPAREN	(	14	6
ID	gcd	14	7	0x557186ae81a8
LPAREN	(	14	10
ID	a	14	11	0x557186ae8298
COMMA	,	14	12
ID	b	14	13	0x557186ae82c0
RPAREN	)	14	14
RPAREN	)	14	15
SEMICOLON	;	14	16
ID	putch	14	17	0x557186ae8310
LPAREN	(	14	22
DECIMAL	10	14	23	10
RPAREN	)	14	25
SEMICOLON	;	14	26
ID	k	15	0	0x557186ae8248
ASSIGN	=	15	1
ID	k	15	2	0x557186ae8248
SUB	-	15	3
DECIMAL	1	15	4	1
SEMICOLON	;	15	5
RBRACE	}	16	0
RETURN	return	17	0
DECIMAL	0	17	6	0
SEMICOLON	;	17	7
RBRACE	}	18	0
