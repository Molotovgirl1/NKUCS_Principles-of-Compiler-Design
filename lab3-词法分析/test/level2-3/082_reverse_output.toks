VOID	void	0	0
ID	reverse	0	4	0x557d9dff31a8
LPAREN	(	0	11
INT	int	0	12
ID	n	0	15	0x557d9dff31d0
RPAREN	)	0	16
LBRACE	{	0	17
INT	int	1	0
ID	next	1	3	0x557d9dff31f8
SEMICOLON	;	1	7
IF	if	2	0
LPAREN	(	2	2
ID	n	2	3	0x557d9dff31d0
LEQUAL	<=	2	4
DECIMAL	1	2	6	1
RPAREN	)	2	7
LBRACE	{	2	8
ID	next	3	0	0x557d9dff31f8
ASSIGN	=	3	4
ID	getint	3	5	0x557d9dff3220
LPAREN	(	3	11
RPAREN	)	3	12
SEMICOLON	;	3	13
ID	putint	4	0	0x557d9dff3248
LPAREN	(	4	6
ID	next	4	7	0x557d9dff31f8
RPAREN	)	4	11
SEMICOLON	;	4	12
RBRACE	}	5	0
ELSE	else	6	0
LBRACE	{	6	4
ID	next	7	0	0x557d9dff31f8
ASSIGN	=	7	4
ID	getint	7	5	0x557d9dff3220
LPAREN	(	7	11
RPAREN	)	7	12
SEMICOLON	;	7	13
ID	reverse	8	0	0x557d9dff31a8
LPAREN	(	8	7
ID	n	8	8	0x557d9dff31d0
SUB	-	8	9
DECIMAL	1	8	10	1
RPAREN	)	8	11
SEMICOLON	;	8	12
ID	putint	9	0	0x557d9dff3248
LPAREN	(	9	6
ID	next	9	7	0x557d9dff31f8
RPAREN	)	9	11
SEMICOLON	;	9	12
RBRACE	}	10	0
RBRACE	}	11	0
INT	int	13	0
ID	main	13	3	0x557d9dff3270
LPAREN	(	13	7
RPAREN	)	13	8
LBRACE	{	13	9
INT	int	14	0
ID	i	14	3	0x557d9dff3298
ASSIGN	=	14	4
DECIMAL	200	14	5	200
SEMICOLON	;	14	8
ID	reverse	15	0	0x557d9dff31a8
LPAREN	(	15	7
ID	i	15	8	0x557d9dff3298
RPAREN	)	15	9
SEMICOLON	;	15	10
RETURN	return	16	0
DECIMAL	0	16	6	0
SEMICOLON	;	16	7
RBRACE	}	17	0
