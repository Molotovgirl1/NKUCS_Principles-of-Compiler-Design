INT	int	0	0
ID	doubleWhile	0	3	0x558b38c891a8
LPAREN	(	0	14
RPAREN	)	0	15
LBRACE	{	0	16
INT	int	1	0
ID	i	1	3	0x558b38c891d0
SEMICOLON	;	1	4
ID	i	2	0	0x558b38c891d0
ASSIGN	=	2	1
DECIMAL	5	2	2	5
SEMICOLON	;	2	3
INT	int	3	0
ID	j	3	3	0x558b38c891f8
SEMICOLON	;	3	4
ID	j	4	0	0x558b38c891f8
ASSIGN	=	4	1
DECIMAL	7	4	2	7
SEMICOLON	;	4	3
WHILE	while	5	0
LPAREN	(	5	5
ID	i	5	6	0x558b38c891d0
LESS	<	5	7
DECIMAL	100	5	8	100
RPAREN	)	5	11
LBRACE	{	5	12
ID	i	6	0	0x558b38c891d0
ASSIGN	=	6	1
ID	i	6	2	0x558b38c891d0
ADD	+	6	3
DECIMAL	30	6	4	30
SEMICOLON	;	6	6
WHILE	while	7	0
LPAREN	(	7	5
ID	j	7	6	0x558b38c891f8
LESS	<	7	7
DECIMAL	100	7	8	100
RPAREN	)	7	11
LBRACE	{	7	12
ID	j	8	0	0x558b38c891f8
ASSIGN	=	8	1
ID	j	8	2	0x558b38c891f8
ADD	+	8	3
DECIMAL	6	8	4	6
SEMICOLON	;	8	5
RBRACE	}	9	0
ID	j	10	0	0x558b38c891f8
ASSIGN	=	10	1
ID	j	10	2	0x558b38c891f8
SUB	-	10	3
DECIMAL	100	10	4	100
SEMICOLON	;	10	7
RBRACE	}	11	0
RETURN	return	12	0
LPAREN	(	12	6
ID	j	12	7	0x558b38c891f8
RPAREN	)	12	8
SEMICOLON	;	12	9
RBRACE	}	13	0
INT	int	15	0
ID	main	15	3	0x558b38c89220
LPAREN	(	15	7
RPAREN	)	15	8
LBRACE	{	15	9
RETURN	return	16	0
ID	doubleWhile	16	6	0x558b38c891a8
LPAREN	(	16	17
RPAREN	)	16	18
SEMICOLON	;	16	19
RBRACE	}	17	0
