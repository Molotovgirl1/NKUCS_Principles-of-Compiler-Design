INT	int	0	0
ID	n	0	3	0x55dc96a131a8
SEMICOLON	;	0	4
INT	int	1	0
ID	select_sort	1	3	0x55dc96a131d0
LPAREN	(	1	14
INT	int	1	15
ID	A	1	18	0x55dc96a131f8
LBRACKET	[	1	19
RBRACKET	]	1	20
COMMA	,	1	21
INT	int	1	22
ID	n	1	25	0x55dc96a131a8
RPAREN	)	1	26
LBRACE	{	2	0
INT	int	3	0
ID	i	3	3	0x55dc96a13220
SEMICOLON	;	3	4
INT	int	4	0
ID	j	4	3	0x55dc96a13248
SEMICOLON	;	4	4
INT	int	5	0
ID	min	5	3	0x55dc96a13270
SEMICOLON	;	5	6
ID	i	6	0	0x55dc96a13220
ASSIGN	=	6	1
DECIMAL	0	6	2	0
SEMICOLON	;	6	3
WHILE	while	7	0
LPAREN	(	7	5
ID	i	7	6	0x55dc96a13220
LESS	<	7	7
ID	n	7	8	0x55dc96a131a8
SUB	-	7	9
DECIMAL	1	7	10	1
RPAREN	)	7	11
LBRACE	{	8	0
ID	min	9	0	0x55dc96a13270
ASSIGN	=	9	3
ID	i	9	4	0x55dc96a13220
SEMICOLON	;	9	5
ID	j	10	0	0x55dc96a13248
ASSIGN	=	10	1
ID	i	10	2	0x55dc96a13220
ADD	+	10	3
DECIMAL	1	10	4	1
SEMICOLON	;	10	5
WHILE	while	11	0
LPAREN	(	11	5
ID	j	11	6	0x55dc96a13248
LESS	<	11	7
ID	n	11	8	0x55dc96a131a8
RPAREN	)	11	9
LBRACE	{	12	0
IF	if	13	0
LPAREN	(	13	2
ID	A	13	3	0x55dc96a131f8
LBRACKET	[	13	4
ID	min	13	5	0x55dc96a13270
RBRACKET	]	13	8
GREATER	>	13	9
ID	A	13	10	0x55dc96a131f8
LBRACKET	[	13	11
ID	j	13	12	0x55dc96a13248
RBRACKET	]	13	13
RPAREN	)	13	14
LBRACE	{	14	0
ID	min	15	0	0x55dc96a13270
ASSIGN	=	15	3
ID	j	15	4	0x55dc96a13248
SEMICOLON	;	15	5
RBRACE	}	16	0
ID	j	17	0	0x55dc96a13248
ASSIGN	=	17	1
ID	j	17	2	0x55dc96a13248
ADD	+	17	3
DECIMAL	1	17	4	1
SEMICOLON	;	17	5
RBRACE	}	18	0
IF	if	19	0
LPAREN	(	19	2
ID	min	19	3	0x55dc96a13270
NEQUAL	!=	19	6
ID	i	19	8	0x55dc96a13220
RPAREN	)	19	9
LBRACE	{	20	0
INT	int	21	0
ID	tmp	21	3	0x55dc96a13298
SEMICOLON	;	21	6
ID	tmp	22	0	0x55dc96a13298
ASSIGN	=	22	3
ID	A	22	4	0x55dc96a131f8
LBRACKET	[	22	5
ID	min	22	6	0x55dc96a13270
RBRACKET	]	22	9
SEMICOLON	;	22	10
ID	A	23	0	0x55dc96a131f8
LBRACKET	[	23	1
ID	min	23	2	0x55dc96a13270
RBRACKET	]	23	5
ASSIGN	=	23	6
ID	A	23	7	0x55dc96a131f8
LBRACKET	[	23	8
ID	i	23	9	0x55dc96a13220
RBRACKET	]	23	10
SEMICOLON	;	23	11
ID	A	24	0	0x55dc96a131f8
LBRACKET	[	24	1
ID	i	24	2	0x55dc96a13220
RBRACKET	]	24	3
ASSIGN	=	24	4
ID	tmp	24	5	0x55dc96a13298
SEMICOLON	;	24	8
RBRACE	}	25	0
ID	i	26	0	0x55dc96a13220
ASSIGN	=	26	1
ID	i	26	2	0x55dc96a13220
ADD	+	26	3
DECIMAL	1	26	4	1
SEMICOLON	;	26	5
RBRACE	}	27	0
RETURN	return	28	0
DECIMAL	0	28	6	0
SEMICOLON	;	28	7
RBRACE	}	29	0
INT	int	31	0
ID	main	31	3	0x55dc96a132c0
LPAREN	(	31	7
RPAREN	)	31	8
LBRACE	{	31	9
ID	n	32	0	0x55dc96a131a8
ASSIGN	=	32	1
DECIMAL	10	32	2	10
SEMICOLON	;	32	4
INT	int	33	0
ID	a	33	3	0x55dc96a132e8
LBRACKET	[	33	4
DECIMAL	10	33	5	10
RBRACKET	]	33	7
SEMICOLON	;	33	8
ID	a	34	0	0x55dc96a132e8
LBRACKET	[	34	1
DECIMAL	0	34	2	0
RBRACKET	]	34	3
ASSIGN	=	34	4
DECIMAL	4	34	5	4
SEMICOLON	;	34	6
ID	a	34	7	0x55dc96a132e8
LBRACKET	[	34	8
DECIMAL	1	34	9	1
RBRACKET	]	34	10
ASSIGN	=	34	11
DECIMAL	3	34	12	3
SEMICOLON	;	34	13
ID	a	34	14	0x55dc96a132e8
LBRACKET	[	34	15
DECIMAL	2	34	16	2
RBRACKET	]	34	17
ASSIGN	=	34	18
DECIMAL	9	34	19	9
SEMICOLON	;	34	20
ID	a	34	21	0x55dc96a132e8
LBRACKET	[	34	22
DECIMAL	3	34	23	3
RBRACKET	]	34	24
ASSIGN	=	34	25
DECIMAL	2	34	26	2
SEMICOLON	;	34	27
ID	a	34	28	0x55dc96a132e8
LBRACKET	[	34	29
DECIMAL	4	34	30	4
RBRACKET	]	34	31
ASSIGN	=	34	32
DECIMAL	0	34	33	0
SEMICOLON	;	34	34
ID	a	35	0	0x55dc96a132e8
LBRACKET	[	35	1
DECIMAL	5	35	2	5
RBRACKET	]	35	3
ASSIGN	=	35	4
DECIMAL	1	35	5	1
SEMICOLON	;	35	6
ID	a	35	7	0x55dc96a132e8
LBRACKET	[	35	8
DECIMAL	6	35	9	6
RBRACKET	]	35	10
ASSIGN	=	35	11
DECIMAL	6	35	12	6
SEMICOLON	;	35	13
ID	a	35	14	0x55dc96a132e8
LBRACKET	[	35	15
DECIMAL	7	35	16	7
RBRACKET	]	35	17
ASSIGN	=	35	18
DECIMAL	5	35	19	5
SEMICOLON	;	35	20
ID	a	35	21	0x55dc96a132e8
LBRACKET	[	35	22
DECIMAL	8	35	23	8
RBRACKET	]	35	24
ASSIGN	=	35	25
DECIMAL	7	35	26	7
SEMICOLON	;	35	27
ID	a	35	28	0x55dc96a132e8
LBRACKET	[	35	29
DECIMAL	9	35	30	9
RBRACKET	]	35	31
ASSIGN	=	35	32
DECIMAL	8	35	33	8
SEMICOLON	;	35	34
INT	int	36	0
ID	i	36	3	0x55dc96a13220
SEMICOLON	;	36	4
ID	i	37	0	0x55dc96a13220
ASSIGN	=	37	1
DECIMAL	0	37	2	0
SEMICOLON	;	37	3
ID	i	38	0	0x55dc96a13220
ASSIGN	=	38	1
ID	select_sort	38	2	0x55dc96a131d0
LPAREN	(	38	13
ID	a	38	14	0x55dc96a132e8
COMMA	,	38	15
ID	n	38	16	0x55dc96a131a8
RPAREN	)	38	17
SEMICOLON	;	38	18
WHILE	while	39	0
LPAREN	(	39	5
ID	i	39	6	0x55dc96a13220
LESS	<	39	7
ID	n	39	8	0x55dc96a131a8
RPAREN	)	39	9
LBRACE	{	39	10
INT	int	40	0
ID	tmp	40	3	0x55dc96a13298
SEMICOLON	;	40	6
ID	tmp	41	0	0x55dc96a13298
ASSIGN	=	41	3
ID	a	41	4	0x55dc96a132e8
LBRACKET	[	41	5
ID	i	41	6	0x55dc96a13220
RBRACKET	]	41	7
SEMICOLON	;	41	8
ID	putint	42	0	0x55dc96a13310
LPAREN	(	42	6
ID	tmp	42	7	0x55dc96a13298
RPAREN	)	42	10
SEMICOLON	;	42	11
ID	tmp	43	0	0x55dc96a13298
ASSIGN	=	43	3
DECIMAL	10	43	4	10
SEMICOLON	;	43	6
ID	putch	44	0	0x55dc96a13338
LPAREN	(	44	5
ID	tmp	44	6	0x55dc96a13298
RPAREN	)	44	9
SEMICOLON	;	44	10
ID	i	45	0	0x55dc96a13220
ASSIGN	=	45	1
ID	i	45	2	0x55dc96a13220
ADD	+	45	3
DECIMAL	1	45	4	1
SEMICOLON	;	45	5
RBRACE	}	46	0
RETURN	return	47	0
DECIMAL	0	47	6	0
SEMICOLON	;	47	7
RBRACE	}	48	0
