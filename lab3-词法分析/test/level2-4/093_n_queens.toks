INT	int	0	0
ID	ans	0	3	0x560fbf7d41a8
LBRACKET	[	0	6
DECIMAL	50	0	7	50
RBRACKET	]	0	9
COMMA	,	0	10
ID	sum	0	11	0x560fbf7d41d0
ASSIGN	=	0	14
DECIMAL	0	0	15	0
COMMA	,	0	16
ID	n	0	17	0x560fbf7d41f8
SEMICOLON	;	0	18
INT	int	2	0
ID	row	2	3	0x560fbf7d4220
LBRACKET	[	2	6
DECIMAL	50	2	7	50
RBRACKET	]	2	9
COMMA	,	2	10
ID	line1	2	11	0x560fbf7d4248
LBRACKET	[	2	16
DECIMAL	50	2	17	50
RBRACKET	]	2	19
COMMA	,	2	20
ID	line2	2	21	0x560fbf7d4270
LBRACKET	[	2	26
DECIMAL	100	2	27	100
RBRACKET	]	2	30
SEMICOLON	;	2	31
VOID	void	4	0
ID	printans	4	4	0x560fbf7d4298
LPAREN	(	4	12
RPAREN	)	4	13
LBRACE	{	5	0
ID	sum	6	0	0x560fbf7d41d0
ASSIGN	=	6	3
ID	sum	6	4	0x560fbf7d41d0
ADD	+	6	7
DECIMAL	1	6	8	1
SEMICOLON	;	6	9
INT	int	7	0
ID	i	7	3	0x560fbf7d42c0
ASSIGN	=	7	4
DECIMAL	1	7	5	1
SEMICOLON	;	7	6
WHILE	while	8	0
LPAREN	(	8	5
ID	i	8	6	0x560fbf7d42c0
LEQUAL	<=	8	7
ID	n	8	9	0x560fbf7d41f8
RPAREN	)	8	10
LBRACE	{	8	11
ID	putint	9	0	0x560fbf7d42e8
LPAREN	(	9	6
ID	ans	9	7	0x560fbf7d41a8
LBRACKET	[	9	10
ID	i	9	11	0x560fbf7d42c0
RBRACKET	]	9	12
RPAREN	)	9	13
SEMICOLON	;	9	14
IF	if	10	0
LPAREN	(	10	2
ID	i	10	3	0x560fbf7d42c0
EQUAL	==	10	4
ID	n	10	6	0x560fbf7d41f8
RPAREN	)	10	7
LBRACE	{	10	8
ID	putch	11	0	0x560fbf7d4310
LPAREN	(	11	5
DECIMAL	10	11	6	10
RPAREN	)	11	8
SEMICOLON	;	11	9
RETURN	return	12	0
SEMICOLON	;	12	6
RBRACE	}	13	0
ELSE	else	13	1
ID	putch	14	0	0x560fbf7d4310
LPAREN	(	14	5
DECIMAL	32	14	6	32
RPAREN	)	14	8
SEMICOLON	;	14	9
ID	i	15	0	0x560fbf7d42c0
ASSIGN	=	15	1
ID	i	15	2	0x560fbf7d42c0
ADD	+	15	3
DECIMAL	1	15	4	1
SEMICOLON	;	15	5
RBRACE	}	16	0
RBRACE	}	17	0
VOID	void	19	0
ID	f	19	4	0x560fbf7d4338
LPAREN	(	19	5
INT	int	19	6
ID	step	19	9	0x560fbf7d4360
RPAREN	)	19	13
LBRACE	{	20	0
INT	int	21	0
ID	i	21	3	0x560fbf7d42c0
ASSIGN	=	21	4
DECIMAL	1	21	5	1
SEMICOLON	;	21	6
WHILE	while	22	0
LPAREN	(	22	5
ID	i	22	6	0x560fbf7d42c0
LEQUAL	<=	22	7
ID	n	22	9	0x560fbf7d41f8
RPAREN	)	22	10
LBRACE	{	22	11
IF	if	23	0
LPAREN	(	23	2
ID	row	23	3	0x560fbf7d4220
LBRACKET	[	23	6
ID	i	23	7	0x560fbf7d42c0
RBRACKET	]	23	8
NEQUAL	!=	23	9
DECIMAL	1	23	11	1
AND	&&	23	12
ID	line1	23	14	0x560fbf7d4248
LBRACKET	[	23	19
ID	step	23	20	0x560fbf7d4360
ADD	+	23	24
ID	i	23	25	0x560fbf7d42c0
RBRACKET	]	23	26
EQUAL	==	23	27
DECIMAL	0	23	29	0
AND	&&	23	30
NOT	!	23	32
ID	line2	23	33	0x560fbf7d4270
LBRACKET	[	23	38
ID	n	23	39	0x560fbf7d41f8
ADD	+	23	40
ID	step	23	41	0x560fbf7d4360
SUB	-	23	45
ID	i	23	46	0x560fbf7d42c0
RBRACKET	]	23	47
RPAREN	)	23	48
LBRACE	{	23	49
ID	ans	24	0	0x560fbf7d41a8
LBRACKET	[	24	3
ID	step	24	4	0x560fbf7d4360
RBRACKET	]	24	8
ASSIGN	=	24	9
ID	i	24	10	0x560fbf7d42c0
SEMICOLON	;	24	11
IF	if	25	0
LPAREN	(	25	2
ID	step	25	3	0x560fbf7d4360
EQUAL	==	25	7
ID	n	25	9	0x560fbf7d41f8
RPAREN	)	25	10
ID	printans	26	0	0x560fbf7d4298
LPAREN	(	26	8
RPAREN	)	26	9
SEMICOLON	;	26	10
ID	row	27	0	0x560fbf7d4220
LBRACKET	[	27	3
ID	i	27	4	0x560fbf7d42c0
RBRACKET	]	27	5
ASSIGN	=	27	6
DECIMAL	1	27	7	1
SEMICOLON	;	27	8
ID	line1	28	0	0x560fbf7d4248
LBRACKET	[	28	5
ID	step	28	6	0x560fbf7d4360
ADD	+	28	10
ID	i	28	11	0x560fbf7d42c0
RBRACKET	]	28	12
ASSIGN	=	28	13
DECIMAL	1	28	14	1
SEMICOLON	;	28	15
ID	line2	29	0	0x560fbf7d4270
LBRACKET	[	29	5
ID	n	29	6	0x560fbf7d41f8
ADD	+	29	7
ID	step	29	8	0x560fbf7d4360
SUB	-	29	12
ID	i	29	13	0x560fbf7d42c0
RBRACKET	]	29	14
ASSIGN	=	29	15
DECIMAL	1	29	16	1
SEMICOLON	;	29	17
ID	f	30	0	0x560fbf7d4338
LPAREN	(	30	1
ID	step	30	2	0x560fbf7d4360
ADD	+	30	6
DECIMAL	1	30	7	1
RPAREN	)	30	8
SEMICOLON	;	30	9
ID	row	31	0	0x560fbf7d4220
LBRACKET	[	31	3
ID	i	31	4	0x560fbf7d42c0
RBRACKET	]	31	5
ASSIGN	=	31	6
DECIMAL	0	31	7	0
SEMICOLON	;	31	8
ID	line1	32	0	0x560fbf7d4248
LBRACKET	[	32	5
ID	step	32	6	0x560fbf7d4360
ADD	+	32	10
ID	i	32	11	0x560fbf7d42c0
RBRACKET	]	32	12
ASSIGN	=	32	13
DECIMAL	0	32	14	0
SEMICOLON	;	32	15
ID	line2	33	0	0x560fbf7d4270
LBRACKET	[	33	5
ID	n	33	6	0x560fbf7d41f8
ADD	+	33	7
ID	step	33	8	0x560fbf7d4360
SUB	-	33	12
ID	i	33	13	0x560fbf7d42c0
RBRACKET	]	33	14
ASSIGN	=	33	15
DECIMAL	0	33	16	0
SEMICOLON	;	33	17
RBRACE	}	34	0
ID	i	35	0	0x560fbf7d42c0
ASSIGN	=	35	1
ID	i	35	2	0x560fbf7d42c0
ADD	+	35	3
DECIMAL	1	35	4	1
SEMICOLON	;	35	5
RBRACE	}	36	0
RBRACE	}	37	0
INT	int	39	0
ID	main	39	3	0x560fbf7d4388
LPAREN	(	39	7
RPAREN	)	39	8
LBRACE	{	40	0
INT	int	41	0
ID	N	41	3	0x560fbf7d43b0
ASSIGN	=	41	4
ID	getint	41	5	0x560fbf7d43d8
LPAREN	(	41	11
RPAREN	)	41	12
SEMICOLON	;	41	13
WHILE	while	42	0
LPAREN	(	42	5
ID	N	42	6	0x560fbf7d43b0
GREATER	>	42	7
DECIMAL	0	42	8	0
RPAREN	)	42	9
LBRACE	{	42	10
ID	n	43	0	0x560fbf7d41f8
ASSIGN	=	43	1
ID	getint	43	2	0x560fbf7d43d8
LPAREN	(	43	8
RPAREN	)	43	9
SEMICOLON	;	43	10
ID	f	44	0	0x560fbf7d4338
LPAREN	(	44	1
DECIMAL	1	44	2	1
RPAREN	)	44	3
SEMICOLON	;	44	4
ID	N	45	0	0x560fbf7d43b0
ASSIGN	=	45	1
ID	N	45	2	0x560fbf7d43b0
SUB	-	45	3
DECIMAL	1	45	4	1
SEMICOLON	;	45	5
RBRACE	}	46	0
RETURN	return	47	0
ID	sum	47	6	0x560fbf7d41d0
SEMICOLON	;	47	9
RBRACE	}	48	0
