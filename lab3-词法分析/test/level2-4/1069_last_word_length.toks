INT	int	0	0
ID	lengthOfLastWord	0	3	0x56377a0141a8
LPAREN	(	0	19
INT	int	0	20
ID	s	0	23	0x56377a0141d0
LBRACKET	[	0	24
RBRACKET	]	0	25
COMMA	,	0	26
INT	int	0	27
ID	n	0	30	0x56377a0141f8
RPAREN	)	0	31
LBRACE	{	0	32
IF	if	1	0
LPAREN	(	1	2
ID	n	1	3	0x56377a0141f8
EQUAL	==	1	4
DECIMAL	0	1	6	0
RPAREN	)	1	7
RETURN	return	2	0
DECIMAL	0	2	6	0
SEMICOLON	;	2	7
INT	int	3	0
ID	c	3	3	0x56377a014220
SEMICOLON	;	3	4
ID	c	4	0	0x56377a014220
ASSIGN	=	4	1
ID	n	4	2	0x56377a0141f8
SUB	-	4	3
DECIMAL	1	4	4	1
SEMICOLON	;	4	5
WHILE	while	5	0
LPAREN	(	5	5
ID	c	5	6	0x56377a014220
GREATER	>	5	7
SUB	-	5	8
DECIMAL	1	5	9	1
AND	&&	5	10
ID	s	5	12	0x56377a0141d0
LBRACKET	[	5	13
ID	c	5	14	0x56377a014220
RBRACKET	]	5	15
EQUAL	==	5	16
DECIMAL	0	5	18	0
RPAREN	)	5	19
LBRACE	{	5	20
ID	c	6	0	0x56377a014220
ASSIGN	=	6	1
ID	c	6	2	0x56377a014220
SUB	-	6	3
DECIMAL	1	6	4	1
SEMICOLON	;	6	5
RBRACE	}	7	0
IF	if	8	0
LPAREN	(	8	2
ID	c	8	3	0x56377a014220
EQUAL	==	8	4
SUB	-	8	6
DECIMAL	1	8	7	1
RPAREN	)	8	8
RETURN	return	9	0
DECIMAL	0	9	6	0
SEMICOLON	;	9	7
INT	int	10	0
ID	i	10	3	0x56377a014248
SEMICOLON	;	10	4
ID	i	11	0	0x56377a014248
ASSIGN	=	11	1
ID	c	11	2	0x56377a014220
SEMICOLON	;	11	3
WHILE	while	12	0
LPAREN	(	12	5
ID	i	12	6	0x56377a014248
GREATER	>	12	7
SUB	-	12	8
DECIMAL	1	12	9	1
RPAREN	)	12	10
LBRACE	{	12	11
IF	if	13	0
LPAREN	(	13	2
ID	s	13	3	0x56377a0141d0
LBRACKET	[	13	4
ID	i	13	5	0x56377a014248
RBRACKET	]	13	6
EQUAL	==	13	7
DECIMAL	0	13	9	0
RPAREN	)	13	10
RETURN	return	14	0
ID	n	14	6	0x56377a0141f8
SUB	-	14	7
ID	i	14	8	0x56377a014248
SUB	-	14	9
DECIMAL	1	14	10	1
SUB	-	14	11
LPAREN	(	14	12
ID	n	14	13	0x56377a0141f8
SUB	-	14	14
DECIMAL	1	14	15	1
SUB	-	14	16
ID	c	14	17	0x56377a014220
RPAREN	)	14	18
SEMICOLON	;	14	19
ID	i	15	0	0x56377a014248
ASSIGN	=	15	1
ID	i	15	2	0x56377a014248
SUB	-	15	3
DECIMAL	1	15	4	1
SEMICOLON	;	15	5
RBRACE	}	16	0
RETURN	return	17	0
ID	c	17	6	0x56377a014220
SUB	-	17	7
ID	i	17	8	0x56377a014248
SEMICOLON	;	17	9
RBRACE	}	18	0
INT	int	19	0
ID	main	19	3	0x56377a014270
LPAREN	(	19	7
RPAREN	)	19	8
LBRACE	{	19	9
INT	int	20	0
ID	res	20	3	0x56377a014298
SEMICOLON	;	20	6
INT	int	21	0
ID	a	21	3	0x56377a0142c0
LBRACKET	[	21	4
DECIMAL	10	21	5	10
RBRACKET	]	21	7
SEMICOLON	;	21	8
ID	a	22	0	0x56377a0142c0
LBRACKET	[	22	1
DECIMAL	0	22	2	0
RBRACKET	]	22	3
ASSIGN	=	22	4
SUB	-	22	5
DECIMAL	4	22	6	4
SEMICOLON	;	22	7
ID	a	22	8	0x56377a0142c0
LBRACKET	[	22	9
DECIMAL	1	22	10	1
RBRACKET	]	22	11
ASSIGN	=	22	12
DECIMAL	3	22	13	3
SEMICOLON	;	22	14
ID	a	22	15	0x56377a0142c0
LBRACKET	[	22	16
DECIMAL	2	22	17	2
RBRACKET	]	22	18
ASSIGN	=	22	19
DECIMAL	9	22	20	9
SEMICOLON	;	22	21
ID	a	22	22	0x56377a0142c0
LBRACKET	[	22	23
DECIMAL	3	22	24	3
RBRACKET	]	22	25
ASSIGN	=	22	26
SUB	-	22	27
DECIMAL	2	22	28	2
SEMICOLON	;	22	29
ID	a	22	30	0x56377a0142c0
LBRACKET	[	22	31
DECIMAL	4	22	32	4
RBRACKET	]	22	33
ASSIGN	=	22	34
DECIMAL	0	22	35	0
SEMICOLON	;	22	36
ID	a	23	0	0x56377a0142c0
LBRACKET	[	23	1
DECIMAL	5	23	2	5
RBRACKET	]	23	3
ASSIGN	=	23	4
DECIMAL	1	23	5	1
SEMICOLON	;	23	6
ID	a	23	7	0x56377a0142c0
LBRACKET	[	23	8
DECIMAL	6	23	9	6
RBRACKET	]	23	10
ASSIGN	=	23	11
SUB	-	23	12
DECIMAL	6	23	13	6
SEMICOLON	;	23	14
ID	a	23	15	0x56377a0142c0
LBRACKET	[	23	16
DECIMAL	7	23	17	7
RBRACKET	]	23	18
ASSIGN	=	23	19
DECIMAL	5	23	20	5
SEMICOLON	;	23	21
ID	a	23	22	0x56377a0142c0
LBRACKET	[	23	23
DECIMAL	8	23	24	8
RBRACKET	]	23	25
ASSIGN	=	23	26
DECIMAL	7	23	27	7
SEMICOLON	;	23	28
ID	a	23	29	0x56377a0142c0
LBRACKET	[	23	30
DECIMAL	9	23	31	9
RBRACKET	]	23	32
ASSIGN	=	23	33
DECIMAL	8	23	34	8
SEMICOLON	;	23	35
ID	res	24	0	0x56377a014298
ASSIGN	=	24	3
DECIMAL	10	24	4	10
SEMICOLON	;	24	6
ID	res	25	0	0x56377a014298
ASSIGN	=	25	3
ID	lengthOfLastWord	25	4	0x56377a0141a8
LPAREN	(	25	20
ID	a	25	21	0x56377a0142c0
COMMA	,	25	22
ID	res	25	23	0x56377a014298
RPAREN	)	25	26
SEMICOLON	;	25	27
RETURN	return	26	0
ID	res	26	6	0x56377a014298
SEMICOLON	;	26	9
RBRACE	}	27	0
