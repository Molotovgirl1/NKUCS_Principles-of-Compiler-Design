INT	int	0	0
ID	M	0	3	0x55848ede41a8
SEMICOLON	;	0	4
INT	int	1	0
ID	L	1	3	0x55848ede41d0
SEMICOLON	;	1	4
INT	int	2	0
ID	N	2	3	0x55848ede41f8
SEMICOLON	;	2	4
INT	int	5	0
ID	add	5	3	0x55848ede4220
LPAREN	(	5	6
INT	int	5	7
ID	a0	5	10	0x55848ede4248
LBRACKET	[	5	12
RBRACKET	]	5	13
COMMA	,	5	14
INT	int	5	15
ID	a1	5	18	0x55848ede4270
LBRACKET	[	5	20
RBRACKET	]	5	21
COMMA	,	5	22
INT	int	5	23
ID	a2	5	26	0x55848ede4298
LBRACKET	[	5	28
RBRACKET	]	5	29
COMMA	,	5	30
INT	int	5	31
ID	b0	5	34	0x55848ede42c0
LBRACKET	[	5	36
RBRACKET	]	5	37
COMMA	,	5	38
INT	int	5	39
ID	b1	5	42	0x55848ede42e8
LBRACKET	[	5	44
RBRACKET	]	5	45
COMMA	,	5	46
INT	int	5	47
ID	b2	5	50	0x55848ede4310
LBRACKET	[	5	52
RBRACKET	]	5	53
COMMA	,	5	54
INT	int	5	55
ID	c0	5	58	0x55848ede4338
LBRACKET	[	5	60
RBRACKET	]	5	61
COMMA	,	5	62
INT	int	5	63
ID	c1	5	66	0x55848ede4360
LBRACKET	[	5	68
RBRACKET	]	5	69
COMMA	,	5	70
INT	int	5	71
ID	c2	5	74	0x55848ede4388
LBRACKET	[	5	76
RBRACKET	]	5	77
RPAREN	)	5	78
LBRACE	{	6	0
INT	int	7	0
ID	i	7	3	0x55848ede43b0
SEMICOLON	;	7	4
ID	i	8	0	0x55848ede43b0
ASSIGN	=	8	1
DECIMAL	0	8	2	0
SEMICOLON	;	8	3
WHILE	while	9	0
LPAREN	(	9	5
ID	i	9	6	0x55848ede43b0
LESS	<	9	7
ID	M	9	8	0x55848ede41a8
RPAREN	)	9	9
LBRACE	{	10	0
ID	c0	11	0	0x55848ede4338
LBRACKET	[	11	2
ID	i	11	3	0x55848ede43b0
RBRACKET	]	11	4
ASSIGN	=	11	5
ID	a0	11	6	0x55848ede4248
LBRACKET	[	11	8
ID	i	11	9	0x55848ede43b0
RBRACKET	]	11	10
ADD	+	11	11
ID	b0	11	12	0x55848ede42c0
LBRACKET	[	11	14
ID	i	11	15	0x55848ede43b0
RBRACKET	]	11	16
SEMICOLON	;	11	17
ID	c1	12	0	0x55848ede4360
LBRACKET	[	12	2
ID	i	12	3	0x55848ede43b0
RBRACKET	]	12	4
ASSIGN	=	12	5
ID	a1	12	6	0x55848ede4270
LBRACKET	[	12	8
ID	i	12	9	0x55848ede43b0
RBRACKET	]	12	10
ADD	+	12	11
ID	b1	12	12	0x55848ede42e8
LBRACKET	[	12	14
ID	i	12	15	0x55848ede43b0
RBRACKET	]	12	16
SEMICOLON	;	12	17
ID	c2	13	0	0x55848ede4388
LBRACKET	[	13	2
ID	i	13	3	0x55848ede43b0
RBRACKET	]	13	4
ASSIGN	=	13	5
ID	a2	13	6	0x55848ede4298
LBRACKET	[	13	8
ID	i	13	9	0x55848ede43b0
RBRACKET	]	13	10
ADD	+	13	11
ID	b2	13	12	0x55848ede4310
LBRACKET	[	13	14
ID	i	13	15	0x55848ede43b0
RBRACKET	]	13	16
SEMICOLON	;	13	17
ID	i	14	0	0x55848ede43b0
ASSIGN	=	14	1
ID	i	14	2	0x55848ede43b0
ADD	+	14	3
DECIMAL	1	14	4	1
SEMICOLON	;	14	5
RBRACE	}	15	0
RETURN	return	17	0
DECIMAL	0	17	6	0
SEMICOLON	;	17	7
RBRACE	}	19	0
INT	int	21	0
ID	main	21	3	0x55848ede43d8
LPAREN	(	21	7
RPAREN	)	21	8
LBRACE	{	22	0
ID	N	23	0	0x55848ede41f8
ASSIGN	=	23	1
DECIMAL	3	23	2	3
SEMICOLON	;	23	3
ID	M	24	0	0x55848ede41a8
ASSIGN	=	24	1
DECIMAL	3	24	2	3
SEMICOLON	;	24	3
ID	L	25	0	0x55848ede41d0
ASSIGN	=	25	1
DECIMAL	3	25	2	3
SEMICOLON	;	25	3
INT	int	26	0
ID	a0	26	3	0x55848ede4248
LBRACKET	[	26	5
DECIMAL	3	26	6	3
RBRACKET	]	26	7
SEMICOLON	;	26	8
INT	int	26	9
ID	a1	26	12	0x55848ede4270
LBRACKET	[	26	14
DECIMAL	3	26	15	3
RBRACKET	]	26	16
SEMICOLON	;	26	17
INT	int	26	18
ID	a2	26	21	0x55848ede4298
LBRACKET	[	26	23
DECIMAL	3	26	24	3
RBRACKET	]	26	25
SEMICOLON	;	26	26
INT	int	26	27
ID	b0	26	30	0x55848ede42c0
LBRACKET	[	26	32
DECIMAL	3	26	33	3
RBRACKET	]	26	34
SEMICOLON	;	26	35
INT	int	26	36
ID	b1	26	39	0x55848ede42e8
LBRACKET	[	26	41
DECIMAL	3	26	42	3
RBRACKET	]	26	43
SEMICOLON	;	26	44
INT	int	26	45
ID	b2	26	48	0x55848ede4310
LBRACKET	[	26	50
DECIMAL	3	26	51	3
RBRACKET	]	26	52
SEMICOLON	;	26	53
INT	int	26	54
ID	c0	26	57	0x55848ede4338
LBRACKET	[	26	59
DECIMAL	6	26	60	6
RBRACKET	]	26	61
SEMICOLON	;	26	62
INT	int	26	63
ID	c1	26	66	0x55848ede4360
LBRACKET	[	26	68
DECIMAL	3	26	69	3
RBRACKET	]	26	70
SEMICOLON	;	26	71
INT	int	26	72
ID	c2	26	75	0x55848ede4388
LBRACKET	[	26	77
DECIMAL	3	26	78	3
RBRACKET	]	26	79
SEMICOLON	;	26	80
INT	int	27	0
ID	i	27	3	0x55848ede43b0
SEMICOLON	;	27	4
ID	i	28	0	0x55848ede43b0
ASSIGN	=	28	1
DECIMAL	0	28	2	0
SEMICOLON	;	28	3
WHILE	while	29	0
LPAREN	(	29	5
ID	i	29	6	0x55848ede43b0
LESS	<	29	7
ID	M	29	8	0x55848ede41a8
RPAREN	)	29	9
LBRACE	{	30	0
ID	a0	31	0	0x55848ede4248
LBRACKET	[	31	2
ID	i	31	3	0x55848ede43b0
RBRACKET	]	31	4
ASSIGN	=	31	5
ID	i	31	6	0x55848ede43b0
SEMICOLON	;	31	7
ID	a1	32	0	0x55848ede4270
LBRACKET	[	32	2
ID	i	32	3	0x55848ede43b0
RBRACKET	]	32	4
ASSIGN	=	32	5
ID	i	32	6	0x55848ede43b0
SEMICOLON	;	32	7
ID	a2	33	0	0x55848ede4298
LBRACKET	[	33	2
ID	i	33	3	0x55848ede43b0
RBRACKET	]	33	4
ASSIGN	=	33	5
ID	i	33	6	0x55848ede43b0
SEMICOLON	;	33	7
ID	b0	34	0	0x55848ede42c0
LBRACKET	[	34	2
ID	i	34	3	0x55848ede43b0
RBRACKET	]	34	4
ASSIGN	=	34	5
ID	i	34	6	0x55848ede43b0
SEMICOLON	;	34	7
ID	b1	35	0	0x55848ede42e8
LBRACKET	[	35	2
ID	i	35	3	0x55848ede43b0
RBRACKET	]	35	4
ASSIGN	=	35	5
ID	i	35	6	0x55848ede43b0
SEMICOLON	;	35	7
ID	b2	36	0	0x55848ede4310
LBRACKET	[	36	2
ID	i	36	3	0x55848ede43b0
RBRACKET	]	36	4
ASSIGN	=	36	5
ID	i	36	6	0x55848ede43b0
SEMICOLON	;	36	7
ID	i	37	0	0x55848ede43b0
ASSIGN	=	37	1
ID	i	37	2	0x55848ede43b0
ADD	+	37	3
DECIMAL	1	37	4	1
SEMICOLON	;	37	5
RBRACE	}	38	0
ID	i	39	0	0x55848ede43b0
ASSIGN	=	39	1
ID	add	39	2	0x55848ede4220
LPAREN	(	39	5
ID	a0	39	6	0x55848ede4248
COMMA	,	39	8
ID	a1	39	9	0x55848ede4270
COMMA	,	39	11
ID	a2	39	12	0x55848ede4298
COMMA	,	39	14
ID	b0	39	15	0x55848ede42c0
COMMA	,	39	17
ID	b1	39	18	0x55848ede42e8
COMMA	,	39	20
ID	b2	39	21	0x55848ede4310
COMMA	,	39	23
ID	c0	39	24	0x55848ede4338
COMMA	,	39	26
ID	c1	39	27	0x55848ede4360
COMMA	,	39	29
ID	c2	39	30	0x55848ede4388
RPAREN	)	39	32
SEMICOLON	;	39	33
INT	int	40	0
ID	x	40	3	0x55848ede4400
SEMICOLON	;	40	4
WHILE	while	41	0
LPAREN	(	41	5
ID	i	41	6	0x55848ede43b0
LESS	<	41	7
ID	N	41	8	0x55848ede41f8
RPAREN	)	41	9
LBRACE	{	42	0
ID	x	43	0	0x55848ede4400
ASSIGN	=	43	1
ID	c0	43	2	0x55848ede4338
LBRACKET	[	43	4
ID	i	43	5	0x55848ede43b0
RBRACKET	]	43	6
SEMICOLON	;	43	7
ID	putint	44	0	0x55848ede4428
LPAREN	(	44	6
ID	x	44	7	0x55848ede4400
RPAREN	)	44	8
SEMICOLON	;	44	9
ID	i	45	0	0x55848ede43b0
ASSIGN	=	45	1
ID	i	45	2	0x55848ede43b0
ADD	+	45	3
DECIMAL	1	45	4	1
SEMICOLON	;	45	5
RBRACE	}	46	0
ID	x	47	0	0x55848ede4400
ASSIGN	=	47	1
DECIMAL	10	47	2	10
SEMICOLON	;	47	4
ID	putch	48	0	0x55848ede4450
LPAREN	(	48	5
ID	x	48	6	0x55848ede4400
RPAREN	)	48	7
SEMICOLON	;	48	8
ID	i	49	0	0x55848ede43b0
ASSIGN	=	49	1
DECIMAL	0	49	2	0
SEMICOLON	;	49	3
WHILE	while	50	0
LPAREN	(	50	5
ID	i	50	6	0x55848ede43b0
LESS	<	50	7
ID	N	50	8	0x55848ede41f8
RPAREN	)	50	9
LBRACE	{	51	0
ID	x	52	0	0x55848ede4400
ASSIGN	=	52	1
ID	c1	52	2	0x55848ede4360
LBRACKET	[	52	4
ID	i	52	5	0x55848ede43b0
RBRACKET	]	52	6
SEMICOLON	;	52	7
ID	putint	53	0	0x55848ede4428
LPAREN	(	53	6
ID	x	53	7	0x55848ede4400
RPAREN	)	53	8
SEMICOLON	;	53	9
ID	i	54	0	0x55848ede43b0
ASSIGN	=	54	1
ID	i	54	2	0x55848ede43b0
ADD	+	54	3
DECIMAL	1	54	4	1
SEMICOLON	;	54	5
RBRACE	}	55	0
ID	x	56	0	0x55848ede4400
ASSIGN	=	56	1
DECIMAL	10	56	2	10
SEMICOLON	;	56	4
ID	putch	57	0	0x55848ede4450
LPAREN	(	57	5
ID	x	57	6	0x55848ede4400
RPAREN	)	57	7
SEMICOLON	;	57	8
ID	i	58	0	0x55848ede43b0
ASSIGN	=	58	1
DECIMAL	0	58	2	0
SEMICOLON	;	58	3
WHILE	while	59	0
LPAREN	(	59	5
ID	i	59	6	0x55848ede43b0
LESS	<	59	7
ID	N	59	8	0x55848ede41f8
RPAREN	)	59	9
LBRACE	{	60	0
ID	x	61	0	0x55848ede4400
ASSIGN	=	61	1
ID	c2	61	2	0x55848ede4388
LBRACKET	[	61	4
ID	i	61	5	0x55848ede43b0
RBRACKET	]	61	6
SEMICOLON	;	61	7
ID	putint	62	0	0x55848ede4428
LPAREN	(	62	6
ID	x	62	7	0x55848ede4400
RPAREN	)	62	8
SEMICOLON	;	62	9
ID	i	63	0	0x55848ede43b0
ASSIGN	=	63	1
ID	i	63	2	0x55848ede43b0
ADD	+	63	3
DECIMAL	1	63	4	1
SEMICOLON	;	63	5
RBRACE	}	64	0
ID	x	65	0	0x55848ede4400
ASSIGN	=	65	1
DECIMAL	10	65	2	10
SEMICOLON	;	65	4
ID	putch	66	0	0x55848ede4450
LPAREN	(	66	5
ID	x	66	6	0x55848ede4400
RPAREN	)	66	7
SEMICOLON	;	66	8
RETURN	return	68	0
DECIMAL	0	68	6	0
SEMICOLON	;	68	7
RBRACE	}	69	0
