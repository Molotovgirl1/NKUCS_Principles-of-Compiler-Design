INT	int	1	0
ID	concat	1	3	0x55bb235f71a8
LPAREN	(	1	9
INT	int	1	10
ID	a0	1	13	0x55bb235f71d0
LBRACKET	[	1	15
RBRACKET	]	1	16
COMMA	,	1	17
INT	int	1	18
ID	b0	1	21	0x55bb235f71f8
LBRACKET	[	1	23
RBRACKET	]	1	24
COMMA	,	1	25
INT	int	1	26
ID	c0	1	29	0x55bb235f7220
LBRACKET	[	1	31
RBRACKET	]	1	32
RPAREN	)	1	33
LBRACE	{	2	0
INT	int	3	0
ID	i	3	3	0x55bb235f7248
SEMICOLON	;	3	4
ID	i	4	0	0x55bb235f7248
ASSIGN	=	4	1
DECIMAL	0	4	2	0
SEMICOLON	;	4	3
WHILE	while	5	0
LPAREN	(	5	5
ID	i	5	6	0x55bb235f7248
LESS	<	5	7
DECIMAL	3	5	8	3
RPAREN	)	5	9
LBRACE	{	6	0
ID	c0	7	0	0x55bb235f7220
LBRACKET	[	7	2
ID	i	7	3	0x55bb235f7248
RBRACKET	]	7	4
ASSIGN	=	7	5
ID	a0	7	6	0x55bb235f71d0
LBRACKET	[	7	8
ID	i	7	9	0x55bb235f7248
RBRACKET	]	7	10
SEMICOLON	;	7	11
ID	i	9	0	0x55bb235f7248
ASSIGN	=	9	1
ID	i	9	2	0x55bb235f7248
ADD	+	9	3
DECIMAL	1	9	4	1
SEMICOLON	;	9	5
RBRACE	}	10	0
INT	int	11	0
ID	j	11	3	0x55bb235f7270
SEMICOLON	;	11	4
ID	j	12	0	0x55bb235f7270
ASSIGN	=	12	1
DECIMAL	0	12	2	0
SEMICOLON	;	12	3
WHILE	while	13	0
LPAREN	(	13	5
ID	j	13	6	0x55bb235f7270
LESS	<	13	7
DECIMAL	3	13	8	3
RPAREN	)	13	9
LBRACE	{	14	0
ID	c0	15	0	0x55bb235f7220
LBRACKET	[	15	2
ID	i	15	3	0x55bb235f7248
RBRACKET	]	15	4
ASSIGN	=	15	5
ID	b0	15	6	0x55bb235f71f8
LBRACKET	[	15	8
ID	j	15	9	0x55bb235f7270
RBRACKET	]	15	10
SEMICOLON	;	15	11
ID	i	16	0	0x55bb235f7248
ASSIGN	=	16	1
ID	i	16	2	0x55bb235f7248
ADD	+	16	3
DECIMAL	1	16	4	1
SEMICOLON	;	16	5
ID	j	17	0	0x55bb235f7270
ASSIGN	=	17	1
ID	j	17	2	0x55bb235f7270
ADD	+	17	3
DECIMAL	1	17	4	1
SEMICOLON	;	17	5
RBRACE	}	18	0
RETURN	return	20	0
DECIMAL	0	20	6	0
SEMICOLON	;	20	7
RBRACE	}	22	0
INT	int	24	0
ID	main	24	3	0x55bb235f7298
LPAREN	(	24	7
RPAREN	)	24	8
LBRACE	{	25	0
INT	int	26	0
ID	a0	26	3	0x55bb235f71d0
LBRACKET	[	26	5
DECIMAL	3	26	6	3
RBRACKET	]	26	7
SEMICOLON	;	26	8
INT	int	26	9
ID	a1	26	12	0x55bb235f72c0
LBRACKET	[	26	14
DECIMAL	3	26	15	3
RBRACKET	]	26	16
SEMICOLON	;	26	17
INT	int	26	18
ID	a2	26	21	0x55bb235f72e8
LBRACKET	[	26	23
DECIMAL	3	26	24	3
RBRACKET	]	26	25
SEMICOLON	;	26	26
INT	int	26	27
ID	b0	26	30	0x55bb235f71f8
LBRACKET	[	26	32
DECIMAL	3	26	33	3
RBRACKET	]	26	34
SEMICOLON	;	26	35
INT	int	26	36
ID	b1	26	39	0x55bb235f7310
LBRACKET	[	26	41
DECIMAL	3	26	42	3
RBRACKET	]	26	43
SEMICOLON	;	26	44
INT	int	26	45
ID	b2	26	48	0x55bb235f7338
LBRACKET	[	26	50
DECIMAL	3	26	51	3
RBRACKET	]	26	52
SEMICOLON	;	26	53
INT	int	26	54
ID	c0	26	57	0x55bb235f7220
LBRACKET	[	26	59
DECIMAL	6	26	60	6
RBRACKET	]	26	61
SEMICOLON	;	26	62
INT	int	26	63
ID	c1	26	66	0x55bb235f7360
LBRACKET	[	26	68
DECIMAL	3	26	69	3
RBRACKET	]	26	70
SEMICOLON	;	26	71
INT	int	26	72
ID	c2	26	75	0x55bb235f7388
LBRACKET	[	26	77
DECIMAL	3	26	78	3
RBRACKET	]	26	79
SEMICOLON	;	26	80
INT	int	27	0
ID	i	27	3	0x55bb235f7248
SEMICOLON	;	27	4
ID	i	28	0	0x55bb235f7248
ASSIGN	=	28	1
DECIMAL	0	28	2	0
SEMICOLON	;	28	3
WHILE	while	29	0
LPAREN	(	29	5
ID	i	29	6	0x55bb235f7248
LESS	<	29	7
DECIMAL	3	29	8	3
RPAREN	)	29	9
LBRACE	{	30	0
ID	a0	31	0	0x55bb235f71d0
LBRACKET	[	31	2
ID	i	31	3	0x55bb235f7248
RBRACKET	]	31	4
ASSIGN	=	31	5
ID	i	31	6	0x55bb235f7248
SEMICOLON	;	31	7
ID	a1	32	0	0x55bb235f72c0
LBRACKET	[	32	2
ID	i	32	3	0x55bb235f7248
RBRACKET	]	32	4
ASSIGN	=	32	5
ID	i	32	6	0x55bb235f7248
SEMICOLON	;	32	7
ID	a2	33	0	0x55bb235f72e8
LBRACKET	[	33	2
ID	i	33	3	0x55bb235f7248
RBRACKET	]	33	4
ASSIGN	=	33	5
ID	i	33	6	0x55bb235f7248
SEMICOLON	;	33	7
ID	b0	34	0	0x55bb235f71f8
LBRACKET	[	34	2
ID	i	34	3	0x55bb235f7248
RBRACKET	]	34	4
ASSIGN	=	34	5
ID	i	34	6	0x55bb235f7248
SEMICOLON	;	34	7
ID	b1	35	0	0x55bb235f7310
LBRACKET	[	35	2
ID	i	35	3	0x55bb235f7248
RBRACKET	]	35	4
ASSIGN	=	35	5
ID	i	35	6	0x55bb235f7248
SEMICOLON	;	35	7
ID	b2	36	0	0x55bb235f7338
LBRACKET	[	36	2
ID	i	36	3	0x55bb235f7248
RBRACKET	]	36	4
ASSIGN	=	36	5
ID	i	36	6	0x55bb235f7248
SEMICOLON	;	36	7
ID	i	37	0	0x55bb235f7248
ASSIGN	=	37	1
ID	i	37	2	0x55bb235f7248
ADD	+	37	3
DECIMAL	1	37	4	1
SEMICOLON	;	37	5
RBRACE	}	38	0
ID	i	39	0	0x55bb235f7248
ASSIGN	=	39	1
ID	concat	39	2	0x55bb235f71a8
LPAREN	(	39	8
ID	a0	39	9	0x55bb235f71d0
COMMA	,	39	11
ID	b0	39	12	0x55bb235f71f8
COMMA	,	39	14
ID	c0	39	15	0x55bb235f7220
RPAREN	)	39	17
SEMICOLON	;	39	18
INT	int	40	0
ID	x	40	3	0x55bb235f73b0
SEMICOLON	;	40	4
WHILE	while	41	0
LPAREN	(	41	5
ID	i	41	6	0x55bb235f7248
LESS	<	41	7
DECIMAL	6	41	8	6
RPAREN	)	41	9
LBRACE	{	42	0
ID	x	43	0	0x55bb235f73b0
ASSIGN	=	43	1
ID	c0	43	2	0x55bb235f7220
LBRACKET	[	43	4
ID	i	43	5	0x55bb235f7248
RBRACKET	]	43	6
SEMICOLON	;	43	7
ID	putint	44	0	0x55bb235f73d8
LPAREN	(	44	6
ID	x	44	7	0x55bb235f73b0
RPAREN	)	44	8
SEMICOLON	;	44	9
ID	i	45	0	0x55bb235f7248
ASSIGN	=	45	1
ID	i	45	2	0x55bb235f7248
ADD	+	45	3
DECIMAL	1	45	4	1
SEMICOLON	;	45	5
RBRACE	}	46	0
ID	x	47	0	0x55bb235f73b0
ASSIGN	=	47	1
DECIMAL	10	47	2	10
SEMICOLON	;	47	4
ID	putch	48	0	0x55bb235f7400
LPAREN	(	48	5
ID	x	48	6	0x55bb235f73b0
RPAREN	)	48	7
SEMICOLON	;	48	8
RETURN	return	50	0
DECIMAL	0	50	6	0
SEMICOLON	;	50	7
RBRACE	}	51	0
