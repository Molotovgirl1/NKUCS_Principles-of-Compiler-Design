INT	int	0	0
ID	n	0	3	0x5555e73f91a8
SEMICOLON	;	0	4
INT	int	1	0
ID	insertsort	1	3	0x5555e73f91d0
LPAREN	(	1	13
INT	int	1	14
ID	a	1	17	0x5555e73f91f8
LBRACKET	[	1	18
RBRACKET	]	1	19
RPAREN	)	1	20
LBRACE	{	2	0
INT	int	3	0
ID	i	3	3	0x5555e73f9220
SEMICOLON	;	3	4
ID	i	4	0	0x5555e73f9220
ASSIGN	=	4	1
DECIMAL	1	4	2	1
SEMICOLON	;	4	3
WHILE	while	5	0
LPAREN	(	5	5
ID	i	5	6	0x5555e73f9220
LESS	<	5	7
ID	n	5	8	0x5555e73f91a8
RPAREN	)	5	9
LBRACE	{	6	0
INT	int	7	0
ID	temp	7	3	0x5555e73f9248
SEMICOLON	;	7	7
ID	temp	8	0	0x5555e73f9248
ASSIGN	=	8	4
ID	a	8	5	0x5555e73f91f8
LBRACKET	[	8	6
ID	i	8	7	0x5555e73f9220
RBRACKET	]	8	8
SEMICOLON	;	8	9
INT	int	9	0
ID	j	9	3	0x5555e73f9270
SEMICOLON	;	9	4
ID	j	10	0	0x5555e73f9270
ASSIGN	=	10	1
ID	i	10	2	0x5555e73f9220
SUB	-	10	3
DECIMAL	1	10	4	1
SEMICOLON	;	10	5
WHILE	while	11	0
LPAREN	(	11	5
ID	j	11	6	0x5555e73f9270
GREATER	>	11	7
SUB	-	11	8
DECIMAL	1	11	9	1
AND	&&	11	10
ID	temp	11	12	0x5555e73f9248
LESS	<	11	16
ID	a	11	17	0x5555e73f91f8
LBRACKET	[	11	18
ID	j	11	19	0x5555e73f9270
RBRACKET	]	11	20
RPAREN	)	11	21
LBRACE	{	12	0
ID	a	13	0	0x5555e73f91f8
LBRACKET	[	13	1
ID	j	13	2	0x5555e73f9270
ADD	+	13	3
DECIMAL	1	13	4	1
RBRACKET	]	13	5
ASSIGN	=	13	6
ID	a	13	7	0x5555e73f91f8
LBRACKET	[	13	8
ID	j	13	9	0x5555e73f9270
RBRACKET	]	13	10
SEMICOLON	;	13	11
ID	j	14	0	0x5555e73f9270
ASSIGN	=	14	1
ID	j	14	2	0x5555e73f9270
SUB	-	14	3
DECIMAL	1	14	4	1
SEMICOLON	;	14	5
RBRACE	}	15	0
ID	a	16	0	0x5555e73f91f8
LBRACKET	[	16	1
ID	j	16	2	0x5555e73f9270
ADD	+	16	3
DECIMAL	1	16	4	1
RBRACKET	]	16	5
ASSIGN	=	16	6
ID	temp	16	7	0x5555e73f9248
SEMICOLON	;	16	11
ID	i	17	0	0x5555e73f9220
ASSIGN	=	17	1
ID	i	17	2	0x5555e73f9220
ADD	+	17	3
DECIMAL	1	17	4	1
SEMICOLON	;	17	5
RBRACE	}	18	0
RETURN	return	19	0
DECIMAL	0	19	6	0
SEMICOLON	;	19	7
RBRACE	}	20	0
INT	int	22	0
ID	main	22	3	0x5555e73f9298
LPAREN	(	22	7
RPAREN	)	22	8
LBRACE	{	22	9
ID	n	23	0	0x5555e73f91a8
ASSIGN	=	23	1
DECIMAL	10	23	2	10
SEMICOLON	;	23	4
INT	int	24	0
ID	a	24	3	0x5555e73f91f8
LBRACKET	[	24	4
DECIMAL	10	24	5	10
RBRACKET	]	24	7
SEMICOLON	;	24	8
ID	a	25	0	0x5555e73f91f8
LBRACKET	[	25	1
DECIMAL	0	25	2	0
RBRACKET	]	25	3
ASSIGN	=	25	4
DECIMAL	4	25	5	4
SEMICOLON	;	25	6
ID	a	25	7	0x5555e73f91f8
LBRACKET	[	25	8
DECIMAL	1	25	9	1
RBRACKET	]	25	10
ASSIGN	=	25	11
DECIMAL	3	25	12	3
SEMICOLON	;	25	13
ID	a	25	14	0x5555e73f91f8
LBRACKET	[	25	15
DECIMAL	2	25	16	2
RBRACKET	]	25	17
ASSIGN	=	25	18
DECIMAL	9	25	19	9
SEMICOLON	;	25	20
ID	a	25	21	0x5555e73f91f8
LBRACKET	[	25	22
DECIMAL	3	25	23	3
RBRACKET	]	25	24
ASSIGN	=	25	25
DECIMAL	2	25	26	2
SEMICOLON	;	25	27
ID	a	25	28	0x5555e73f91f8
LBRACKET	[	25	29
DECIMAL	4	25	30	4
RBRACKET	]	25	31
ASSIGN	=	25	32
DECIMAL	0	25	33	0
SEMICOLON	;	25	34
ID	a	26	0	0x5555e73f91f8
LBRACKET	[	26	1
DECIMAL	5	26	2	5
RBRACKET	]	26	3
ASSIGN	=	26	4
DECIMAL	1	26	5	1
SEMICOLON	;	26	6
ID	a	26	7	0x5555e73f91f8
LBRACKET	[	26	8
DECIMAL	6	26	9	6
RBRACKET	]	26	10
ASSIGN	=	26	11
DECIMAL	6	26	12	6
SEMICOLON	;	26	13
ID	a	26	14	0x5555e73f91f8
LBRACKET	[	26	15
DECIMAL	7	26	16	7
RBRACKET	]	26	17
ASSIGN	=	26	18
DECIMAL	5	26	19	5
SEMICOLON	;	26	20
ID	a	26	21	0x5555e73f91f8
LBRACKET	[	26	22
DECIMAL	8	26	23	8
RBRACKET	]	26	24
ASSIGN	=	26	25
DECIMAL	7	26	26	7
SEMICOLON	;	26	27
ID	a	26	28	0x5555e73f91f8
LBRACKET	[	26	29
DECIMAL	9	26	30	9
RBRACKET	]	26	31
ASSIGN	=	26	32
DECIMAL	8	26	33	8
SEMICOLON	;	26	34
INT	int	27	0
ID	i	27	3	0x5555e73f9220
SEMICOLON	;	27	4
ID	i	28	0	0x5555e73f9220
ASSIGN	=	28	1
ID	insertsort	28	2	0x5555e73f91d0
LPAREN	(	28	12
ID	a	28	13	0x5555e73f91f8
RPAREN	)	28	14
SEMICOLON	;	28	15
WHILE	while	29	0
LPAREN	(	29	5
ID	i	29	6	0x5555e73f9220
LESS	<	29	7
ID	n	29	8	0x5555e73f91a8
RPAREN	)	29	9
LBRACE	{	29	10
INT	int	30	0
ID	tmp	30	3	0x5555e73f92c0
SEMICOLON	;	30	6
ID	tmp	31	0	0x5555e73f92c0
ASSIGN	=	31	3
ID	a	31	4	0x5555e73f91f8
LBRACKET	[	31	5
ID	i	31	6	0x5555e73f9220
RBRACKET	]	31	7
SEMICOLON	;	31	8
ID	putint	32	0	0x5555e73f92e8
LPAREN	(	32	6
ID	tmp	32	7	0x5555e73f92c0
RPAREN	)	32	10
SEMICOLON	;	32	11
ID	tmp	33	0	0x5555e73f92c0
ASSIGN	=	33	3
DECIMAL	10	33	4	10
SEMICOLON	;	33	6
ID	putch	34	0	0x5555e73f9310
LPAREN	(	34	5
ID	tmp	34	6	0x5555e73f92c0
RPAREN	)	34	9
SEMICOLON	;	34	10
ID	i	35	0	0x5555e73f9220
ASSIGN	=	35	1
ID	i	35	2	0x5555e73f9220
ADD	+	35	3
DECIMAL	1	35	4	1
SEMICOLON	;	35	5
RBRACE	}	36	0
RETURN	return	37	0
DECIMAL	0	37	6	0
SEMICOLON	;	37	7
RBRACE	}	38	0
