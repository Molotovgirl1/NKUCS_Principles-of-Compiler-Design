INT	int	0	0
ID	n	0	3	0x5600560751a8
SEMICOLON	;	0	4
INT	int	1	0
ID	bubblesort	1	3	0x5600560751d0
LPAREN	(	1	13
INT	int	1	14
ID	arr	1	17	0x5600560751f8
LBRACKET	[	1	20
RBRACKET	]	1	21
RPAREN	)	1	22
LBRACE	{	2	0
INT	int	3	0
ID	i	3	3	0x560056075220
SEMICOLON	;	3	4
INT	int	4	0
ID	j	4	3	0x560056075248
SEMICOLON	;	4	4
ID	i	5	0	0x560056075220
ASSIGN	=	5	1
DECIMAL	0	5	2	0
SEMICOLON	;	5	3
WHILE	while	6	0
LPAREN	(	6	5
ID	i	6	6	0x560056075220
LESS	<	6	7
ID	n	6	8	0x5600560751a8
SUB	-	6	9
DECIMAL	1	6	10	1
RPAREN	)	6	11
LBRACE	{	6	12
ID	j	8	0	0x560056075248
ASSIGN	=	8	1
DECIMAL	0	8	2	0
SEMICOLON	;	8	3
WHILE	while	9	0
LPAREN	(	9	5
ID	j	9	6	0x560056075248
LESS	<	9	7
ID	n	9	8	0x5600560751a8
SUB	-	9	9
ID	i	9	10	0x560056075220
SUB	-	9	11
DECIMAL	1	9	12	1
RPAREN	)	9	13
LBRACE	{	9	14
IF	if	10	0
LPAREN	(	10	2
ID	arr	10	3	0x5600560751f8
LBRACKET	[	10	6
ID	j	10	7	0x560056075248
RBRACKET	]	10	8
GREATER	>	10	9
ID	arr	10	10	0x5600560751f8
LBRACKET	[	10	13
ID	j	10	14	0x560056075248
ADD	+	10	15
DECIMAL	1	10	16	1
RBRACKET	]	10	17
RPAREN	)	10	18
LBRACE	{	10	19
INT	int	12	0
ID	tmp	12	3	0x560056075270
SEMICOLON	;	12	6
ID	tmp	13	0	0x560056075270
ASSIGN	=	13	3
ID	arr	13	4	0x5600560751f8
LBRACKET	[	13	7
ID	j	13	8	0x560056075248
ADD	+	13	9
DECIMAL	1	13	10	1
RBRACKET	]	13	11
SEMICOLON	;	13	12
ID	arr	14	0	0x5600560751f8
LBRACKET	[	14	3
ID	j	14	4	0x560056075248
ADD	+	14	5
DECIMAL	1	14	6	1
RBRACKET	]	14	7
ASSIGN	=	14	8
ID	arr	14	9	0x5600560751f8
LBRACKET	[	14	12
ID	j	14	13	0x560056075248
RBRACKET	]	14	14
SEMICOLON	;	14	15
ID	arr	15	0	0x5600560751f8
LBRACKET	[	15	3
ID	j	15	4	0x560056075248
RBRACKET	]	15	5
ASSIGN	=	15	6
ID	tmp	15	7	0x560056075270
SEMICOLON	;	15	10
RBRACE	}	16	0
ID	j	17	0	0x560056075248
ASSIGN	=	17	1
ID	j	17	2	0x560056075248
ADD	+	17	3
DECIMAL	1	17	4	1
SEMICOLON	;	17	5
RBRACE	}	18	0
ID	i	19	0	0x560056075220
ASSIGN	=	19	1
ID	i	19	2	0x560056075220
ADD	+	19	3
DECIMAL	1	19	4	1
SEMICOLON	;	19	5
RBRACE	}	20	0
RETURN	return	21	0
DECIMAL	0	21	6	0
SEMICOLON	;	21	7
RBRACE	}	22	0
INT	int	24	0
ID	main	24	3	0x560056075298
LPAREN	(	24	7
RPAREN	)	24	8
LBRACE	{	24	9
ID	n	25	0	0x5600560751a8
ASSIGN	=	25	1
DECIMAL	10	25	2	10
SEMICOLON	;	25	4
INT	int	26	0
ID	a	26	3	0x5600560752c0
LBRACKET	[	26	4
DECIMAL	10	26	5	10
RBRACKET	]	26	7
SEMICOLON	;	26	8
ID	a	27	0	0x5600560752c0
LBRACKET	[	27	1
DECIMAL	0	27	2	0
RBRACKET	]	27	3
ASSIGN	=	27	4
DECIMAL	4	27	5	4
SEMICOLON	;	27	6
ID	a	27	7	0x5600560752c0
LBRACKET	[	27	8
DECIMAL	1	27	9	1
RBRACKET	]	27	10
ASSIGN	=	27	11
DECIMAL	3	27	12	3
SEMICOLON	;	27	13
ID	a	27	14	0x5600560752c0
LBRACKET	[	27	15
DECIMAL	2	27	16	2
RBRACKET	]	27	17
ASSIGN	=	27	18
DECIMAL	9	27	19	9
SEMICOLON	;	27	20
ID	a	27	21	0x5600560752c0
LBRACKET	[	27	22
DECIMAL	3	27	23	3
RBRACKET	]	27	24
ASSIGN	=	27	25
DECIMAL	2	27	26	2
SEMICOLON	;	27	27
ID	a	27	28	0x5600560752c0
LBRACKET	[	27	29
DECIMAL	4	27	30	4
RBRACKET	]	27	31
ASSIGN	=	27	32
DECIMAL	0	27	33	0
SEMICOLON	;	27	34
ID	a	28	0	0x5600560752c0
LBRACKET	[	28	1
DECIMAL	5	28	2	5
RBRACKET	]	28	3
ASSIGN	=	28	4
DECIMAL	1	28	5	1
SEMICOLON	;	28	6
ID	a	28	7	0x5600560752c0
LBRACKET	[	28	8
DECIMAL	6	28	9	6
RBRACKET	]	28	10
ASSIGN	=	28	11
DECIMAL	6	28	12	6
SEMICOLON	;	28	13
ID	a	28	14	0x5600560752c0
LBRACKET	[	28	15
DECIMAL	7	28	16	7
RBRACKET	]	28	17
ASSIGN	=	28	18
DECIMAL	5	28	19	5
SEMICOLON	;	28	20
ID	a	28	21	0x5600560752c0
LBRACKET	[	28	22
DECIMAL	8	28	23	8
RBRACKET	]	28	24
ASSIGN	=	28	25
DECIMAL	7	28	26	7
SEMICOLON	;	28	27
ID	a	28	28	0x5600560752c0
LBRACKET	[	28	29
DECIMAL	9	28	30	9
RBRACKET	]	28	31
ASSIGN	=	28	32
DECIMAL	8	28	33	8
SEMICOLON	;	28	34
INT	int	29	0
ID	i	29	3	0x560056075220
SEMICOLON	;	29	4
ID	i	30	0	0x560056075220
ASSIGN	=	30	1
ID	bubblesort	30	2	0x5600560751d0
LPAREN	(	30	12
ID	a	30	13	0x5600560752c0
RPAREN	)	30	14
SEMICOLON	;	30	15
WHILE	while	31	0
LPAREN	(	31	5
ID	i	31	6	0x560056075220
LESS	<	31	7
ID	n	31	8	0x5600560751a8
RPAREN	)	31	9
LBRACE	{	31	10
INT	int	32	0
ID	tmp	32	3	0x560056075270
SEMICOLON	;	32	6
ID	tmp	33	0	0x560056075270
ASSIGN	=	33	3
ID	a	33	4	0x5600560752c0
LBRACKET	[	33	5
ID	i	33	6	0x560056075220
RBRACKET	]	33	7
SEMICOLON	;	33	8
ID	putint	34	0	0x5600560752e8
LPAREN	(	34	6
ID	tmp	34	7	0x560056075270
RPAREN	)	34	10
SEMICOLON	;	34	11
ID	tmp	35	0	0x560056075270
ASSIGN	=	35	3
DECIMAL	10	35	4	10
SEMICOLON	;	35	6
ID	putch	36	0	0x560056075310
LPAREN	(	36	5
ID	tmp	36	6	0x560056075270
RPAREN	)	36	9
SEMICOLON	;	36	10
ID	i	37	0	0x560056075220
ASSIGN	=	37	1
ID	i	37	2	0x560056075220
ADD	+	37	3
DECIMAL	1	37	4	1
SEMICOLON	;	37	5
RBRACE	}	38	0
RETURN	return	39	0
DECIMAL	0	39	6	0
SEMICOLON	;	39	7
RBRACE	}	40	0
