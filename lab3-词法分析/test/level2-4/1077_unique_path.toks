INT	int	0	0
ID	uniquePaths	0	3	0x55a9b74c41a8
LPAREN	(	0	14
INT	int	0	15
ID	m	0	18	0x55a9b74c41d0
COMMA	,	0	19
INT	int	0	20
ID	n	0	23	0x55a9b74c41f8
RPAREN	)	0	24
LBRACE	{	0	25
IF	if	1	0
LPAREN	(	1	2
ID	m	1	3	0x55a9b74c41d0
EQUAL	==	1	4
DECIMAL	1	1	6	1
OR	||	1	7
ID	n	1	9	0x55a9b74c41f8
EQUAL	==	1	10
DECIMAL	1	1	12	1
RPAREN	)	1	13
RETURN	return	2	0
DECIMAL	1	2	6	1
SEMICOLON	;	2	7
INT	int	4	0
ID	dp	4	3	0x55a9b74c4220
LBRACKET	[	4	5
DECIMAL	9	4	6	9
RBRACKET	]	4	7
SEMICOLON	;	4	8
INT	int	5	0
ID	i	5	3	0x55a9b74c4248
SEMICOLON	;	5	4
INT	int	6	0
ID	j	6	3	0x55a9b74c4270
SEMICOLON	;	6	4
ID	i	7	0	0x55a9b74c4248
ASSIGN	=	7	1
DECIMAL	0	7	2	0
SEMICOLON	;	7	3
WHILE	while	8	0
LPAREN	(	8	5
ID	i	8	6	0x55a9b74c4248
LESS	<	8	7
ID	m	8	8	0x55a9b74c41d0
RPAREN	)	8	9
LBRACE	{	8	10
ID	dp	9	0	0x55a9b74c4220
LBRACKET	[	9	2
ID	i	9	3	0x55a9b74c4248
MUL	*	9	4
DECIMAL	3	9	5	3
ADD	+	9	6
ID	n	9	7	0x55a9b74c41f8
SUB	-	9	8
DECIMAL	1	9	9	1
RBRACKET	]	9	10
ASSIGN	=	9	11
DECIMAL	1	9	12	1
SEMICOLON	;	9	13
ID	i	10	0	0x55a9b74c4248
ASSIGN	=	10	1
ID	i	10	2	0x55a9b74c4248
ADD	+	10	3
DECIMAL	1	10	4	1
SEMICOLON	;	10	5
RBRACE	}	11	0
ID	i	12	0	0x55a9b74c4248
ASSIGN	=	12	1
DECIMAL	0	12	2	0
SEMICOLON	;	12	3
WHILE	while	13	0
LPAREN	(	13	5
ID	i	13	6	0x55a9b74c4248
LESS	<	13	7
ID	n	13	8	0x55a9b74c41f8
RPAREN	)	13	9
LBRACE	{	13	10
ID	dp	14	0	0x55a9b74c4220
LBRACKET	[	14	2
LPAREN	(	14	3
ID	m	14	4	0x55a9b74c41d0
SUB	-	14	5
DECIMAL	1	14	6	1
RPAREN	)	14	7
MUL	*	14	8
DECIMAL	3	14	9	3
ADD	+	14	10
ID	i	14	11	0x55a9b74c4248
RBRACKET	]	14	12
ASSIGN	=	14	13
DECIMAL	1	14	14	1
SEMICOLON	;	14	15
ID	i	15	0	0x55a9b74c4248
ASSIGN	=	15	1
ID	i	15	2	0x55a9b74c4248
ADD	+	15	3
DECIMAL	1	15	4	1
SEMICOLON	;	15	5
RBRACE	}	16	0
ID	i	17	0	0x55a9b74c4248
ASSIGN	=	17	1
ID	m	17	2	0x55a9b74c41d0
SUB	-	17	3
DECIMAL	2	17	4	2
SEMICOLON	;	17	5
WHILE	while	18	0
LPAREN	(	18	5
ID	i	18	6	0x55a9b74c4248
GREATER	>	18	7
SUB	-	18	8
DECIMAL	1	18	9	1
RPAREN	)	18	10
LBRACE	{	18	11
ID	j	19	0	0x55a9b74c4270
ASSIGN	=	19	1
ID	n	19	2	0x55a9b74c41f8
SUB	-	19	3
DECIMAL	2	19	4	2
SEMICOLON	;	19	5
WHILE	while	20	0
LPAREN	(	20	5
ID	j	20	6	0x55a9b74c4270
GREATER	>	20	7
SUB	-	20	8
DECIMAL	1	20	9	1
RPAREN	)	20	10
LBRACE	{	20	11
ID	dp	21	0	0x55a9b74c4220
LBRACKET	[	21	2
ID	i	21	3	0x55a9b74c4248
MUL	*	21	4
DECIMAL	3	21	5	3
ADD	+	21	6
ID	j	21	7	0x55a9b74c4270
RBRACKET	]	21	8
ASSIGN	=	21	9
ID	dp	21	10	0x55a9b74c4220
LBRACKET	[	21	12
LPAREN	(	21	13
ID	i	21	14	0x55a9b74c4248
ADD	+	21	15
DECIMAL	1	21	16	1
RPAREN	)	21	17
MUL	*	21	18
DECIMAL	3	21	19	3
ADD	+	21	20
ID	j	21	21	0x55a9b74c4270
RBRACKET	]	21	22
ADD	+	21	23
ID	dp	21	24	0x55a9b74c4220
LBRACKET	[	21	26
ID	i	21	27	0x55a9b74c4248
MUL	*	21	28
DECIMAL	3	21	29	3
ADD	+	21	30
ID	j	21	31	0x55a9b74c4270
ADD	+	21	32
DECIMAL	1	21	33	1
RBRACKET	]	21	34
SEMICOLON	;	21	35
ID	j	22	0	0x55a9b74c4270
ASSIGN	=	22	1
ID	j	22	2	0x55a9b74c4270
SUB	-	22	3
DECIMAL	1	22	4	1
SEMICOLON	;	22	5
RBRACE	}	23	0
ID	i	24	0	0x55a9b74c4248
ASSIGN	=	24	1
ID	i	24	2	0x55a9b74c4248
SUB	-	24	3
DECIMAL	1	24	4	1
SEMICOLON	;	24	5
RBRACE	}	25	0
RETURN	return	26	0
ID	dp	26	6	0x55a9b74c4220
LBRACKET	[	26	8
DECIMAL	0	26	9	0
RBRACKET	]	26	10
SEMICOLON	;	26	11
RBRACE	}	27	0
INT	int	28	0
ID	main	28	3	0x55a9b74c4298
LPAREN	(	28	7
RPAREN	)	28	8
LBRACE	{	28	9
INT	int	29	0
ID	res	29	3	0x55a9b74c42c0
SEMICOLON	;	29	6
INT	int	30	0
ID	n	30	3	0x55a9b74c41f8
SEMICOLON	;	30	4
ID	n	31	0	0x55a9b74c41f8
ASSIGN	=	31	1
DECIMAL	3	31	2	3
SEMICOLON	;	31	3
ID	res	32	0	0x55a9b74c42c0
ASSIGN	=	32	3
ID	uniquePaths	32	4	0x55a9b74c41a8
LPAREN	(	32	15
ID	n	32	16	0x55a9b74c41f8
COMMA	,	32	17
ID	n	32	18	0x55a9b74c41f8
RPAREN	)	32	19
SEMICOLON	;	32	20
RETURN	return	33	0
ID	res	33	6	0x55a9b74c42c0
SEMICOLON	;	33	9
RBRACE	}	34	0
