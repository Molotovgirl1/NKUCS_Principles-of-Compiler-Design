INT	int	0	0
ID	exgcd	0	3	0x5567406a01a8
LPAREN	(	0	8
INT	int	0	9
ID	a	0	12	0x5567406a01d0
COMMA	,	0	13
INT	int	0	14
ID	b	0	17	0x5567406a01f8
COMMA	,	0	18
INT	int	0	19
ID	x	0	22	0x5567406a0220
LBRACKET	[	0	23
RBRACKET	]	0	24
COMMA	,	0	25
INT	int	0	26
ID	y	0	29	0x5567406a0248
LBRACKET	[	0	30
RBRACKET	]	0	31
RPAREN	)	0	32
LBRACE	{	0	33
IF	if	1	0
LPAREN	(	1	2
ID	b	1	3	0x5567406a01f8
EQUAL	==	1	4
DECIMAL	0	1	6	0
RPAREN	)	1	7
LBRACE	{	1	8
ID	x	2	0	0x5567406a0220
LBRACKET	[	2	1
DECIMAL	0	2	2	0
RBRACKET	]	2	3
ASSIGN	=	2	4
DECIMAL	1	2	5	1
SEMICOLON	;	2	6
ID	y	3	0	0x5567406a0248
LBRACKET	[	3	1
DECIMAL	0	3	2	0
RBRACKET	]	3	3
ASSIGN	=	3	4
DECIMAL	0	3	5	0
SEMICOLON	;	3	6
RETURN	return	4	0
ID	a	4	6	0x5567406a01d0
SEMICOLON	;	4	7
RBRACE	}	5	0
ELSE	else	6	0
LBRACE	{	6	4
INT	int	7	0
ID	r	7	3	0x5567406a0270
ASSIGN	=	7	4
ID	exgcd	7	5	0x5567406a01a8
LPAREN	(	7	10
ID	b	7	11	0x5567406a01f8
COMMA	,	7	12
ID	a	7	13	0x5567406a01d0
MOD	%	7	14
ID	b	7	15	0x5567406a01f8
COMMA	,	7	16
ID	x	7	17	0x5567406a0220
COMMA	,	7	18
ID	y	7	19	0x5567406a0248
RPAREN	)	7	20
SEMICOLON	;	7	21
INT	int	8	0
ID	t	8	3	0x5567406a0298
ASSIGN	=	8	4
ID	x	8	5	0x5567406a0220
LBRACKET	[	8	6
DECIMAL	0	8	7	0
RBRACKET	]	8	8
SEMICOLON	;	8	9
ID	x	9	0	0x5567406a0220
LBRACKET	[	9	1
DECIMAL	0	9	2	0
RBRACKET	]	9	3
ASSIGN	=	9	4
ID	y	9	5	0x5567406a0248
LBRACKET	[	9	6
DECIMAL	0	9	7	0
RBRACKET	]	9	8
SEMICOLON	;	9	9
ID	y	10	0	0x5567406a0248
LBRACKET	[	10	1
DECIMAL	0	10	2	0
RBRACKET	]	10	3
ASSIGN	=	10	4
LPAREN	(	10	5
ID	t	10	6	0x5567406a0298
SUB	-	10	7
ID	a	10	8	0x5567406a01d0
DIV	/	10	9
ID	b	10	10	0x5567406a01f8
MUL	*	10	11
ID	y	10	12	0x5567406a0248
LBRACKET	[	10	13
DECIMAL	0	10	14	0
RBRACKET	]	10	15
RPAREN	)	10	16
SEMICOLON	;	10	17
RETURN	return	11	0
ID	r	11	6	0x5567406a0270
SEMICOLON	;	11	7
RBRACE	}	12	0
RBRACE	}	13	0
INT	int	15	0
ID	main	15	3	0x5567406a02c0
LPAREN	(	15	7
RPAREN	)	15	8
LBRACE	{	15	9
INT	int	16	0
ID	a	16	3	0x5567406a01d0
ASSIGN	=	16	4
DECIMAL	7	16	5	7
COMMA	,	16	6
ID	b	16	7	0x5567406a01f8
ASSIGN	=	16	8
DECIMAL	15	16	9	15
COMMA	,	16	11
ID	x	16	12	0x5567406a0220
LBRACKET	[	16	13
DECIMAL	1	16	14	1
RBRACKET	]	16	15
ASSIGN	=	16	16
LBRACE	{	16	17
DECIMAL	1	16	18	1
RBRACE	}	16	19
COMMA	,	16	20
ID	y	16	21	0x5567406a0248
LBRACKET	[	16	22
DECIMAL	1	16	23	1
RBRACKET	]	16	24
ASSIGN	=	16	25
LBRACE	{	16	26
DECIMAL	1	16	27	1
RBRACE	}	16	28
SEMICOLON	;	16	29
ID	exgcd	17	0	0x5567406a01a8
LPAREN	(	17	5
ID	a	17	6	0x5567406a01d0
COMMA	,	17	7
ID	b	17	8	0x5567406a01f8
COMMA	,	17	9
ID	x	17	10	0x5567406a0220
COMMA	,	17	11
ID	y	17	12	0x5567406a0248
RPAREN	)	17	13
SEMICOLON	;	17	14
ID	x	18	0	0x5567406a0220
LBRACKET	[	18	1
DECIMAL	0	18	2	0
RBRACKET	]	18	3
ASSIGN	=	18	4
LPAREN	(	18	5
ID	x	18	6	0x5567406a0220
LBRACKET	[	18	7
DECIMAL	0	18	8	0
RBRACKET	]	18	9
MOD	%	18	10
ID	b	18	11	0x5567406a01f8
ADD	+	18	12
ID	b	18	13	0x5567406a01f8
RPAREN	)	18	14
MOD	%	18	15
ID	b	18	16	0x5567406a01f8
SEMICOLON	;	18	17
ID	putint	19	0	0x5567406a02e8
LPAREN	(	19	6
ID	x	19	7	0x5567406a0220
LBRACKET	[	19	8
DECIMAL	0	19	9	0
RBRACKET	]	19	10
RPAREN	)	19	11
SEMICOLON	;	19	12
RETURN	return	20	0
DECIMAL	0	20	6	0
SEMICOLON	;	20	7
RBRACE	}	21	0
