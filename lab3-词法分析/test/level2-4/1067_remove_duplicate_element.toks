INT	int	0	0
ID	removeElement	0	3	0x55b2880671a8
LPAREN	(	0	16
INT	int	0	17
ID	nums	0	20	0x55b2880671d0
LBRACKET	[	0	24
RBRACKET	]	0	25
COMMA	,	0	26
INT	int	0	27
ID	n	0	30	0x55b2880671f8
COMMA	,	0	31
INT	int	0	32
ID	val	0	35	0x55b288067220
RPAREN	)	0	38
LBRACE	{	0	39
INT	int	1	0
ID	i	1	3	0x55b288067248
SEMICOLON	;	1	4
ID	i	2	0	0x55b288067248
ASSIGN	=	2	1
DECIMAL	0	2	2	0
SEMICOLON	;	2	3
WHILE	while	3	0
LPAREN	(	3	5
ID	i	3	6	0x55b288067248
LESS	<	3	7
ID	n	3	8	0x55b2880671f8
RPAREN	)	3	9
LBRACE	{	3	10
IF	if	4	0
LPAREN	(	4	2
ID	nums	4	3	0x55b2880671d0
LBRACKET	[	4	7
ID	i	4	8	0x55b288067248
RBRACKET	]	4	9
EQUAL	==	4	10
ID	val	4	12	0x55b288067220
RPAREN	)	4	15
LBRACE	{	4	16
ID	nums	5	0	0x55b2880671d0
LBRACKET	[	5	4
ID	i	5	5	0x55b288067248
RBRACKET	]	5	6
ASSIGN	=	5	7
ID	nums	5	8	0x55b2880671d0
LBRACKET	[	5	12
ID	n	5	13	0x55b2880671f8
SUB	-	5	14
DECIMAL	1	5	15	1
RBRACKET	]	5	16
SEMICOLON	;	5	17
ID	n	6	0	0x55b2880671f8
ASSIGN	=	6	1
ID	n	6	2	0x55b2880671f8
SUB	-	6	3
DECIMAL	1	6	4	1
SEMICOLON	;	6	5
RBRACE	}	7	0
ELSE	else	7	1
LBRACE	{	7	5
ID	i	8	0	0x55b288067248
ASSIGN	=	8	1
ID	i	8	2	0x55b288067248
ADD	+	8	3
DECIMAL	1	8	4	1
SEMICOLON	;	8	5
RBRACE	}	9	0
RBRACE	}	10	0
RETURN	return	11	0
ID	n	11	6	0x55b2880671f8
SEMICOLON	;	11	7
RBRACE	}	12	0
INT	int	13	0
ID	main	13	3	0x55b288067270
LPAREN	(	13	7
RPAREN	)	13	8
LBRACE	{	13	9
INT	int	14	0
ID	res	14	3	0x55b288067298
SEMICOLON	;	14	6
INT	int	15	0
ID	a	15	3	0x55b2880672c0
LBRACKET	[	15	4
DECIMAL	10	15	5	10
RBRACKET	]	15	7
SEMICOLON	;	15	8
ID	a	16	0	0x55b2880672c0
LBRACKET	[	16	1
DECIMAL	0	16	2	0
RBRACKET	]	16	3
ASSIGN	=	16	4
DECIMAL	3	16	5	3
SEMICOLON	;	16	6
ID	a	16	7	0x55b2880672c0
LBRACKET	[	16	8
DECIMAL	1	16	9	1
RBRACKET	]	16	10
ASSIGN	=	16	11
DECIMAL	3	16	12	3
SEMICOLON	;	16	13
ID	a	16	14	0x55b2880672c0
LBRACKET	[	16	15
DECIMAL	2	16	16	2
RBRACKET	]	16	17
ASSIGN	=	16	18
DECIMAL	9	16	19	9
SEMICOLON	;	16	20
ID	a	16	21	0x55b2880672c0
LBRACKET	[	16	22
DECIMAL	3	16	23	3
RBRACKET	]	16	24
ASSIGN	=	16	25
DECIMAL	0	16	26	0
SEMICOLON	;	16	27
ID	a	16	28	0x55b2880672c0
LBRACKET	[	16	29
DECIMAL	4	16	30	4
RBRACKET	]	16	31
ASSIGN	=	16	32
DECIMAL	0	16	33	0
SEMICOLON	;	16	34
ID	a	17	0	0x55b2880672c0
LBRACKET	[	17	1
DECIMAL	5	17	2	5
RBRACKET	]	17	3
ASSIGN	=	17	4
DECIMAL	1	17	5	1
SEMICOLON	;	17	6
ID	a	17	7	0x55b2880672c0
LBRACKET	[	17	8
DECIMAL	6	17	9	6
RBRACKET	]	17	10
ASSIGN	=	17	11
DECIMAL	1	17	12	1
SEMICOLON	;	17	13
ID	a	17	14	0x55b2880672c0
LBRACKET	[	17	15
DECIMAL	7	17	16	7
RBRACKET	]	17	17
ASSIGN	=	17	18
DECIMAL	5	17	19	5
SEMICOLON	;	17	20
ID	a	17	21	0x55b2880672c0
LBRACKET	[	17	22
DECIMAL	8	17	23	8
RBRACKET	]	17	24
ASSIGN	=	17	25
DECIMAL	7	17	26	7
SEMICOLON	;	17	27
ID	a	17	28	0x55b2880672c0
LBRACKET	[	17	29
DECIMAL	9	17	30	9
RBRACKET	]	17	31
ASSIGN	=	17	32
DECIMAL	8	17	33	8
SEMICOLON	;	17	34
ID	res	18	0	0x55b288067298
ASSIGN	=	18	3
DECIMAL	10	18	4	10
SEMICOLON	;	18	6
INT	int	19	0
ID	val	19	3	0x55b288067220
SEMICOLON	;	19	6
ID	val	20	0	0x55b288067220
ASSIGN	=	20	3
DECIMAL	3	20	4	3
SEMICOLON	;	20	5
ID	res	21	0	0x55b288067298
ASSIGN	=	21	3
ID	removeElement	21	4	0x55b2880671a8
LPAREN	(	21	17
ID	a	21	18	0x55b2880672c0
COMMA	,	21	19
ID	res	21	20	0x55b288067298
COMMA	,	21	23
ID	val	21	24	0x55b288067220
RPAREN	)	21	27
SEMICOLON	;	21	28
RETURN	return	22	0
ID	res	22	6	0x55b288067298
SEMICOLON	;	22	9
RBRACE	}	23	0
