INT	int	1	0
ID	N	1	3	0x55c8500821a8
SEMICOLON	;	1	4
INT	int	2	0
ID	insert	2	3	0x55c8500821d0
LPAREN	(	2	9
INT	int	2	10
ID	a	2	13	0x55c8500821f8
LBRACKET	[	2	14
RBRACKET	]	2	15
COMMA	,	2	16
INT	int	2	17
ID	x	2	20	0x55c850082220
RPAREN	)	2	21
LBRACE	{	3	0
INT	int	4	0
ID	p	4	3	0x55c850082248
SEMICOLON	;	4	4
INT	int	5	0
ID	i	5	3	0x55c850082270
SEMICOLON	;	5	4
ID	p	6	0	0x55c850082248
ASSIGN	=	6	1
DECIMAL	0	6	2	0
SEMICOLON	;	6	3
WHILE	while	8	0
LPAREN	(	8	5
ID	x	8	6	0x55c850082220
GREATER	>	8	7
ID	a	8	8	0x55c8500821f8
LBRACKET	[	8	9
ID	p	8	10	0x55c850082248
RBRACKET	]	8	11
AND	&&	8	12
ID	p	8	14	0x55c850082248
LESS	<	8	15
ID	N	8	16	0x55c8500821a8
RPAREN	)	8	17
ID	p	9	0	0x55c850082248
ASSIGN	=	9	1
ID	p	9	2	0x55c850082248
ADD	+	9	3
DECIMAL	1	9	4	1
SEMICOLON	;	9	5
ID	i	11	0	0x55c850082270
ASSIGN	=	11	1
ID	N	11	2	0x55c8500821a8
SEMICOLON	;	11	3
WHILE	while	12	0
LPAREN	(	12	5
ID	i	12	6	0x55c850082270
GREATER	>	12	7
ID	p	12	8	0x55c850082248
RPAREN	)	12	9
LBRACE	{	13	0
ID	a	14	0	0x55c8500821f8
LBRACKET	[	14	1
ID	i	14	2	0x55c850082270
RBRACKET	]	14	3
ASSIGN	=	14	4
ID	a	14	5	0x55c8500821f8
LBRACKET	[	14	6
ID	i	14	7	0x55c850082270
SUB	-	14	8
DECIMAL	1	14	9	1
RBRACKET	]	14	10
SEMICOLON	;	14	11
ID	a	15	0	0x55c8500821f8
LBRACKET	[	15	1
ID	p	15	2	0x55c850082248
RBRACKET	]	15	3
ASSIGN	=	15	4
ID	x	15	5	0x55c850082220
SEMICOLON	;	15	6
ID	i	16	0	0x55c850082270
ASSIGN	=	16	1
ID	i	16	2	0x55c850082270
SUB	-	16	3
DECIMAL	1	16	4	1
SEMICOLON	;	16	5
RBRACE	}	18	0
RETURN	return	20	0
DECIMAL	0	20	6	0
SEMICOLON	;	20	7
RBRACE	}	21	0
INT	int	23	0
ID	main	23	3	0x55c850082298
LPAREN	(	23	7
RPAREN	)	23	8
LBRACE	{	24	0
ID	N	25	0	0x55c8500821a8
ASSIGN	=	25	1
DECIMAL	10	25	2	10
SEMICOLON	;	25	4
INT	int	26	0
ID	a	26	3	0x55c8500821f8
LBRACKET	[	26	4
DECIMAL	11	26	5	11
RBRACKET	]	26	7
SEMICOLON	;	26	8
ID	a	28	0	0x55c8500821f8
LBRACKET	[	28	1
DECIMAL	0	28	2	0
RBRACKET	]	28	3
ASSIGN	=	28	4
DECIMAL	1	28	5	1
SEMICOLON	;	28	6
ID	a	29	0	0x55c8500821f8
LBRACKET	[	29	1
DECIMAL	1	29	2	1
RBRACKET	]	29	3
ASSIGN	=	29	4
DECIMAL	3	29	5	3
SEMICOLON	;	29	6
ID	a	30	0	0x55c8500821f8
LBRACKET	[	30	1
DECIMAL	2	30	2	2
RBRACKET	]	30	3
ASSIGN	=	30	4
DECIMAL	4	30	5	4
SEMICOLON	;	30	6
ID	a	31	0	0x55c8500821f8
LBRACKET	[	31	1
DECIMAL	3	31	2	3
RBRACKET	]	31	3
ASSIGN	=	31	4
DECIMAL	7	31	5	7
SEMICOLON	;	31	6
ID	a	32	0	0x55c8500821f8
LBRACKET	[	32	1
DECIMAL	4	32	2	4
RBRACKET	]	32	3
ASSIGN	=	32	4
DECIMAL	8	32	5	8
SEMICOLON	;	32	6
ID	a	33	0	0x55c8500821f8
LBRACKET	[	33	1
DECIMAL	5	33	2	5
RBRACKET	]	33	3
ASSIGN	=	33	4
DECIMAL	11	33	5	11
SEMICOLON	;	33	7
ID	a	34	0	0x55c8500821f8
LBRACKET	[	34	1
DECIMAL	6	34	2	6
RBRACKET	]	34	3
ASSIGN	=	34	4
DECIMAL	13	34	5	13
SEMICOLON	;	34	7
ID	a	35	0	0x55c8500821f8
LBRACKET	[	35	1
DECIMAL	7	35	2	7
RBRACKET	]	35	3
ASSIGN	=	35	4
DECIMAL	18	35	5	18
SEMICOLON	;	35	7
ID	a	36	0	0x55c8500821f8
LBRACKET	[	36	1
DECIMAL	8	36	2	8
RBRACKET	]	36	3
ASSIGN	=	36	4
DECIMAL	56	36	5	56
SEMICOLON	;	36	7
ID	a	37	0	0x55c8500821f8
LBRACKET	[	37	1
DECIMAL	9	37	2	9
RBRACKET	]	37	3
ASSIGN	=	37	4
DECIMAL	78	37	5	78
SEMICOLON	;	37	7
INT	int	38	0
ID	x	38	3	0x55c850082220
SEMICOLON	;	38	4
INT	int	39	0
ID	i	39	3	0x55c850082270
SEMICOLON	;	39	4
ID	i	40	0	0x55c850082270
ASSIGN	=	40	1
DECIMAL	0	40	2	0
SEMICOLON	;	40	3
ID	x	41	0	0x55c850082220
ASSIGN	=	41	1
ID	getint	41	2	0x55c8500822c0
LPAREN	(	41	8
RPAREN	)	41	9
SEMICOLON	;	41	10
ID	x	42	0	0x55c850082220
ASSIGN	=	42	1
ID	insert	42	2	0x55c8500821d0
LPAREN	(	42	8
ID	a	42	9	0x55c8500821f8
COMMA	,	42	10
ID	x	42	11	0x55c850082220
RPAREN	)	42	12
SEMICOLON	;	42	13
WHILE	while	44	0
LPAREN	(	44	5
ID	i	44	6	0x55c850082270
LESS	<	44	7
ID	N	44	8	0x55c8500821a8
RPAREN	)	44	9
LBRACE	{	45	0
ID	x	46	0	0x55c850082220
ASSIGN	=	46	1
ID	a	46	2	0x55c8500821f8
LBRACKET	[	46	3
ID	i	46	4	0x55c850082270
RBRACKET	]	46	5
SEMICOLON	;	46	6
ID	putint	47	0	0x55c8500822e8
LPAREN	(	47	6
ID	x	47	7	0x55c850082220
RPAREN	)	47	8
SEMICOLON	;	47	9
ID	x	48	0	0x55c850082220
ASSIGN	=	48	1
DECIMAL	10	48	2	10
SEMICOLON	;	48	4
ID	putch	49	0	0x55c850082310
LPAREN	(	49	5
ID	x	49	6	0x55c850082220
RPAREN	)	49	7
SEMICOLON	;	49	8
ID	i	50	0	0x55c850082270
ASSIGN	=	50	1
ID	i	50	2	0x55c850082270
ADD	+	50	3
DECIMAL	1	50	4	1
SEMICOLON	;	50	5
RBRACE	}	51	0
RETURN	return	53	0
DECIMAL	0	53	6	0
SEMICOLON	;	53	7
RBRACE	}	54	0
